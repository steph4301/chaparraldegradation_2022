pairwise.wilcox.test(density_dead$sum_density_m2,
density_dead$cluster,
p.adjust.method = "bonferroni")
# data:  density_dead$sum_density_m2 and density_dead$cluster
#
#   1      2      3      4
# 2 0.0125 -      -      -
# 3 1.0000 0.1131 -      -
# 4 0.0856 1.0000 1.0000 -
# 5 0.0095 1.0000 0.3553 1.0000
#
# P value adjustment method: bonferroni
# significance
# 1 a
# 3 ac
# 2 bc
# 4 ac
# 5 bc
###############. TABLE
densitymeans_bycluster_TABLE_prep <- densitymeans_bycluster %>%
dplyr::select(cluster, lifestage, median_sd) %>%  # Select relevant columns for the summary table
pivot_wider(names_from = lifestage, values_from = median_sd) %>%
mutate(cluster = case_when(cluster == "1" ~ "NNG",
cluster == "3" ~ "ssG",
cluster == "2" ~ "ssF",
cluster == "4" ~ "ssFG",
cluster == "5" ~ "EVG",
TRUE ~ cluster)) %>%
mutate(
seedlingsig = case_when(
cluster == "NNG" ~ " (a)",
cluster == "ssG" ~ " (ab)",
cluster == "ssF" ~ " (b)",
cluster == "ssFG" ~ " (b)",
cluster == "EVG" ~ " (ab)",
TRUE ~ NA_character_  # Optional: fill with NA if no match
)
) %>%
mutate(Seedling = paste(seedling, seedlingsig, sep = "")) %>%
dplyr::select(-seedling, -seedlingsig, -no_shrubs) %>%
relocate(Seedling, .after = cluster)
densitymeans_bycluster_TABLE <- densitymeans_bycluster_TABLE_prep %>%
# kable(caption = "Summary Table of Means ± SD for Each Cluster and Lifestage")
flextable() %>%
add_header_row(
colwidths = c(1, 4),
values = c("", "Shrub Lifestage")) %>%
set_header_labels(
# Rename your columns if necessary
cluster = "Cluster",
seedling = "Seedling",
immature = "Immature",
Mature = "Mature",
Dead = "Dead"
) %>%
autofit() %>%
set_caption(caption = "Shrub Density Median ± SD by Cluster and Lifestage")
ggplot(densitymeans_bycluster %>%
filter(lifestage %in% c("seedling", "immature", "mature", "dead")),
aes(x = cluster,
y = median_density)) +
geom_point(size = 3, position = position_dodge(width = 0.3)) +
geom_errorbar(aes(ymin = median_density - sd, ymax = median_density + sd),
width = 0.2, position = position_dodge(width = 0.3)) +  # SD bars
labs(x = "Plant Cluster",
y = "Median Shrub Density (m2)") +
theme_bw() +
theme(
axis.text.x = element_text(angle = 0, hjust = 1),  # Rotate x-axis labels if needed
legend.position = "right") +
ylim(0, 1) +
facet_wrap(~lifestage) +  # Facet by lifeform
scale_x_discrete(labels = c("1" = "NNG", "2" = "ssF", "3" = "ssG", "4" = "ssFG", "5" = "EVG"))  # Relabel clusters
fig_forbgrass
fig_forbgrass
fig_forbgrass
hist((cover_bylifecycle %>% filter(lifeform=="shrub"))$lifeform_lifecycle_percentcover)
shrub_cluster
shrub_cluster <- ggplot(cover_bylifecycle_bygroup %>%
filter(lifeform_lifecycle %in% c("shrub_perennial")),
aes(x = cluster,
y = mean_cover,
shape = lifeform,   # Shape by lifeform
color = lifecycle   # Color by lifecycle
)) +
geom_point(size = 3, position = position_dodge(width = 0.3)) +  # Mean points
geom_errorbar(aes(ymin = mean_cover - se, ymax = mean_cover + se),
width = 0.2, position = position_dodge(width = 0.3)) +  # SE bars
labs(x = "Plant Cluster",
y = "Mean Percent Cover (%)",
color = "Lifecycle",  # Label for color legend
shape = "Lifeform") +  # Label for shape legend
theme_bw() +
theme(
axis.text.x = element_text(angle = 0, hjust = 1),  # Rotate x-axis labels if needed
legend.position = "right"
) +
ylim(0, 100) +
# facet_wrap(~lifeform) +  # Facet by lifeform
scale_shape_manual(values = c("shrub" = 16)) +
scale_color_manual(values = c("perennial" = "black")) +
scale_x_discrete(labels = c("1" = "NNG", "2" = "ssF", "3" = "ssG", "4" = "ssFG", "5" = "EVG"))  # Relabel clusters
shrub_cluster
cluster_shrub_boxorjitter <- ggplot(shrub_perennial_data,
aes(x = cluster,
y = lifeform_lifecycle_percentcover)) +
geom_boxplot() + # boxplot
geom_jitter(width = 0.2, height = 0.1, color = "darkgreen") + # jitter
geom_text(aes(label = value, y = max(lifeform_lifecycle_percentcover) + 5), vjust = 0.5) +
labs(x = "Plant Cluster",
y = "Percent Shrub Cover (%)") +
scale_x_discrete(labels = c("1" = "NNG", "2" = "ssF", "3" = "ssG", "4" = "ssFG", "5" = "EVG")) +  # Relabel clusters
theme_bw()
cluster_shrub_boxorjitter
shrub_cluster
cluster_shrub_boxorjitter
shrub_cluster
head(cover_bylifecycle, 3)
sort(unique(cover_bylifecycle$lifeform_lifecycle_status))
hist((cover_bylifecycle %>% filter(lifeform_lifecycle_status=="forb_annual_native"))$lifeform_lifecycle_percentcover)
hist((cover_bylifecycle %>% filter(lifeform_lifecycle_status=="forb_annual_native"))$lifeform_lifecycle_percentcover)\
hist((cover_bylifecycle %>% filter(lifeform_lifecycle_status=="forb_annual_native"))$lifeform_lifecycle_percentcover)
forb_annNAT <- cover_bylifecycle %>%
filter(lifeform_lifecycle_status=="forb_annual_native")
head(forb_annNAT)
hist(forb_annNAT$lifeform_lifecycle_percentcover)
hist(forb_annNAT$lifeform_lifecycle_percentcover)
hist((cover_bylifecycle %>% filter(lifeform_lifecycle_status=="forb_annual_native"))$lifeform_lifecycle_percentcover)
hist(forb_annNAT$lifeform_lifecycle_percentcover)
shapiro.test(forb_annNAT$lifeform_lifecycle_percentcover)
aov_forb_annNAT <- aov(lifeform_lifecycle_percentcover ~ cluster, data = forb_annNAT)
summary(aov_forb_annNAT)
aov_forb_annNAT <-
summary(aov(lifeform_lifecycle_percentcover ~ cluster, data = forb_annNAT))
summary(aov(lifeform_lifecycle_percentcover ~ cluster, data = forb_annNAT))
aov_forb_annNAT <- aov(lifeform_lifecycle_percentcover ~ cluster, data = forb_annNAT))
aov_forb_annNAT <- aov(lifeform_lifecycle_percentcover ~ cluster, data = forb_annNAT)
summary(aov_forb_annNAT))
summary(aov_forb_annNAT)
tukey_result <- TukeyHSD(aov_forb_annNAT, conf.level=.95)
tukey_result
# 4-5   1.219512 -38.71260 41.15163 0.9999789
# 2-5   4.065041 -37.17667 45.30675 0.9978220
# 3-5  -3.252033 -44.49374 37.98968 0.9990898
# 1-5  -7.621951 -45.50488 30.26098 0.9681628
# 2-4   2.845528 -24.43330 30.12436 0.9972860
# 3-4  -4.471545 -31.75037 22.80728 0.9848795
# 1-4  -8.841463 -30.71318 13.03026 0.7184733
# 3-2  -7.317073 -36.47937 21.84522 0.9317343
# 1-2 -11.686992 -35.86709 12.49310 0.5752434
# 1-3  -4.369919 -28.55001 19.81018 0.9783656
tukey_df <- as.data.frame(tukey_result$cluster)
tukey_df$comparison <- rownames(tukey_df)
# Split the comparison names into separate columns for cluster1 and cluster2
tukey_df <- tukey_df %>%
mutate(cluster1 = as.numeric(sub("-.*", "", comparison)),
cluster2 = as.numeric(sub(".*-", "", comparison)))
# Create a matrix 5 x 5
comparison_matrix <- matrix(NA, nrow = 5, ncol = 5)
rownames(comparison_matrix) <- 1:5  # Cluster numbers
colnames(comparison_matrix) <- 1:5
# Fill the matrix with the adjusted p-values from the Tukey test
for (i in 1:nrow(tukey_df)) {
comparison_matrix[as.character(tukey_df$cluster1[i]), as.character(tukey_df$cluster2[i])] <- tukey_df$`p adj`[i]
comparison_matrix[as.character(tukey_df$cluster2[i]), as.character(tukey_df$cluster1[i])] <- tukey_df$`p adj`[i]  # Ensure symmetry
}
# Set diagonal to 1 (self-comparisons are not relevant)
diag(comparison_matrix) <- 1
# Apply multcompLetters to assign significance letters
significance_letters <- multcompLetters(comparison_matrix, compare = "<", threshold = 0.05)$Letters
significance_letters <- significance_letters %>%
as.tibble() %>%
rownames_to_column("cluster")
# Now you can add the significance letters to your clusters in the data frame:
forb_annNAT_letters <- forb_annNAT %>%
left_join(significance_letters, by = "cluster") %>%
mutate(cluster = factor(cluster, levels = c(5, 4, 2, 3, 1)))
cluster_shrub_boxorjitter <- ggplot(forb_annNAT_letters,
aes(x = cluster,
y = lifeform_lifecycle_percentcover)) +
geom_boxplot() + # boxplot
geom_jitter(width = 0.2, height = 0.1, color = "darkgreen") + # jitter
geom_text(aes(label = value, y = max(lifeform_lifecycle_percentcover) + 5), vjust = 0.5) +
labs(x = "Plant Cluster",
y = "Percent Shrub Cover (%)") +
scale_x_discrete(labels = c("1" = "NNG", "2" = "ssF", "3" = "ssG", "4" = "ssFG", "5" = "EVG")) +  # Relabel clusters
theme_bw()
cluster_shrub_boxorjitter
shrub_cluster <- ggplot(forb_annNAT,
aes(x = cluster,
y = mean_cover,
shape = lifeform,   # Shape by lifeform
color = lifecycle   # Color by lifecycle
)) +
geom_point(size = 3, position = position_dodge(width = 0.3)) +  # Mean points
geom_errorbar(aes(ymin = mean_cover - se, ymax = mean_cover + se),
width = 0.2, position = position_dodge(width = 0.3)) +  # SE bars
labs(x = "Plant Cluster",
y = "Mean Percent Cover (%)",
color = "Lifecycle",  # Label for color legend
shape = "Lifeform") +  # Label for shape legend
theme_bw() +
theme(
axis.text.x = element_text(angle = 0, hjust = 1),  # Rotate x-axis labels if needed
legend.position = "right"
) +
ylim(0, 100) +
# facet_wrap(~lifeform) +  # Facet by lifeform
scale_shape_manual(values = c("shrub" = 16)) +
scale_color_manual(values = c("perennial" = "black")) +
scale_x_discrete(labels = c("1" = "NNG", "2" = "ssF", "3" = "ssG", "4" = "ssFG", "5" = "EVG"))  # Relabel clusters
forb_annNAT_cluster <- ggplot(forb_annNAT,
aes(x = cluster,
y = mean_cover,
shape = lifeform,   # Shape by lifeform
color = lifecycle   # Color by lifecycle
)) +
geom_point(size = 3, position = position_dodge(width = 0.3)) +  # Mean points
geom_errorbar(aes(ymin = mean_cover - se, ymax = mean_cover + se),
width = 0.2, position = position_dodge(width = 0.3)) +  # SE bars
labs(x = "Plant Cluster",
y = "Mean Percent Cover (%)",
color = "Lifecycle",  # Label for color legend
shape = "Lifeform") +  # Label for shape legend
theme_bw() +
theme(
axis.text.x = element_text(angle = 0, hjust = 1),  # Rotate x-axis labels if needed
legend.position = "right"
) +
ylim(0, 100) +
# facet_wrap(~lifeform) +  # Facet by lifeform
scale_shape_manual(values = c("shrub" = 16)) +
scale_color_manual(values = c("perennial" = "black")) +
scale_x_discrete(labels = c("1" = "NNG", "2" = "ssF", "3" = "ssG", "4" = "ssFG", "5" = "EVG"))  # Relabel clusters
forb_annNAT_cluster
forb_annNAT_cluster
cluster_shrub_boxorjitter <- ggplot(forb_annNAT_letters,
aes(x = cluster,
y = lifeform_lifecycle_percentcover)) +
geom_boxplot() + # boxplot
geom_jitter(width = 0.2, height = 0.1, color = "darkgreen") + # jitter
geom_text(aes(label = value, y = max(lifeform_lifecycle_percentcover) + 5), vjust = 0.5) +
labs(x = "Plant Cluster",
y = "Percent Shrub Cover (%)") +
scale_x_discrete(labels = c("1" = "NNG", "2" = "ssF", "3" = "ssG", "4" = "ssFG", "5" = "EVG")) +  # Relabel clusters
theme_bw()
cluster_forb_annNAT_boxorjitter <- ggplot(forb_annNAT_letters,
aes(x = cluster,
y = lifeform_lifecycle_percentcover)) +
geom_boxplot() + # boxplot
geom_jitter(width = 0.2, height = 0.1, color = "darkgreen") + # jitter
geom_text(aes(label = value, y = max(lifeform_lifecycle_percentcover) + 5), vjust = 0.5) +
labs(x = "Plant Cluster",
y = "Percent Shrub Cover (%)") +
scale_x_discrete(labels = c("1" = "NNG", "2" = "ssF", "3" = "ssG", "4" = "ssFG", "5" = "EVG")) +  # Relabel clusters
theme_bw()
cluster_forb_annNAT_boxorjitter
sort(unique(cover_bylifecycle$lifeform_lifecycle_status))
o
forb_perNAT <- cover_bylifecycle %>%
filter(lifeform_lifecycle_status=="forb_perennial_native")
hist(forb_perNAT$lifeform_lifecycle_percentcover)
shapiro.test(forb_perNAT$lifeform_lifecycle_percentcover)
aov_forb_perNAT <- aov(lifeform_lifecycle_percentcover ~ cluster, data = forb_perNAT)
summary(aov_forb_perNAT)
tukey_result <- TukeyHSD(aov_forb_perNAT, conf.level=.95)
tukey_result
tukey_df <- as.data.frame(tukey_result$cluster)
tukey_df$comparison <- rownames(tukey_df)
# Split the comparison names into separate columns for cluster1 and cluster2
tukey_df <- tukey_df %>%
mutate(cluster1 = as.numeric(sub("-.*", "", comparison)),
cluster2 = as.numeric(sub(".*-", "", comparison)))
# Create a matrix 5 x 5
comparison_matrix <- matrix(NA, nrow = 5, ncol = 5)
rownames(comparison_matrix) <- 1:5  # Cluster numbers
colnames(comparison_matrix) <- 1:5
# Fill the matrix with the adjusted p-values from the Tukey test
for (i in 1:nrow(tukey_df)) {
comparison_matrix[as.character(tukey_df$cluster1[i]), as.character(tukey_df$cluster2[i])] <- tukey_df$`p adj`[i]
comparison_matrix[as.character(tukey_df$cluster2[i]), as.character(tukey_df$cluster1[i])] <- tukey_df$`p adj`[i]  # Ensure symmetry
}
# Set diagonal to 1 (self-comparisons are not relevant)
diag(comparison_matrix) <- 1
# Apply multcompLetters to assign significance letters
significance_letters <- multcompLetters(comparison_matrix, compare = "<", threshold = 0.05)$Letters
significance_letters <- significance_letters %>%
as.tibble() %>%
rownames_to_column("cluster")
# Now you can add the significance letters to your clusters in the data frame:
forb_perNAT_letters <- forb_perNAT %>%
left_join(significance_letters, by = "cluster") %>%
mutate(cluster = factor(cluster, levels = c(5, 4, 2, 3, 1)))
cluster_forb_annNAT_boxorjitter <- ggplot(forb_perNAT_letters,
aes(x = cluster,
y = lifeform_lifecycle_percentcover)) +
geom_boxplot() + # boxplot
geom_jitter(width = 0.2, height = 0.1, color = "darkgreen") + # jitter
geom_text(aes(label = value, y = max(lifeform_lifecycle_percentcover) + 5), vjust = 0.5) +
labs(x = "Plant Cluster",
y = "Percent Shrub Cover (%)") +
scale_x_discrete(labels = c("1" = "NNG", "2" = "ssF", "3" = "ssG", "4" = "ssFG", "5" = "EVG")) +  # Relabel clusters
theme_bw()
cluster_forb_NAT_boxorjitter <- ggplot(forb_perNAT_letters,
aes(x = cluster,
y = lifeform_lifecycle_percentcover)) +
geom_boxplot() + # boxplot
geom_jitter(width = 0.2, height = 0.1, color = "darkgreen") + # jitter
geom_text(aes(label = value, y = max(lifeform_lifecycle_percentcover) + 5), vjust = 0.5) +
labs(x = "Plant Cluster",
y = "Percent Shrub Cover (%)") +
scale_x_discrete(labels = c("1" = "NNG", "2" = "ssF", "3" = "ssG", "4" = "ssFG", "5" = "EVG")) +  # Relabel clusters
theme_bw()
cluster_forb_perNAT_boxorjitter <- ggplot(forb_perNAT_letters,
aes(x = cluster,
y = lifeform_lifecycle_percentcover)) +
geom_boxplot() + # boxplot
geom_jitter(width = 0.2, height = 0.1, color = "darkgreen") + # jitter
geom_text(aes(label = value, y = max(lifeform_lifecycle_percentcover) + 5), vjust = 0.5) +
labs(x = "Plant Cluster",
y = "Percent Shrub Cover (%)") +
scale_x_discrete(labels = c("1" = "NNG", "2" = "ssF", "3" = "ssG", "4" = "ssFG", "5" = "EVG")) +  # Relabel clusters
theme_bw()
cluster_forb_perNAT_boxorjitter
cluster_forb_annNAT_boxorjitter <- ggplot(forb_annNAT_letters,
aes(x = cluster,
y = lifeform_lifecycle_percentcover)) +
geom_boxplot() + # boxplot
geom_jitter(width = 0.2, height = 0.1, color = "darkgreen") + # jitter
geom_text(aes(label = value, y = max(lifeform_lifecycle_percentcover) + 5), vjust = 0.5) +
labs(title = "cluster_forb_annNAT_boxorjitter",
x = "Plant Cluster",
y = "Percent Shrub Cover (%)") +
scale_x_discrete(labels = c("1" = "NNG", "2" = "ssF", "3" = "ssG", "4" = "ssFG", "5" = "EVG")) +  # Relabel clusters
theme_bw()
cluster_forb_annNAT_boxorjitter
cluster_shrub_boxorjitter <- ggplot(shrub_perennial_data,
aes(x = cluster,
y = lifeform_lifecycle_percentcover)) +
geom_boxplot() + # boxplot
geom_jitter(width = 0.2, height = 0.1, color = "darkgreen") + # jitter
geom_text(aes(label = value, y = max(lifeform_lifecycle_percentcover) + 5), vjust = 0.5) +
labs(title = "cluster_shrub_boxorjitter",
x = "Plant Cluster",
y = "Percent Shrub Cover (%)") +
scale_x_discrete(labels = c("1" = "NNG", "2" = "ssF", "3" = "ssG", "4" = "ssFG", "5" = "EVG")) +  # Relabel clusters
theme_bw()
cluster_shrub_boxorjitter
cluster_forb_perNAT_boxorjitter <- ggplot(forb_perNAT_letters,
aes(x = cluster,
y = lifeform_lifecycle_percentcover)) +
geom_boxplot() + # boxplot
geom_jitter(width = 0.2, height = 0.1, color = "darkgreen") + # jitter
geom_text(aes(label = value, y = max(lifeform_lifecycle_percentcover) + 5), vjust = 0.5) +
labs(title = "forb_perNAT_letters",
x = "Plant Cluster",
y = "Percent Shrub Cover (%)") +
scale_x_discrete(labels = c("1" = "NNG", "2" = "ssF", "3" = "ssG", "4" = "ssFG", "5" = "EVG")) +  # Relabel clusters
theme_bw()
cluster_forb_perNAT_boxorjitter
sort(unique(cover_bylifecycle$lifeform_lifecycle_status))
forb_annNN <- cover_bylifecycle %>%
filter(lifeform_lifecycle_status=="forb_annual_nonnative")
forb_annNN <- cover_bylifecycle %>%
filter(lifeform_lifecycle_status=="forb_annual_nonnative")
hist(forb_annNN$lifeform_lifecycle_percentcover)
shapiro.test(forb_perNAT$lifeform_lifecycle_percentcover)
aov_forb_annNN <- aov(lifeform_lifecycle_percentcover ~ cluster, data = forb_annNN)
summary(aov_forb_annNN)
tukey_result <- TukeyHSD(aov_forb_annNN, conf.level=.95)
tukey_result <- TukeyHSD(aov_forb_annNN, conf.level=.95)
tukey_result
tukey_df <- as.data.frame(tukey_result$cluster)
tukey_df$comparison <- rownames(tukey_df)
# Split the comparison names into separate columns for cluster1 and cluster2
tukey_df <- tukey_df %>%
mutate(cluster1 = as.numeric(sub("-.*", "", comparison)),
cluster2 = as.numeric(sub(".*-", "", comparison)))
# Create a matrix 5 x 5
comparison_matrix <- matrix(NA, nrow = 5, ncol = 5)
rownames(comparison_matrix) <- 1:5  # Cluster numbers
colnames(comparison_matrix) <- 1:5
# Fill the matrix with the adjusted p-values from the Tukey test
for (i in 1:nrow(tukey_df)) {
comparison_matrix[as.character(tukey_df$cluster1[i]), as.character(tukey_df$cluster2[i])] <- tukey_df$`p adj`[i]
comparison_matrix[as.character(tukey_df$cluster2[i]), as.character(tukey_df$cluster1[i])] <- tukey_df$`p adj`[i]  # Ensure symmetry
}
# Set diagonal to 1 (self-comparisons are not relevant)
diag(comparison_matrix) <- 1
# Apply multcompLetters to assign significance letters
significance_letters <- multcompLetters(comparison_matrix, compare = "<", threshold = 0.05)$Letters
significance_letters <- significance_letters %>%
as.tibble() %>%
rownames_to_column("cluster")
# Now you can add the significance letters to your clusters in the data frame:
forb_annNN_letters <- forb_annNN %>%
left_join(significance_letters, by = "cluster") %>%
mutate(cluster = factor(cluster, levels = c(5, 4, 2, 3, 1)))
cluster_forb_annNN_boxorjitter <- ggplot(forb_annNN_letters,
aes(x = cluster,
y = lifeform_lifecycle_percentcover)) +
geom_boxplot() + # boxplot
geom_jitter(width = 0.2, height = 0.1, color = "darkgreen") + # jitter
geom_text(aes(label = value, y = max(lifeform_lifecycle_percentcover) + 5), vjust = 0.5) +
labs(title = "forb_annNN_letters",
x = "Plant Cluster",
y = "Percent Shrub Cover (%)") +
scale_x_discrete(labels = c("1" = "NNG", "2" = "ssF", "3" = "ssG", "4" = "ssFG", "5" = "EVG")) +  # Relabel clusters
theme_bw()
cluster_forb_annNN_boxorjitter
sort(unique(cover_bylifecycle$lifeform_lifecycle_status))
grass_perNAT <- cover_bylifecycle %>%
filter(lifeform_lifecycle_status=="grass_perennial_native")
hist(grass_perNAT$lifeform_lifecycle_percentcover)
shapiro.test(grass_perNAT$lifeform_lifecycle_percentcover)
# data:  grass_perNAT$lifeform_lifecycle_percentcover
# W = 0.87591, p-value = 0.04124 <-- not normal
aov_grass_perNAT <- aov(lifeform_lifecycle_percentcover ~ cluster, data = grass_perNAT)
summary(aov_grass_perNAT)
tukey_result <- TukeyHSD(aov_grass_perNAT, conf.level=.95)
tukey_result
tukey_df <- as.data.frame(tukey_result$cluster)
tukey_df$comparison <- rownames(tukey_df)
# Split the comparison names into separate columns for cluster1 and cluster2
tukey_df <- tukey_df %>%
mutate(cluster1 = as.numeric(sub("-.*", "", comparison)),
cluster2 = as.numeric(sub(".*-", "", comparison)))
# Create a matrix 5 x 5
comparison_matrix <- matrix(NA, nrow = 5, ncol = 5)
rownames(comparison_matrix) <- 1:5  # Cluster numbers
colnames(comparison_matrix) <- 1:5
# Fill the matrix with the adjusted p-values from the Tukey test
for (i in 1:nrow(tukey_df)) {
comparison_matrix[as.character(tukey_df$cluster1[i]), as.character(tukey_df$cluster2[i])] <- tukey_df$`p adj`[i]
comparison_matrix[as.character(tukey_df$cluster2[i]), as.character(tukey_df$cluster1[i])] <- tukey_df$`p adj`[i]  # Ensure symmetry
}
# Set diagonal to 1 (self-comparisons are not relevant)
diag(comparison_matrix) <- 1
# Apply multcompLetters to assign significance letters
significance_letters <- multcompLetters(comparison_matrix, compare = "<", threshold = 0.05)$Letters
significance_letters <- significance_letters %>%
as.tibble() %>%
rownames_to_column("cluster")
# Now you can add the significance letters to your clusters in the data frame:
forb_annNN_letters <- forb_annNN %>%
left_join(significance_letters, by = "cluster") %>%
mutate(cluster = factor(cluster, levels = c(5, 4, 2, 3, 1)))
# Now you can add the significance letters to your clusters in the data frame:
grass_perNAT_letters <- grass_perNAT %>%
left_join(significance_letters, by = "cluster") %>%
mutate(cluster = factor(cluster, levels = c(5, 4, 2, 3, 1)))
cluster_grass_perNAT_boxorjitter <- ggplot(grass_perNAT_letters,
aes(x = cluster,
y = lifeform_lifecycle_percentcover)) +
geom_boxplot() + # boxplot
geom_jitter(width = 0.2, height = 0.1, color = "darkgreen") + # jitter
geom_text(aes(label = value, y = max(lifeform_lifecycle_percentcover) + 5), vjust = 0.5) +
labs(title = "cluster_grass_perNAT_boxorjitter",
x = "Plant Cluster",
y = "Percent Shrub Cover (%)") +
scale_x_discrete(labels = c("1" = "NNG", "2" = "ssF", "3" = "ssG", "4" = "ssFG", "5" = "EVG")) +  # Relabel clusters
theme_bw()
cluster_grass_perNAT_boxorjitter
sort(unique(cover_bylifecycle$lifeform_lifecycle_status))
grass_annNN <- cover_bylifecycle %>%
filter(lifeform_lifecycle_status=="grass_annual_nonnative")
hist(grass_annNN$lifeform_lifecycle_percentcover)
shapiro.test(grass_annNN$lifeform_lifecycle_percentcover)
# data:  grass_annNN$lifeform_lifecycle_percentcover
# W = 0.90111, p-value = 0.002374 <-- not normal
aov_grass_annNN <- aov(lifeform_lifecycle_percentcover ~ cluster, data = grass_annNN)
summary(aov_grass_annNN)
tukey_result <- TukeyHSD(aov_grass_annNN, conf.level=.95)
tukey_result
tukey_df <- as.data.frame(tukey_result$cluster)
tukey_df$comparison <- rownames(tukey_df)
# Split the comparison names into separate columns for cluster1 and cluster2
tukey_df <- tukey_df %>%
mutate(cluster1 = as.numeric(sub("-.*", "", comparison)),
cluster2 = as.numeric(sub(".*-", "", comparison)))
# Create a matrix 5 x 5
comparison_matrix <- matrix(NA, nrow = 5, ncol = 5)
rownames(comparison_matrix) <- 1:5  # Cluster numbers
colnames(comparison_matrix) <- 1:5
# Fill the matrix with the adjusted p-values from the Tukey test
for (i in 1:nrow(tukey_df)) {
comparison_matrix[as.character(tukey_df$cluster1[i]), as.character(tukey_df$cluster2[i])] <- tukey_df$`p adj`[i]
comparison_matrix[as.character(tukey_df$cluster2[i]), as.character(tukey_df$cluster1[i])] <- tukey_df$`p adj`[i]  # Ensure symmetry
}
# Set diagonal to 1 (self-comparisons are not relevant)
diag(comparison_matrix) <- 1
# Apply multcompLetters to assign significance letters
significance_letters <- multcompLetters(comparison_matrix, compare = "<", threshold = 0.05)$Letters
significance_letters <- significance_letters %>%
as.tibble() %>%
rownames_to_column("cluster")
# Now you can add the significance letters to your clusters in the data frame:
grass_annNN_letters <- grass_annNN %>%
left_join(significance_letters, by = "cluster") %>%
mutate(cluster = factor(cluster, levels = c(5, 4, 2, 3, 1)))
cluster_grass_annNN_boxorjitter <- ggplot(grass_annNN_letters,
aes(x = cluster,
y = lifeform_lifecycle_percentcover)) +
geom_boxplot() + # boxplot
geom_jitter(width = 0.2, height = 0.1, color = "darkgreen") + # jitter
geom_text(aes(label = value, y = max(lifeform_lifecycle_percentcover) + 5), vjust = 0.5) +
labs(title = "cluster_grass_annNN_boxorjitter",
x = "Plant Cluster",
y = "Percent Shrub Cover (%)") +
scale_x_discrete(labels = c("1" = "NNG", "2" = "ssF", "3" = "ssG", "4" = "ssFG", "5" = "EVG")) +  # Relabel clusters
theme_bw()
cluster_grass_annNN_boxorjitter
