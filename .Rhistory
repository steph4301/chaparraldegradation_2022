slope1 <- rep(NaN, times = bpcount)
break1 <- rep(NaN, times = bpcount)
for (i in 1:bpcount) {
break1[i] <- my.seg$psi[[i+1]]
if (i == 1) {
slope1[i] <- coef(my.seg)[[2]]
intercept[i] <- coef(my.seg)[[1]]
break1[i] <- 0
}
else {
slope1[i] <- slope1[i-1] + coef(my.seg)[[i+1]]
intercept[i] <- (intercept[i-1] + slope1[i-1]*break1[i]) - (slope1[i]*break1[i])
}
}
abcover_nativecover_nngrasscover2 <- abcover_nativecover_nngrasscover[order(abcover_nativecover_nngrasscover$nonnative_grass),]
tail <- max(abcover_nativecover_nngrasscover2$percentcover_native)
p1 <- ggplot(abcover_nativecover_nngrasscover2, aes(y = nonnative_grass, x = percentcover_native)) +
geom_point()
model <- lm(percentcover_native ~ nonnative_grass, data = abcover_nativecover_nngrasscover2)
bp <- breakpoints(nonnative_grass ~ percentcover_native, data = abcover_nativecover_nngrasscover2, h = 3)
#analyze breakpoints
# have to provide estimates for breakpoints.
# after looking a the data,
my.seg <- segmented(model,
seg.Z = ~ nonnative_grass,
npsi = 2
)
bp <- as.data.frame(my.seg$psi)
bp <- as.list(bp$Est.)
bpcount <- length(bp) + 1
modelxbeg <- rep(NaN, times = bpcount)
modelxend <- rep(NaN, times = bpcount)
modelybeg <- rep(NaN, times = bpcount)
modelyend <- rep(NaN, times = bpcount)
intercept <- rep(NaN, times = bpcount)
slope1 <- rep(NaN, times = bpcount)
break1 <- rep(NaN, times = bpcount)
for (i in 1:bpcount) {
break1[i] <- my.seg$psi[[i+1]]
if (i == 1) {
slope1[i] <- coef(my.seg)[[2]]
intercept[i] <- coef(my.seg)[[1]]
break1[i] <- 0
}
else {
slope1[i] <- slope1[i-1] + coef(my.seg)[[i+1]]
intercept[i] <- (intercept[i-1] + slope1[i-1]*break1[i]) - (slope1[i]*break1[i])
}
}
modelxend <- c(tail(break1, n = length(break1)-1), tail)
for (i in 1:bpcount) {
modelybeg[i] <- slope1[i]*break1[i] + intercept[i]
modelyend[i] <- slope1[i]*modelxend[i] + intercept[i]
}
segment_data = data.frame(
x = break1,
xend = modelxend,
y = modelybeg,
yend = modelyend)
# second row of the psi-matrix
my.lines <- my.seg$psi[, 2]
modelgraph_nnngrass <- p1 +
geom_vline(xintercept = my.lines, linetype = "dashed") +
geom_segment(
data = segment_data,
mapping = aes(x=x, y=y, xend=xend, yend=yend),
inherit.aes = FALSE)
modelgraph_nnngrass
abcover_nativecover_nngrasscover2 <- abcover_nativecover_nngrasscover[order(abcover_nativecover_nngrasscover$nonnative_grass),]
tail <- max(abcover_nativecover_nngrasscover2$percentcover_native)
p1 <- ggplot(abcover_nativecover_nngrasscover2, aes(x = nonnative_grass, y = percentcover_native)) +
geom_point()
model <- lm(nonnative_grass ~ percentcover_native, data = abcover_nativecover_nngrasscover2)
bp <- breakpoints(nonnative_grass ~ percentcover_native, data = abcover_nativecover_nngrasscover2, h = 3)
#analyze breakpoints
# have to provide estimates for breakpoints.
# after looking a the data,
my.seg <- segmented(model,
seg.Z = ~ percentcover_native,
npsi = 2
)
bp <- as.data.frame(my.seg$psi)
bp <- as.list(bp$Est.)
bpcount <- length(bp) + 1
modelxbeg <- rep(NaN, times = bpcount)
modelxend <- rep(NaN, times = bpcount)
modelybeg <- rep(NaN, times = bpcount)
modelyend <- rep(NaN, times = bpcount)
intercept <- rep(NaN, times = bpcount)
slope1 <- rep(NaN, times = bpcount)
break1 <- rep(NaN, times = bpcount)
for (i in 1:bpcount) {
break1[i] <- my.seg$psi[[i+1]]
if (i == 1) {
slope1[i] <- coef(my.seg)[[2]]
intercept[i] <- coef(my.seg)[[1]]
break1[i] <- 0
}
else {
slope1[i] <- slope1[i-1] + coef(my.seg)[[i+1]]
intercept[i] <- (intercept[i-1] + slope1[i-1]*break1[i]) - (slope1[i]*break1[i])
}
}
#analyze breakpoints
# have to provide estimates for breakpoints.
# after looking a the data,
my.seg <- segmented(model,
seg.Z = ~ percentcover_native,
npsi = 2
)
#analyze breakpoints
# have to provide estimates for breakpoints.
# after looking a the data,
my.seg <- segmented(model,
seg.Z = ~ percentcover_native,
npsi = 1
)
abcover_nativecover_nngrasscover2 <- abcover_nativecover_nngrasscover[order(abcover_nativecover_nngrasscover$nonnative_grass),]
tail <- max(abcover_nativecover_nngrasscover2$percentcover_native)
p1 <- ggplot(abcover_nativecover_nngrasscover2, aes(x = nonnative_grass, y = percentcover_native)) +
geom_point()
model <- lm(nonnative_grass ~ percentcover_native, data = abcover_nativecover_nngrasscover2)
bp <- breakpoints(nonnative_grass ~ percentcover_native, data = abcover_nativecover_nngrasscover2, h = 3)
#analyze breakpoints
# have to provide estimates for breakpoints.
# after looking a the data,
my.seg <- segmented(model,
seg.Z = ~ percentcover_native,
npsi = 1
)
bp <- as.data.frame(my.seg$psi)
bp <- as.list(bp$Est.)
bpcount <- length(bp) + 1
modelxbeg <- rep(NaN, times = bpcount)
modelxend <- rep(NaN, times = bpcount)
modelybeg <- rep(NaN, times = bpcount)
modelyend <- rep(NaN, times = bpcount)
intercept <- rep(NaN, times = bpcount)
slope1 <- rep(NaN, times = bpcount)
break1 <- rep(NaN, times = bpcount)
for (i in 1:bpcount) {
break1[i] <- my.seg$psi[[i+1]]
if (i == 1) {
slope1[i] <- coef(my.seg)[[2]]
intercept[i] <- coef(my.seg)[[1]]
break1[i] <- 0
}
else {
slope1[i] <- slope1[i-1] + coef(my.seg)[[i+1]]
intercept[i] <- (intercept[i-1] + slope1[i-1]*break1[i]) - (slope1[i]*break1[i])
}
}
modelxend <- c(tail(break1, n = length(break1)-1), tail)
for (i in 1:bpcount) {
modelybeg[i] <- slope1[i]*break1[i] + intercept[i]
modelyend[i] <- slope1[i]*modelxend[i] + intercept[i]
}
segment_data = data.frame(
x = break1,
xend = modelxend,
y = modelybeg,
yend = modelyend)
# second row of the psi-matrix
my.lines <- my.seg$psi[, 2]
modelgraph_nnngrass <- p1 +
geom_vline(xintercept = my.lines, linetype = "dashed") +
geom_segment(
data = segment_data,
mapping = aes(x=x, y=y, xend=xend, yend=yend),
inherit.aes = FALSE)
modelgraph_nnngrass
#analyze breakpoints
# have to provide estimates for breakpoints.
# after looking a the data,
my.seg <- segmented(model,
seg.Z = ~ percentcover_native,
npsi = 3
)
abcover_nativecover_nngrasscover2 <- abcover_nativecover_nngrasscover[order(abcover_nativecover_nngrasscover$nonnative_grass),]
tail <- max(abcover_nativecover_nngrasscover2$percentcover_native)
p1 <- ggplot(abcover_nativecover_nngrasscover2, aes(x = nonnative_grass, y = percentcover_native)) +
geom_point()
model <- lm(nonnative_grass ~ percentcover_native, data = abcover_nativecover_nngrasscover2)
bp <- breakpoints(nonnative_grass ~ percentcover_native, data = abcover_nativecover_nngrasscover2, h = 3)
#analyze breakpoints
# have to provide estimates for breakpoints.
# after looking a the data,
my.seg <- segmented(model,
seg.Z = ~ percentcover_native,
npsi = 3
)
2
32123
#analyze breakpoints
# have to provide estimates for breakpoints.
# after looking a the data,
my.seg <- segmented(model,
seg.Z = ~ percentcover_native,
npsi = 3
)
#analyze breakpoints
# have to provide estimates for breakpoints.
# after looking a the data,
my.seg <- segmented(model,
seg.Z = ~ percentcover_native,
npsi = 4
)
#analyze breakpoints
# have to provide estimates for breakpoints.
# after looking a the data,
my.seg <- segmented(model,
seg.Z = ~ nonnative_grass,
npsi = 4
)
#analyze breakpoints
# have to provide estimates for breakpoints.
# after looking a the data,
my.seg <- segmented(model,
seg.Z = ~ nonnative_grass,
npsi = 2
)
#analyze breakpoints
# have to provide estimates for breakpoints.
# after looking a the data,
my.seg <- segmented(model,
seg.Z = ~ nonnative_grass,
npsi = 1
)
abcover_nativecover_nngrasscover2 <- abcover_nativecover_nngrasscover[order(abcover_nativecover_nngrasscover$nonnative_grass),]
tail <- max(abcover_nativecover_nngrasscover2$percentcover_native)
p1 <- ggplot(abcover_nativecover_nngrasscover2, aes(x = nonnative_grass, y = percentcover_native)) +
geom_point()
model <- lm(nonnative_grass ~ percentcover_native, data = abcover_nativecover_nngrasscover2)
bp <- breakpoints(nonnative_grass ~ percentcover_native, data = abcover_nativecover_nngrasscover2, h = 3)
#analyze breakpoints
# have to provide estimates for breakpoints.
# after looking a the data,
my.seg <- segmented(model,
seg.Z = ~ nonnative_grass,
npsi = 1
)
+bp <- as.data.frame(my.seg$psi)
abcover_nativecover_nngrasscover2 <- abcover_nativecover_nngrasscover[order(abcover_nativecover_nngrasscover$nonnative_grass),]
tail <- max(abcover_nativecover_nngrasscover2$percentcover_native)
p1 <- ggplot(abcover_nativecover_nngrasscover2, aes(x = nonnative_grass, y = percentcover_native)) +
geom_point()
model <- lm(nonnative_grass ~ percentcover_native, data = abcover_nativecover_nngrasscover2)
bp <- breakpoints(nonnative_grass ~ percentcover_native, data = abcover_nativecover_nngrasscover2, h = 3)
#analyze breakpoints
# have to provide estimates for breakpoints.
# after looking a the data,
my.seg <- segmented(model,
seg.Z = ~ nonnative_grass,
npsi = 1
)
bp <- as.data.frame(my.seg$psi)
bp <- as.list(bp$Est.)
bpcount <- length(bp) + 1
modelxbeg <- rep(NaN, times = bpcount)
modelxend <- rep(NaN, times = bpcount)
modelybeg <- rep(NaN, times = bpcount)
modelyend <- rep(NaN, times = bpcount)
intercept <- rep(NaN, times = bpcount)
slope1 <- rep(NaN, times = bpcount)
break1 <- rep(NaN, times = bpcount)
for (i in 1:bpcount) {
break1[i] <- my.seg$psi[[i+1]]
if (i == 1) {
slope1[i] <- coef(my.seg)[[2]]
intercept[i] <- coef(my.seg)[[1]]
break1[i] <- 0
}
else {
slope1[i] <- slope1[i-1] + coef(my.seg)[[i+1]]
intercept[i] <- (intercept[i-1] + slope1[i-1]*break1[i]) - (slope1[i]*break1[i])
}
}
modelxend <- c(tail(break1, n = length(break1)-1), tail)
for (i in 1:bpcount) {
modelybeg[i] <- slope1[i]*break1[i] + intercept[i]
modelyend[i] <- slope1[i]*modelxend[i] + intercept[i]
}
segment_data = data.frame(
x = break1,
xend = modelxend,
y = modelybeg,
yend = modelyend)
# second row of the psi-matrix
my.lines <- my.seg$psi[, 2]
modelgraph_nnngrass <- p1 +
geom_vline(xintercept = my.lines, linetype = "dashed") +
geom_segment(
data = segment_data,
mapping = aes(x=x, y=y, xend=xend, yend=yend),
inherit.aes = FALSE)
modelgraph_nnngrass
abcover_nativecover_nngrasscover2 <- abcover_nativecover_nngrasscover[order(abcover_nativecover_nngrasscover$nonnative_grass),]
tail <- max(abcover_nativecover_nngrasscover2$percentcover_native)
p1 <- ggplot(abcover_nativecover_nngrasscover2, aes(y = nonnative_grass, x = percentcover_native)) +
geom_point()
model <- lm(nonnative_grass ~ percentcover_native, data = abcover_nativecover_nngrasscover2)
bp <- breakpoints(nonnative_grass ~ percentcover_native, data = abcover_nativecover_nngrasscover2, h = 3)
#analyze breakpoints
# have to provide estimates for breakpoints.
# after looking a the data,
my.seg <- segmented(model,
seg.Z = ~ nonnative_grass,
npsi = 1
)
bp <- as.data.frame(my.seg$psi)
bp <- as.list(bp$Est.)
bpcount <- length(bp) + 1
modelxbeg <- rep(NaN, times = bpcount)
modelxend <- rep(NaN, times = bpcount)
modelybeg <- rep(NaN, times = bpcount)
modelyend <- rep(NaN, times = bpcount)
intercept <- rep(NaN, times = bpcount)
slope1 <- rep(NaN, times = bpcount)
break1 <- rep(NaN, times = bpcount)
for (i in 1:bpcount) {
break1[i] <- my.seg$psi[[i+1]]
if (i == 1) {
slope1[i] <- coef(my.seg)[[2]]
intercept[i] <- coef(my.seg)[[1]]
break1[i] <- 0
}
else {
slope1[i] <- slope1[i-1] + coef(my.seg)[[i+1]]
intercept[i] <- (intercept[i-1] + slope1[i-1]*break1[i]) - (slope1[i]*break1[i])
}
}
modelxend <- c(tail(break1, n = length(break1)-1), tail)
for (i in 1:bpcount) {
modelybeg[i] <- slope1[i]*break1[i] + intercept[i]
modelyend[i] <- slope1[i]*modelxend[i] + intercept[i]
}
segment_data = data.frame(
x = break1,
xend = modelxend,
y = modelybeg,
yend = modelyend)
# second row of the psi-matrix
my.lines <- my.seg$psi[, 2]
modelgraph_nnngrass <- p1 +
geom_vline(xintercept = my.lines, linetype = "dashed") +
geom_segment(
data = segment_data,
mapping = aes(x=x, y=y, xend=xend, yend=yend),
inherit.aes = FALSE)
modelgraph_nnngrass
abcover_nativecover_nngrasscover2 <- abcover_nativecover_nngrasscover[order(abcover_nativecover_nngrasscover$nonnative_grass),]
tail <- max(abcover_nativecover_nngrasscover2$percentcover_native)
p1 <- ggplot(abcover_nativecover_nngrasscover2, aes(y = nonnative_grass, x = percentcover_native)) +
geom_point()
model <- lm(percentcover_native ~ nonnative_grass, data = abcover_nativecover_nngrasscover2)
bp <- breakpoints(nonnative_grass ~ percentcover_native, data = abcover_nativecover_nngrasscover2, h = 3)
#analyze breakpoints
# have to provide estimates for breakpoints.
# after looking a the data,
my.seg <- segmented(model,
seg.Z = ~ nonnative_grass,
npsi = 2
)
bp <- as.data.frame(my.seg$psi)
bp <- as.list(bp$Est.)
bpcount <- length(bp) + 1
modelxbeg <- rep(NaN, times = bpcount)
modelxend <- rep(NaN, times = bpcount)
modelybeg <- rep(NaN, times = bpcount)
modelyend <- rep(NaN, times = bpcount)
intercept <- rep(NaN, times = bpcount)
slope1 <- rep(NaN, times = bpcount)
break1 <- rep(NaN, times = bpcount)
for (i in 1:bpcount) {
break1[i] <- my.seg$psi[[i+1]]
if (i == 1) {
slope1[i] <- coef(my.seg)[[2]]
intercept[i] <- coef(my.seg)[[1]]
break1[i] <- 0
}
else {
slope1[i] <- slope1[i-1] + coef(my.seg)[[i+1]]
intercept[i] <- (intercept[i-1] + slope1[i-1]*break1[i]) - (slope1[i]*break1[i])
}
}
modelxend <- c(tail(break1, n = length(break1)-1), tail)
for (i in 1:bpcount) {
modelybeg[i] <- slope1[i]*break1[i] + intercept[i]
modelyend[i] <- slope1[i]*modelxend[i] + intercept[i]
}
segment_data = data.frame(
x = break1,
xend = modelxend,
y = modelybeg,
yend = modelyend)
# second row of the psi-matrix
my.lines <- my.seg$psi[, 2]
modelgraph_nnngrass <- p1 +
geom_vline(xintercept = my.lines, linetype = "dashed") +
geom_segment(
data = segment_data,
mapping = aes(x=x, y=y, xend=xend, yend=yend),
inherit.aes = FALSE)
modelgraph_nnngrass
abcover_nativecover_nngrasscover2 <- abcover_nativecover_nngrasscover[order(abcover_nativecover_nngrasscover$nonnative_grass),]
tail <- max(abcover_nativecover_nngrasscover2$percentcover_native)
p1 <- ggplot(abcover_nativecover_nngrasscover2, aes(y = nonnative_grass, x = percentcover_native)) +
geom_point()
model <- lm(percentcover_native ~ nonnative_grass, data = abcover_nativecover_nngrasscover2)
bp <- breakpoints(nonnative_grass ~ percentcover_native, data = abcover_nativecover_nngrasscover2, h = 3)
#analyze breakpoints
# have to provide estimates for breakpoints.
# after looking a the data,
my.seg <- segmented(model,
seg.Z = ~ nonnative_grass,
npsi = 2
)
bp <- as.data.frame(my.seg$psi)
bp <- as.list(bp$Est.)
bpcount <- length(bp) + 1
modelxbeg <- rep(NaN, times = bpcount)
modelxend <- rep(NaN, times = bpcount)
modelybeg <- rep(NaN, times = bpcount)
modelyend <- rep(NaN, times = bpcount)
intercept <- rep(NaN, times = bpcount)
slope1 <- rep(NaN, times = bpcount)
break1 <- rep(NaN, times = bpcount)
for (i in 1:bpcount) {
break1[i] <- my.seg$psi[[i+1]]
if (i == 1) {
slope1[i] <- coef(my.seg)[[2]]
intercept[i] <- coef(my.seg)[[1]]
break1[i] <- 0
}
else {
slope1[i] <- slope1[i-1] + coef(my.seg)[[i+1]]
intercept[i] <- (intercept[i-1] + slope1[i-1]*break1[i]) - (slope1[i]*break1[i])
}
}
modelxend <- c(tail(break1, n = length(break1)-1), tail)
for (i in 1:bpcount) {
modelybeg[i] <- slope1[i]*break1[i] + intercept[i]
modelyend[i] <- slope1[i]*modelxend[i] + intercept[i]
}
segment_data = data.frame(
x = break1,
xend = modelxend,
y = modelybeg,
yend = modelyend)
# second row of the psi-matrix
my.lines <- my.seg$psi[, 2]
modelgraph_nnngrass <- p1 +
geom_vline(xintercept = my.lines, linetype = "dashed") +
geom_segment(
data = segment_data,
mapping = aes(x=x, y=y, xend=xend, yend=yend),
inherit.aes = FALSE)
modelgraph_nnngrass
abcover_nativecover_nngrasscover2 <- abcover_nativecover_nngrasscover[order(abcover_nativecover_nngrasscover$nonnative_grass),]
tail <- max(abcover_nativecover_nngrasscover2$percentcover_native)
p1 <- ggplot(abcover_nativecover_nngrasscover2, aes(x = nonnative_grass, y = percentcover_native)) +
geom_point()
model <- lm(percentcover_native ~ nonnative_grass, data = abcover_nativecover_nngrasscover2)
bp <- breakpoints(nonnative_grass ~ percentcover_native, data = abcover_nativecover_nngrasscover2, h = 3)
#analyze breakpoints
# have to provide estimates for breakpoints.
# after looking a the data,
my.seg <- segmented(model,
seg.Z = ~ nonnative_grass,
npsi = 2
)
bp <- as.data.frame(my.seg$psi)
bp <- as.list(bp$Est.)
bpcount <- length(bp) + 1
modelxbeg <- rep(NaN, times = bpcount)
modelxend <- rep(NaN, times = bpcount)
modelybeg <- rep(NaN, times = bpcount)
modelyend <- rep(NaN, times = bpcount)
intercept <- rep(NaN, times = bpcount)
slope1 <- rep(NaN, times = bpcount)
break1 <- rep(NaN, times = bpcount)
for (i in 1:bpcount) {
break1[i] <- my.seg$psi[[i+1]]
if (i == 1) {
slope1[i] <- coef(my.seg)[[2]]
intercept[i] <- coef(my.seg)[[1]]
break1[i] <- 0
}
else {
slope1[i] <- slope1[i-1] + coef(my.seg)[[i+1]]
intercept[i] <- (intercept[i-1] + slope1[i-1]*break1[i]) - (slope1[i]*break1[i])
}
}
modelxend <- c(tail(break1, n = length(break1)-1), tail)
for (i in 1:bpcount) {
modelybeg[i] <- slope1[i]*break1[i] + intercept[i]
modelyend[i] <- slope1[i]*modelxend[i] + intercept[i]
}
segment_data = data.frame(
x = break1,
xend = modelxend,
y = modelybeg,
yend = modelyend)
# second row of the psi-matrix
my.lines <- my.seg$psi[, 2]
modelgraph_nnngrass <- p1 +
geom_vline(xintercept = my.lines, linetype = "dashed") +
geom_segment(
data = segment_data,
mapping = aes(x=x, y=y, xend=xend, yend=yend),
inherit.aes = FALSE)
modelgraph_nnngrass
