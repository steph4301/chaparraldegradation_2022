mutate(
firesig = case_when(
plant_cluster == "1" ~ " (a)",
plant_cluster == "2" ~ " (a)",
plant_cluster == "3" ~ " (a)",
plant_cluster == "4" ~ " (a)",
plant_cluster == "5" ~ " (a)",
TRUE ~ NA_character_  # Optional: fill with NA if no match
)
) %>%
mutate(
twisig = case_when(
plant_cluster == "1" ~ " (a)",
plant_cluster == "2" ~ " (a)",
plant_cluster == "3" ~ " (a)",
plant_cluster == "4" ~ " (a)",
plant_cluster == "5" ~ " (a)",
TRUE ~ NA_character_  # Optional: fill with NA if no match
)
) %>%
mutate(
solarsig = case_when(
plant_cluster == "1" ~ " (ac)",
plant_cluster == "2" ~ " (ac)",
plant_cluster == "3" ~ " (c)",
plant_cluster == "4" ~ " (a)",
plant_cluster == "5" ~ " (b)",
TRUE ~ NA_character_  # Optional: fill with NA if no match
)
) %>%
mutate(Slope = paste(slope, slopesig, sep = ""),
Southwestness = paste(southwestness, SWsig, sep = ""),
Fire = paste(fire_events, firesig, sep = ""),
TWI = paste(twi, twisig, sep = ""),
SolarRad = paste(total_solrad, solarsig, sep = ""),
) %>%
dplyr::select(plant_cluster, Slope, Southwestness, Fire, TWI, SolarRad) %>%
relocate(Slope, Southwestness, Fire, TWI, SolarRad, .after = plant_cluster) %>%
mutate(plant_cluster = recode(plant_cluster,
`1` = "NNG",
`2` = "ssF",
`3` = "ssG",
`4` = "ssFG",
`5` = "EVG")) %>%
gt() %>%
tab_header(
title = "Summary Statistics by Plant Association") %>%
tab_footnote(
footnote = "Means and standard deviations reported for normally distributed variables.",
locations = cells_column_labels(columns = Slope)
) %>%
tab_footnote(
footnote = "Medians and standard deviations reported for non-normally distributed variables.",
locations = cells_column_labels(columns = c(Southwestness, TWI, Fire, SolarRad))
) %>%
# Rename the column headers
cols_label(
plant_cluster = "Plant Association",        # Rename "plant_cluster" column
Slope = "Slope (%)",                    # Rename "slope" column
Southwestness = "Southwestness",        # Rename "southwestness" column
TWI = "TWI",       # Rename "tpi" column
Fire = "Fire Events",        # Rename "fire_events" column
SolarRad = "Total solar radiation"
) %>%
cols_align(
align = "center", # Center alignment
columns = "plant_cluster" # Specify the "cluster" column
) %>%
tab_options(
table.width = pct(100) # Make the table width 100%
)
table_plant_statsmeans
length(
boxdf %>%
filter(environ_cluster == "1")  %>%
pull(environ_cluster)
) # n = 17
length(
boxdf %>%
filter(environ_cluster == "2") %>%
pull(environ_cluster)
) # n = 13
length(
boxdf %>%
filter(environ_cluster == "3") %>%
pull(environ_cluster)
) # n = 9
########################################## southwestness
hist(boxdf$southwestness)
shapiro.test(boxdf$southwestness) # <- not normal
kruskal.test(southwestness ~ environ_cluster, data = boxdf) # p-value = 0.7918
pairwise.wilcox.test(boxdf$southwestness, boxdf$environ_cluster, p.adjust.method = "BH")
boxplot(southwestness ~ environ_cluster, boxdf)
# no sig diffs
# 1 a
# 2 a
# 3 a
########################################## twi
hist(boxdf$twi)
shapiro.test(boxdf$twi) # 0.033 <- not normal
kruskal.test(twi ~ environ_cluster, data = boxdf)
# Kruskal-Wallis chi-squared = 4.57, df = 1, p-value = 0.7641
pairwise.wilcox.test(boxdf$twi, boxdf$environ_cluster, p.adjust.method = "BH") # no sig diffs
boxplot(twi ~ environ_cluster, boxdf)
# Cells with a lower index value represent areas with steepest slope and tend to be ridges or crests
# present on the landscape. Higher cell values represent areas with increased accumulated runoff
# potential. These areas are identified by a low slope and large upslope contributing areas.
# 1 a
# 2 a
# 3 a
########################################## slope
hist(boxdf$slope)
shapiro.test(boxdf$slope) # <- normal
summary(aov(slope ~ environ_cluster, boxdf)) # p = 0.167, not sig diff
TukeyHSD(aov(slope ~ environ_cluster, boxdf), conf.level = .95)
# $environ_cluster
#          diff        lwr       upr     p adj
# 2-1 -4.163725 -10.932312  2.604862 0.3012302
# 3-1  1.704033  -5.869081  9.277146 0.8471351
# 3-2  5.867757  -2.098456 13.833970 0.1838509
boxplot(slope ~ environ_cluster, boxdf)
# 1 a
# 2 a
# 3 a
########################################## fire_event_count
hist(boxdf$fire_event_count)
shapiro.test(boxdf$fire_event_count) # not normal
kruskal.test(fire_event_count ~ environ_cluster, data = boxdf)
pairwise.wilcox.test(boxdf$fire_event_count, boxdf$environ_cluster, p.adjust.method = "BH")
#   1    2
# 2 0.37 -
# 3 0.23 0.37
boxplot(fire_event_count ~ environ_cluster, boxdf)
# 1 a
# 2 a
# 3 a
########################################## total_solrad
hist(boxdf$total_solrad)
shapiro.test(boxdf$total_solrad) # not normal
kruskal.test(total_solrad ~ environ_cluster, data = boxdf) # p-value = 6.78e-08
pairwise.wilcox.test(boxdf$total_solrad, boxdf$environ_cluster, p.adjust.method = "BH")
#   1       2
# 2 1.2e-05 -
# 3 6.2e-05 0.00011
# all are sig diff from each other
boxplot(total_solrad ~ environ_cluster, boxdf)
#### total solar radiation is the only environ variable that's sig different among environ clusters
# 1 a
# 2 b
# 3 c
############################### Environ variables by environ cluster
Env_means <- boxdf %>%
dplyr::select(c("site_rep", "plant_cluster", "environ_cluster",
"slope", "southwestness", "twi", "fire_event_count",
"total_solrad")) %>%
group_by(environ_cluster) %>%
mutate(environ_cluster = factor(environ_cluster, levels = c(1, 2, 3 ))) %>%  # Reorder
summarize(
slope = paste0(round(mean(slope), 2), " ± ", round(sd(slope), 2)), # MEAN becuase normally distributed
southwestness = paste0(round(median(southwestness), 2), " ± ", round(sd(southwestness), 2)),
fire_events = paste0(round(median(fire_event_count), 2), " ± ", round(sd(fire_event_count), 2)),
twi = paste0(round(median(twi), 2), " ± ", round(sd(twi), 2)),
total_solrad = paste0(comma(round(median(total_solrad), 0)), " ± ", comma(round(sd(total_solrad), 0)))
)
# Print as a gt table
table_environ <- Env_means %>%
# Rename environ_cluster values before passing to gt
mutate(environ_cluster = recode(environ_cluster,
`1` = "Steep, sunny",
`2` = "Flat, sunny",
`3` = "Steep, shady, dry")) %>%
gt() %>%
tab_header(
title = "Summary of Environmental Variables by Environmental Cluster"
#,
#subtitle = "words here"
) %>%
tab_footnote(
footnote = "Means and standard deviations reported for normally distributed variables.",
locations = cells_column_labels(columns = slope)
) %>%
tab_footnote(
footnote = "Medians and standard deviations reported for non-normally distributed variables.",
locations = cells_column_labels(c(columns = southwestness, twi, fire_events, total_solrad))
) %>%
# Rename the column headers
cols_label(
environ_cluster = "Environmental Group",        # Rename "plant_cluster" column
slope = "Slope (%)",                    # Rename "slope" column
southwestness = "Southwestness",        # Rename "southwestness" column
twi = "TWI",       # Rename "tpi" column
fire_events = "Fire Count",        # Rename "fire_events" column
total_solrad = "Total solar radiation"
) %>%
cols_align(
align = "center", # Center alignment
columns = "environ_cluster" # Specify the "cluster" column
) %>%
tab_options(
table.width = pct(100) # Make the table width 100%
)
table_environ
table_environ_statsmeans <- Env_means %>%
mutate(
slopesig = case_when(
environ_cluster == "1" ~ " (a)",
environ_cluster == "2" ~ " (a)",
environ_cluster == "3" ~ " (a)",
TRUE ~ NA_character_  # Optional: fill with NA if no match
)
) %>%
mutate(
SWsig = case_when(
environ_cluster == "1" ~ " (a)",
environ_cluster == "2" ~ " (a)",
environ_cluster == "3" ~ " (a)",
TRUE ~ NA_character_  # Optional: fill with NA if no match
)
) %>%
mutate(
firesig = case_when(
environ_cluster == "1" ~ " (a)",
environ_cluster == "2" ~ " (a)",
environ_cluster == "3" ~ " (a)",
TRUE ~ NA_character_  # Optional: fill with NA if no match
)
) %>%
mutate(
twisig = case_when(
environ_cluster == "1" ~ " (a)",
environ_cluster == "2" ~ " (a)",
environ_cluster == "3" ~ " (a)",
TRUE ~ NA_character_  # Optional: fill with NA if no match
)
) %>%
mutate(
solarsig = case_when(
environ_cluster == "1" ~ " (a)",
environ_cluster == "2" ~ " (b)",
environ_cluster == "3" ~ " (c)",
TRUE ~ NA_character_  # Optional: fill with NA if no match
)
) %>%
mutate(Slope = paste(slope, slopesig, sep = ""),
SW = paste(southwestness, SWsig, sep = ""),
Fire = paste(fire_events, firesig, sep = ""),
TWI = paste(twi, twisig, sep = ""),
SolarRad = paste(total_solrad, solarsig, sep = ""),
) %>%
dplyr::select(environ_cluster, Slope, SW, Fire, TWI, SolarRad) %>%
relocate(Slope, SW, Fire, TWI, SolarRad, .after = environ_cluster) %>%
mutate(environ_cluster = recode(environ_cluster,
`1` = "Sunniest",
`2` = "Sunny",
`3` = "Shady")) %>%
gt() %>%
tab_header(
title = "Summary Statistics by Environmental Cluster"
#,
#subtitle = "words here"
) %>%
tab_footnote(
footnote = "Means and standard deviations reported for normally distributed variables.",
locations = cells_column_labels(columns = Slope)
) %>%
tab_footnote(
footnote = "Medians and standard deviations reported for non-normally distributed variables.",
locations = cells_column_labels(columns = c(SW, Fire, TWI, SolarRad))
) %>%
# Rename the column headers
cols_label(
environ_cluster = "Environmental Group",        # Rename "plant_cluster" column
Slope = "Slope (%)",                    # Rename "slope" column
SW = "Southwestness",        # Rename "southwestness" column
TWI = "TWI",       # Rename "tpi" column
Fire = "Fire Count",        # Rename "fire_events" column
SolarRad = "Total solar radiation"
) %>%
cols_align(
align = "center", # Center alignment
columns = "environ_cluster" # Specify the "cluster" column
) %>%
tab_options(
table.width = pct(100) # Make the table width 100%
)
table_environ_statsmeans
# total_solar_rad by transect (n = 39)
SALExTSR <- boxdf %>%
dplyr::select(c(site, site_rep, total_solrad, plant_cluster, environ_cluster)) %>%
left_join(sale_load, by = "site_rep") %>%
mutate_all(~replace(., is.na(.), 0)) # 1_03 does not have gps coordinates
head(SALExTSR)
fig_SALExTSR_zeros <- ggplot(SALExTSR,
aes(x = total_solrad,
y = percentcover
#  shape = plant_cluster,   # Shape by lifeform
#  color = plant_cluster   # Color by lifecycle
)) +
geom_point(size = 3, position = position_dodge(width = 0.0)) +  # Mean points
# labs(x = "Total Solar Radiation",
#     y = "Salvia leucophylla Percent Cover (%)",
#    shape = "Plant Cluster", # Label for color legend
#   color = "Plant Cluster"
#  ) +  # Label for shape legend
theme_bw() +
ylim(0, 100) +
xlim(9000, 31000) +
geom_smooth(method = "lm", se = TRUE, linetype = "solid", show.legend = TRUE)
fig_SALExTSR_omitzeros <- ggplot(SALExTSR
%>%  filter(percentcover >0),
aes(x = total_solrad,
y = percentcover
#  shape = plant_cluster,   # Shape by lifeform
#  color = plant_cluster   # Color by lifecycle
)) +
geom_point(size = 3, position = position_dodge(width = 0.0)) +  # Mean points
# labs(x = "Total Solar Radiation",
#     y = "Salvia leucophylla Percent Cover (%)",
#    shape = "Plant Cluster", # Label for color legend
#   color = "Plant Cluster"
#  ) +  # Label for shape legend
theme_bw() +
ylim(0, 100) +
xlim(9000, 31000) +
geom_smooth(method = "lm", se = TRUE, linetype = "solid", show.legend = TRUE)
fig_SALExTSR_zeros
fig_SALExTSR_omitzeros
# data prep
environ_trans <- extracted %>%
dplyr::select(site_rep, plant_cluster, slope, southwestness, fire_event_count, twi, total_solrad) %>%
separate(site_rep, into = c("site", "rep"), sep = "_") %>%
mutate(rep = case_when(rep == "01" ~ "1", # oldname ~ newname
rep == "02" ~ "2",
rep == "03" ~ "3",
rep == "04" ~ "4",
rep == "05" ~ "5",
rep == "06" ~ "6",
rep == "07" ~ "7",
rep == "08" ~ "8",
rep == "09" ~ "9",
TRUE ~ rep)) %>%
mutate(site_rep = paste(site, rep, sep = "_")) %>%
left_join(cover_prep %>% dplyr::select(-site), by = "site_rep") %>%
rename(cluster = plant_cluster) #rename(NewNameA = OldName1)
fig_sol_grass <- ggplot(data = environ_trans,
aes(x = total_solrad,
y = grass_nonnative*100)) +
geom_point(aes(color = site), size = 3) +
scale_color_manual(values = c("blue", "green", "maroon", "maroon", "maroon", "maroon", "maroon")) +
geom_smooth(method = "lm", se = TRUE, color = "gray50", linetype = "solid") + # se = confidence interval
labs(
y = "Non-native grass cover (%)",
x = "Total Solar Radiation",
color = "Site"
) +
scale_x_continuous(limits = c(0, 31000),
breaks = seq(0, 31000, by = 5000),
expand = expansion(mult = c(0, 0.05))
) + # Set x-axis limits and breaks
scale_y_continuous(limits = c(0, 100),
breaks = seq(0, 100, by = 10),
expand = expansion(mult = c(0, 0.05))
) + # Set y-axis limits and breaks
theme_bw() +
theme(axis.text = element_text(size = 16)) + # axes numbers
theme(axis.title = element_text(size = 20)) + # axes titles
theme(legend.title=element_text(size = 16)) +
theme(legend.text=element_text(size = 16))
# annotate("text", x = 5, y = 5, label = eq_label, color = "black", size = 4, hjust = 0)
fig_sol_grass
fig_sol_shrub <- ggplot(data = environ_trans,
aes(x = total_solrad,
y = shrub_native*100)) +
geom_point(aes(color = site), size = 3) +
scale_color_manual(values = c("blue", "green", "maroon", "maroon", "maroon", "maroon", "maroon")) +
geom_smooth(method = "lm", se = TRUE, color = "gray50", linetype = "solid") + # se = confidence interval
labs(
y = "Non-native grass cover (%)",
x = "Total Solar Radiation",
color = "Site"
) +
scale_x_continuous(limits = c(0, 31000),
breaks = seq(0, 31000, by = 5000),
expand = expansion(mult = c(0, 0.05))
) + # Set x-axis limits and breaks
scale_y_continuous(limits = c(0, 100),
breaks = seq(0, 100, by = 10),
expand = expansion(mult = c(0, 0.05))
) + # Set y-axis limits and breaks
theme_bw() +
theme(axis.text = element_text(size = 16)) + # axes numbers
theme(axis.title = element_text(size = 20)) + # axes titles
theme(legend.title=element_text(size = 16)) +
theme(legend.text=element_text(size = 16))
# annotate("text", x = 5, y = 5, label = eq_label, color = "black", size = 4, hjust = 0)
fig_sol_grass
fig_sol_shrub
fig_slope <- ggplot(data = environ_trans,
aes(x = slope,
y = grass_nonnative*100)) +
geom_point(aes(color = cluster), size = 3) +
# scale_color_manual(values = c("blue", "green", "maroon", "maroon", "maroon", "maroon", "maroon")) +
geom_smooth(method = "lm", se = TRUE, color = "gray50", linetype = "solid") + # se = confidence interval
labs(
y = "Non-native grass cover (%)",
x = "Slope (degrees)",
color = "Cluster"
) +
scale_x_continuous(limits = c(0, 35),
breaks = seq(0, 35, by = 5),
expand = expansion(mult = c(0, 0.05))
) + # Set x-axis limits and breaks
scale_y_continuous(limits = c(0, 100),
breaks = seq(0, 100, by = 10),
expand = expansion(mult = c(0, 0.05))
) + # Set y-axis limits and breaks
theme_bw() +
theme(axis.text = element_text(size = 16)) + # axes numbers
theme(axis.title = element_text(size = 20)) + # axes titles
theme(legend.title=element_text(size = 16)) +
theme(legend.text=element_text(size = 16))
# annotate("text", x = 5, y = 5, label = eq_label, color = "black", size = 4, hjust = 0)
fig_slope
fig_sw <- ggplot(data = environ_trans,
aes(x = southwestness,
y = grass_nonnative*100)) +
geom_point(aes(color = cluster), size = 3) +
# scale_color_manual(values = c("blue", "green", "maroon", "maroon", "maroon", "maroon", "maroon")) +
geom_smooth(method = "lm", se = TRUE, color = "gray50", linetype = "solid") + # se = confidence interval
labs(
y = "Non-native grass cover (%)",
x = "Southwestness",
color = "Cluster"
) +
scale_x_continuous(limits = c(-1, 1),
breaks = seq(-1, 1, by = 0.25),
expand = expansion(mult = c(0, 0.05))
) + # Set x-axis limits and breaks
scale_y_continuous(limits = c(0, 100),
breaks = seq(0, 100, by = 10),
expand = expansion(mult = c(0, 0.05))
) + # Set y-axis limits and breaks
theme_bw() +
theme(axis.text = element_text(size = 16)) + # axes numbers
theme(axis.title = element_text(size = 20)) + # axes titles
theme(legend.title=element_text(size = 16)) +
theme(legend.text=element_text(size = 16))
# annotate("text", x = 5, y = 5, label = eq_label, color = "black", size = 4, hjust = 0)
fig_sw
fig_twi <- ggplot(data = environ_trans,
aes(x = twi,
y = grass_nonnative*100)) +
geom_point(aes(color = cluster), size = 3) +
# scale_color_manual(values = c("blue", "green", "maroon", "maroon", "maroon", "maroon", "maroon")) +
geom_smooth(method = "lm", se = TRUE, color = "gray50", linetype = "solid") + # se = confidence interval
labs(
y = "Non-native grass cover (%)",
x = "Topographic wetness index",
color = "Cluster"
) +
scale_x_continuous(limits = c(0, 6),
breaks = seq(0, 6, by = 2),
expand = expansion(mult = c(0, 0.05))
) + # Set x-axis limits and breaks
scale_y_continuous(limits = c(0, 100),
breaks = seq(0, 100, by = 10),
expand = expansion(mult = c(0, 0.05))
) + # Set y-axis limits and breaks
theme_bw() +
theme(axis.text = element_text(size = 16)) + # axes numbers
theme(axis.title = element_text(size = 20)) + # axes titles
theme(legend.title=element_text(size = 16)) +
theme(legend.text=element_text(size = 16))
# annotate("text", x = 5, y = 5, label = eq_label, color = "black", size = 4, hjust = 0)
fig_twi
fig_fire <- ggplot(data = environ_trans,
aes(x = fire_event_count,
y = grass_nonnative*100)) +
geom_point(aes(color = cluster), size = 3) +
# scale_color_manual(values = c("blue", "green", "maroon", "maroon", "maroon", "maroon", "maroon")) +
geom_smooth(method = "lm", se = TRUE, color = "gray50", linetype = "solid") + # se = confidence interval
labs(
y = "Non-native grass cover (%)",
x = "Number of Fires (#)",
color = "Cluster"
) +
scale_x_continuous(limits = c(0, 2),
breaks = seq(0, 2, by = 1),
expand = expansion(mult = c(0, 0.05))
) + # Set x-axis limits and breaks
scale_y_continuous(limits = c(0, 100),
breaks = seq(0, 100, by = 10),
expand = expansion(mult = c(0, 0.05))
) + # Set y-axis limits and breaks
theme_bw() +
theme(axis.text = element_text(size = 16)) + # axes numbers
theme(axis.title = element_text(size = 20)) + # axes titles
theme(legend.title=element_text(size = 16)) +
theme(legend.text=element_text(size = 16))
# annotate("text", x = 5, y = 5, label = eq_label, color = "black", size = 4, hjust = 0)
fig_fire
print("hurray! This is the end of the code :)")
```{r}
print("hurray! This is the end of the code :)")
break this code
kruskal.test(total_solrad ~ plant_cluster, data = boxdf)
########################################## totalsolarrad
hist(boxdf$total_solrad)
boxplot(total_solrad ~ plant_cluster, boxdf)
shapiro.test(boxdf$total_solrad) # <- not normal
kruskal.test(total_solrad ~ plant_cluster, data = boxdf)
pairwise.wilcox.test(boxdf$total_solrad, boxdf$plant_cluster, p.adjust.method = "BH")
