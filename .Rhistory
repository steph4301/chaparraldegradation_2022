L12 <- list(natforb_spp1$species_diversity, natforb_spp2$species_diversity)
Reduce(intersect, L12)
# [1] "Acmispon maritimus"
# ... and "Astragalus trichopodus"  "Emmenanthe penduliflora"
### in soil cluster 2 and 3
L23 <- list(natforb_spp2$species_diversity, natforb_spp3$species_diversity)
Reduce(intersect, L23)
# [1] "Acmispon glaber"
# [4] "Solanum xanti"           "Stephanomeria virgata"   "Typha domingensis"
# [7] "Uropappus lindleyi"
# ... and "Astragalus trichopodus"  "Emmenanthe penduliflora"
### in soil cluster 1 and 3
L13 <- list(natforb_spp1$species_diversity, natforb_spp3$species_diversity)
Reduce(intersect, L13)
# [1]     "Cryptantha spp."
# [3]     "Erigeron canadensis"
# [5] "Eucrypta chrysanthemifolia"
# ... and "Astragalus trichopodus"  "Emmenanthe penduliflora"
forbNN_spprich <- seedbank_cluster %>%
filter(lifeform == "forb" & status == "nonnative" &  count > 0)
length(unique(forbNN_spprich$species_diversity)) # n = 10
forbNN_spprich %>%
group_by(sdbk_clust) %>%
summarize(N = length(unique(species_diversity)))
# sdbk_clust      N
# 1	              7
# 2	              6
# 3	              5
######## GRASS spp rich
natgrass_spprich <- seedbank_cluster %>%
filter(lifeform == "grass" & status == "native" & count > 0) %>%
filter(lifescycle == "annual" | lifescycle == "perennial" | lifescycle == "unknown")
sort(unique(natgrass_spprich$species_diversity))
length(sort(unique(natgrass_spprich$species_diversity)))
# "Melica imperfecta"
# "Stipa lepida"
natgrass_spprich %>%
group_by(sdbk_clust)%>%
summarize(N = length(unique(species_diversity)))
# sdbk_clust    length(unique(species_diversity))
# 1	            0
# 2	            1
# 3	            2
seedbankgerm_cluster_prep <- germination_depthtreat %>% # left join seedbank cluster name to germ data
left_join(seed.subgrp.df, by = c("stand_core", "stand", "site")) %>%
rename(sdbk_clust = sub_grp) %>%
mutate(sdbk_clust = as.character(sdbk_clust)) %>%
dplyr::select(species_diversity, status, lifescycle, lifeform, family, sdbk_clust, n_per_g, stand_core, treatment, depth_name, stand_core_depth_treat) %>%
mutate(species_diversity = case_when(
species_diversity == "Erodium moschatum" ~ "Erodium spp.",
species_diversity == "Erodium cicutarium" ~ "Erodium spp.",
species_diversity == "Phacelia tanacetifolia" ~ "Phacelia spp.",
species_diversity == "Phacelia viscida" ~ "Phacelia spp.",
TRUE ~ species_diversity)
)
names(germination_depthtreat)
names(seed.subgrp.df)
seed.subgrp.df <- left_join(temp.df, my_groups, by = "rowname") %>%
dplyr::select(rowname, sub_grp, site, stand_core, stand)
seed.subgrp.df <- left_join(temp.df, my_groups, by = "rowname")
names(seed.subgrp.df)
view(seed.subgrp.df)
view(germination_depthtreat)
seedbankgerm_cluster_prep <- germination_depthtreat %>% # left join seedbank cluster name to germ data
left_join(seed.subgrp.df, by = c("stand_core", "site")) %>%
rename(sdbk_clust = sub_grp) %>%
mutate(sdbk_clust = as.character(sdbk_clust)) %>%
dplyr::select(species_diversity, status, lifescycle, lifeform, family, sdbk_clust, n_per_g, stand_core, treatment, depth_name, stand_core_depth_treat) %>%
mutate(species_diversity = case_when(
species_diversity == "Erodium moschatum" ~ "Erodium spp.",
species_diversity == "Erodium cicutarium" ~ "Erodium spp.",
species_diversity == "Phacelia tanacetifolia" ~ "Phacelia spp.",
species_diversity == "Phacelia viscida" ~ "Phacelia spp.",
TRUE ~ species_diversity)
)
seedbankgerm_cluster_prep <- germination_depthtreat %>% # left join seedbank cluster name to germ data
left_join(seed.subgrp.df, by = c("stand_core", "site")) %>%
rename(sdbk_clust = sub_grp) %>%
mutate(sdbk_clust = as.character(sdbk_clust)) %>%
dplyr::select(species_diversity, status, lifescycle, lifeform, family, sdbk_clust, n_per_g, stand_core, treatment, depth_name, stand_core_depth_treat) %>%
mutate(species_diversity = case_when(
species_diversity == "Erodium moschatum" ~ "Erodium spp.",
species_diversity == "Erodium cicutarium" ~ "Erodium spp.",
species_diversity == "Phacelia tanacetifolia" ~ "Phacelia spp.",
species_diversity == "Phacelia viscida" ~ "Phacelia spp.",
TRUE ~ species_diversity)
)
seedbankgerm_cluster <- seedbankgerm_cluster_prep %>%
group_by(species_diversity, status, lifescycle, lifeform, family, sdbk_clust, stand_core) %>%
summarise(total_seeds = sum(n_per_g),
n_trays = length(stand_core_depth_treat),
avg_density = mean(total_seeds/8)) # average seed density across  potential trays
hist(seedbankgerm_cluster$avg_density)
median_seedgermcluster <- seedbankgerm_cluster %>%
group_by(species_diversity, status, lifescycle, lifeform, family, sdbk_clust) %>%
summarise(median_seedden = round(median(avg_density, na.rm = TRUE), 3), .groups = "drop") %>%
mutate(sdbk_clust = recode(sdbk_clust,
`1` = "DEG",
`2` = "MTX",
`3` = "INT")) %>%
pivot_wider(names_from = sdbk_clust, values_from = median_seedden, values_fill = 0) %>%
rename(Species = species_diversity,
Lifecycle = lifescycle,
Status = status,
Lifeform = lifeform,
Family = family
) %>%
mutate(Status = case_when(
Status == "native" ~ "nat",
Status == "nonnative" ~ "nn",
TRUE ~ Status)
) %>%
mutate(Lifecycle = case_when(
Lifecycle == "annual" ~ "ann",
Lifecycle == "perennial" ~ "per",
TRUE ~ Lifecycle)
)  %>%
relocate(Status, Lifecycle, Lifeform, Family, DEG, MTX, INT, .after = Species)  %>%
mutate(
DEG = case_when(
DEG == 0 ~ "-",                            # Replace 0 with NA
DEG > 0 & DEG < 0.001 ~ "<0.001",                    # Replace values between 0 and 0.001
TRUE ~ as.character(DEG)                             # Keep all other values
),
MTX = case_when(
MTX == 0 ~ "-",
MTX > 0 & MTX < 0.001 ~ "<0.001",
TRUE ~ as.character(MTX)
),
INT = case_when(
INT == 0 ~ "-",
INT > 0 & INT < 0.001 ~ "<0.001",
TRUE ~ as.character(INT)
)
)
median_seedgermcluster
# Print as a gt table
table_germ <- median_seedgermcluster %>%
gt() %>%
tab_header(
title = "Median Average Germination by Cluster",
#subtitle = "Mean ± Standard Deviation for Elevation, Hillshade, Slope, Southwestness, Fire Events, and Coordinates"
) %>%
cols_align(
align = "left", # Center alignment
columns = "Species" # Specify the "cluster" column
) %>%
tab_options(
table.width = pct(80) # Make the table width 100%
)
table_germ
# Export the table as a word doc.
gtsave(table_germ,
"Ch1_Degradation_figures/table_germ_clustergroups_dec11.docx", # can also export as .png
expand = 10)
# updated code on jan 21, 2024
seedbank_byfamily_new <- germination_depthtreat %>% # prior df: seedbank_load_v_omitpretreatment
filter(count > 0) %>%
group_by(stand, site, stand_core, family, status) %>%
# This will give a data point for every species based on germination numbers per species
dplyr::summarize(germ_nperg_family = sum(n_per_g),
N_species = length(unique(species_diversity)),
total_count = sum(count))
head(seedbank_byfamily_new)
sort(unique(seedbank_byfamily_new$family)) # df before transpose - use for ellipses
# N = 26 families - 1 unknown family
n_distinct(seedbank_byfamily_new$family) -1 # 25
family_native <- ggplot(seedbank_byfamily_new %>%
dplyr::filter(status == "native"),
aes(fill=family, y=germ_nperg_family, x=stand_core)) +
geom_bar(position="stack", stat="identity") +
ylim(0, 2)+
#ggtitle("Germination (#/g soil) by Family and Status") +
labs(x="Sampling Location", y="Germination (#/g soil)") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
facet_wrap(~ status)
family_native_print <- family_native + theme(legend.position = c(0.1, 0.2)) # Key location offset from (0,0)
family_nn <- ggplot(seedbank_byfamily_new %>%
dplyr::filter(status == "nonnative"),
aes(fill=family, y=germ_nperg_family, x=stand_core)) +
geom_bar(position="stack", stat="identity") +
ylim(0, 2)+
#ggtitle("Germination (#/g soil) by Family and Status") +
labs(x="Sampling Location", y="Germination (#/g soil)") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
facet_wrap(~ status)
# With the par( ) function, you can include the option mfrow=c(nrows, ncols) to create a matrix of nrows x ncols plots that are filled in by row. mfcol=c(nrows, ncols) fills in the matrix by columns.
# option 1
# ggarrange(family_native, family_nn,
#           labels = c("A", "B"),
#           ncol = 1, nrow = 2)
#
# option 2
ggdraw() +
draw_plot(family_native, x = 0.02, y = .5, width = 1, height = .5) +
draw_plot(family_nn, x = 0.02, y = 0, width = 1, height = .5) +
# draw_plot(bp, x = 0, y = 0, width = 1, height = 0.5) +
draw_plot_label(label = c("A", "B"), size = 10,
x = c(0, 0), y = c(1, .5))
##### table
seed_div <- left_join(temp.df, my_groups, by = "rowname") %>% # n_per_g
rename(cluster = sub_grp) %>%  # rename column
pivot_longer(cols = 5:60, names_to = "species_diversity", values_to = "n_per_g") %>%
mutate(species_diversity = case_when(
species_diversity == "Unknown Phrymaceae¬†¬†" ~ "Unknown D - brown dicot", # old name ~ new name
TRUE ~ as.character(species_diversity)))
seed_div <- left_join(temp.df, my_groups, by = "rowname")
names(seed_div)
seed_div <- left_join(temp.df, my_groups, by = "rowname") %>% # n_per_g
rename(cluster = sub_grp)
seed_div <- left_join(temp.df, my_groups, by = "rowname") %>% # n_per_g
rename(cluster = sub_grp) %>%  # rename column
pivot_longer(cols = 5:60, names_to = "species_diversity", values_to = "n_per_g")
seed_div <- left_join(temp.df, my_groups, by = "rowname") %>% # n_per_g
rename(cluster = sub_grp)
dim(seed_div)
str(seed_div)
view(seed_div)
seed_div <- left_join(temp.df, my_groups, by = "rowname") %>% # n_per_g
rename(cluster = sub_grp) %>%  # rename column
pivot_longer(cols = 4:59, names_to = "species_diversity", values_to = "n_per_g") %>%
mutate(species_diversity = case_when(
species_diversity == "Unknown Phrymaceae¬†¬†" ~ "Unknown D - brown dicot", # old name ~ new name
TRUE ~ as.character(species_diversity)))
view(seed_div)
shrub_spplist <- unique(germination_m2_raw %>%
dplyr::select(species_diversity, lifeform, status, lifescycle, family))
shrub_list <- seed_div %>%
left_join(shrub_spplist, by = "species_diversity") %>%
filter(lifeform == "shrub") %>%
ungroup() %>%
dplyr::select(cluster, species_diversity, n_per_g) %>%
group_by(cluster, species_diversity) %>%
summarize(mean_n_per_g = round(mean(n_per_g), 6)) %>%
pivot_wider(names_from = cluster, values_from = mean_n_per_g, names_prefix = "Group ")
shrub_list <- seed_div %>%
left_join(shrub_spplist, by = "species_diversity")
view(shrub_list)
names(shrub_list)
shrub_list <- seed_div %>%
left_join(shrub_spplist, by = "species_diversity") %>%
filter(lifeform == "shrub") %>%
ungroup()
shrub_list <- seed_div %>%
left_join(shrub_spplist, by = "species_diversity") %>%
filter(lifeform == "shrub") %>%
ungroup()
view(shrub_list)
head(seedbank_cluster, 10)
view(seedbank_cluster)
seedbankgerm_cluster_prep <- germination_depthtreat %>% # left join seedbank cluster name to germ data
left_join(seed.subgrp.df, by = c("stand_core", "site")) %>%
rename(sdbk_clust = sub_grp) %>%
mutate(sdbk_clust = as.character(sdbk_clust)) %>%
dplyr::select(species_diversity, status, lifescycle, lifeform, family, sdbk_clust, n_per_g, stand_core, treatment, depth_name, stand_core_depth_treat) %>%
mutate(species_diversity = case_when(
species_diversity == "Erodium moschatum" ~ "Erodium spp.",
species_diversity == "Erodium cicutarium" ~ "Erodium spp.",
species_diversity == "Phacelia tanacetifolia" ~ "Phacelia spp.",
species_diversity == "Phacelia viscida" ~ "Phacelia spp.",
TRUE ~ species_diversity)
)
seedbankgerm_cluster <- seedbankgerm_cluster_prep %>%
group_by(species_diversity, status, lifescycle, lifeform, family, sdbk_clust, stand_core) %>%
summarise(total_seeds = sum(n_per_g),
n_trays = length(stand_core_depth_treat),
avg_density = mean(total_seeds/8)) # average seed density across  potential trays
hist(seedbankgerm_cluster$avg_density)
median_seedgermcluster <- seedbankgerm_cluster %>%
group_by(species_diversity, status, lifescycle, lifeform, family, sdbk_clust) %>%
summarise(median_seedden = round(median(avg_density, na.rm = TRUE), 3), .groups = "drop") %>%
mutate(sdbk_clust = recode(sdbk_clust,
`1` = "DEG",
`2` = "MTX",
`3` = "INT")) %>%
pivot_wider(names_from = sdbk_clust, values_from = median_seedden, values_fill = 0) %>%
rename(Species = species_diversity,
Lifecycle = lifescycle,
Status = status,
Lifeform = lifeform,
Family = family
) %>%
mutate(Status = case_when(
Status == "native" ~ "nat",
Status == "nonnative" ~ "nn",
TRUE ~ Status)
) %>%
mutate(Lifecycle = case_when(
Lifecycle == "annual" ~ "ann",
Lifecycle == "perennial" ~ "per",
TRUE ~ Lifecycle)
)  %>%
relocate(Status, Lifecycle, Lifeform, Family, DEG, MTX, INT, .after = Species)  %>%
mutate(
DEG = case_when(
DEG == 0 ~ "-",                            # Replace 0 with NA
DEG > 0 & DEG < 0.001 ~ "<0.001",                    # Replace values between 0 and 0.001
TRUE ~ as.character(DEG)                             # Keep all other values
),
MTX = case_when(
MTX == 0 ~ "-",
MTX > 0 & MTX < 0.001 ~ "<0.001",
TRUE ~ as.character(MTX)
),
INT = case_when(
INT == 0 ~ "-",
INT > 0 & INT < 0.001 ~ "<0.001",
TRUE ~ as.character(INT)
)
)
median_seedgermcluster
# Print as a gt table
table_germ <- median_seedgermcluster %>%
gt() %>%
tab_header(
title = "Median Average Germination by Cluster",
#subtitle = "Mean ± Standard Deviation for Elevation, Hillshade, Slope, Southwestness, Fire Events, and Coordinates"
) %>%
cols_align(
align = "left", # Center alignment
columns = "Species" # Specify the "cluster" column
) %>%
tab_options(
table.width = pct(80) # Make the table width 100%
)
table_germ
# Export the table as a word doc.
gtsave(table_germ,
"Ch1_Degradation_figures/table_germ_clustergroups_dec11.docx", # can also export as .png
expand = 10)
# updated code on jan 21, 2024
seedbank_byfamily_new <- germination_depthtreat %>% # prior df: seedbank_load_v_omitpretreatment
filter(count > 0) %>%
group_by(stand, site, stand_core, family, status) %>%
# This will give a data point for every species based on germination numbers per species
dplyr::summarize(germ_nperg_family = sum(n_per_g),
N_species = length(unique(species_diversity)),
total_count = sum(count))
head(seedbank_byfamily_new)
sort(unique(seedbank_byfamily_new$family)) # df before transpose - use for ellipses
n_distinct(seedbank_byfamily_new$family) -1 # 25
family_native <- ggplot(seedbank_byfamily_new %>%
dplyr::filter(status == "native"),
aes(fill=family, y=germ_nperg_family, x=stand_core)) +
geom_bar(position="stack", stat="identity") +
ylim(0, 2)+
#ggtitle("Germination (#/g soil) by Family and Status") +
labs(x="Sampling Location", y="Germination (#/g soil)") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
facet_wrap(~ status)
family_native_print <- family_native + theme(legend.position = c(0.1, 0.2)) # Key location offset from (0,0)
family_nn <- ggplot(seedbank_byfamily_new %>%
dplyr::filter(status == "nonnative"),
aes(fill=family, y=germ_nperg_family, x=stand_core)) +
geom_bar(position="stack", stat="identity") +
ylim(0, 2)+
#ggtitle("Germination (#/g soil) by Family and Status") +
labs(x="Sampling Location", y="Germination (#/g soil)") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
facet_wrap(~ status)
# option 1
# ggarrange(family_native, family_nn,
#           labels = c("A", "B"),
#           ncol = 1, nrow = 2)
#
# option 2
ggdraw() +
draw_plot(family_native, x = 0.02, y = .5, width = 1, height = .5) +
draw_plot(family_nn, x = 0.02, y = 0, width = 1, height = .5) +
# draw_plot(bp, x = 0, y = 0, width = 1, height = 0.5) +
draw_plot_label(label = c("A", "B"), size = 10,
x = c(0, 0), y = c(1, .5))
seed_div <- left_join(temp.df, my_groups, by = "rowname") %>% # n_per_g
rename(cluster = sub_grp) %>%  # rename column
pivot_longer(cols = 4:59, names_to = "species_diversity", values_to = "n_per_g") %>%
mutate(species_diversity = case_when(
species_diversity == "Unknown Phrymaceae¬†¬†" ~ "Unknown D - brown dicot", # old name ~ new name
TRUE ~ as.character(species_diversity)))
shrub_spplist <- unique(germination_m2_raw %>%
dplyr::select(species_diversity, lifeform, status, lifescycle, family))
shrub_list <- seed_div %>%
left_join(shrub_spplist, by = "species_diversity") %>%
filter(lifeform == "shrub") %>%
ungroup() %>%
dplyr::select(species_diversity, n_per_g) %>%
group_by( species_diversity) %>%
summarize(mean_n_per_g = round(mean(n_per_g), 6)) %>%
pivot_wider(names_from = cluster, values_from = mean_n_per_g, names_prefix = "Group ")
names(seed_div)
view(seed_div)
seed_div <- left_join(temp.df, my_groups, by = "rowname") %>% # n_per_g
rename(cluster = sub_grp)
view(seed_div)
seed_div <- left_join(temp.df, my_groups, by = "rowname") %>% # n_per_g
rename(cluster = sub_grp) %>%  # rename column
pivot_longer(cols = 4:58, names_to = "species_diversity", values_to = "n_per_g")
view(seed_div)
seed_div <- left_join(temp.df, my_groups, by = "rowname") %>% # n_per_g
rename(cluster = sub_grp) %>%  # rename column
pivot_longer(cols = 4:58, names_to = "species_diversity", values_to = "n_per_g") %>%
mutate(species_diversity = case_when(
species_diversity == "Unknown Phrymaceae¬†¬†" ~ "Unknown D - brown dicot", # old name ~ new name
TRUE ~ as.character(species_diversity)))
shrub_spplist <- unique(germination_m2_raw %>%
dplyr::select(species_diversity, lifeform, status, lifescycle, family))
shrub_list <- seed_div %>%
left_join(shrub_spplist, by = "species_diversity") %>%
filter(lifeform == "shrub") %>%
ungroup() %>%
dplyr::select(species_diversity, n_per_g) %>%
group_by( species_diversity) %>%
summarize(mean_n_per_g = round(mean(n_per_g), 6)) %>%
pivot_wider(names_from = cluster, values_from = mean_n_per_g, names_prefix = "Group ")
shrub_list <- seed_div %>%
left_join(shrub_spplist, by = "species_diversity") %>%
filter(lifeform == "shrub") %>%
ungroup() %>%
dplyr::select(species_diversity, n_per_g, cluster)
shrub_list <- seed_div %>%
left_join(shrub_spplist, by = "species_diversity") %>%
filter(lifeform == "shrub") %>%
ungroup() %>%
dplyr::select(species_diversity, n_per_g, cluster) %>%
group_by(cluster, species_diversity) %>%
summarize(mean_n_per_g = round(mean(n_per_g), 6)) %>%
pivot_wider(names_from = cluster, values_from = mean_n_per_g, names_prefix = "Group ")
shrub_list
kable(shrub_list)
shrub_list <- seed_div %>%
left_join(shrub_spplist, by = "species_diversity") %>%
filter(lifeform == "shrub") %>%
ungroup() %>%
dplyr::select(species_diversity, n_per_g, cluster) %>%
group_by(cluster, species_diversity) %>%
summarize(mean_n_per_g = round(mean(n_per_g), 6)) %>%
pivot_wider(names_from = cluster, values_from = mean_n_per_g, names_prefix = "Group ")
shrub_list
kable(shrub_list)
library(knitr)
kable(shrub_list)
kable(shrub_list)
scores(seedbank_nperg_bysamplocation_nmds)
stressplot(seedbank_nperg_bysamplocation_nmds)
nmds_df_nperg <- data.frame(seedbank_nperg_bysamplocation_nmds$points, seedbank_nperg_bysamplocation_nmdsprep) # code from chatgpt. Adds NMDS1 and NMDS2 values to dataframe.
scores(seedbank_nperg_bysamplocation_nmds)
stressplot(seedbank_nperg_bysamplocation_nmds)
# if stress tests are really low ==> I may have insufficient data. :/
#plot_df <- scores(seedbank_bysitecore_nmds, display = "sites") %>% # from An's code
#  as.data.frame() %>%
#  rownames_to_column("stand_core") %>%
#  full_join(seedbank_bysitecore, by = "stand_core")
nmds_df_nperg <- data.frame(seedbank_nperg_bysamplocation_nmds$points, seedbank_nperg_bysamplocation_nmdsprep) # code from chatgpt. Adds NMDS1 and NMDS2 values to dataframe.
colnames(nmds_df_nperg)[colnames(nmds_df_nperg) == 'site'] <- 'hillslope' # rename "site" to "hillslope"
seedbank_nperg_nmds_color <- ggplot(nmds_df_nperg,
aes(x = MDS1, y = MDS2, color = hillslope, shape = hillslope)) + # shape = site, color = site
geom_point(size = 3, alpha = 0.8) +
scale_color_manual(values = c("orange", "brown", "green", "darkgreen", "lightblue", "blue", "navy")) + #"gray0", "gray30", "gray60"
scale_shape_manual(values = c(16,16, 15, 15, 17, 17, 17)) +
theme_bw() +
#stat_ellipse(linetype = 2, size = 1) +
labs(title = "NMDS: by germination (#/g soil)")
# code from An Bui: https://rpubs.com/an-bui/vegan-cheat-sheet
seedbank_nperg_bysamplocation_nmdsprep <- seedbank_nperg_bysamplocation_nmdsprep %>%
mutate(standtype_ID = 1)
seedbank_nperg_bysamplocation_nmdsprep$standtype_ID <- 1:26 #shorten df to first 26 rows
plot_below_df_nperg <- scores(seedbank_nperg_bysamplocation_nmds, display = "sites") %>%
as.data.frame() %>%
rownames_to_column("standtype_ID") %>%
mutate_at(c('standtype_ID'), as.numeric) %>%
full_join(seedbank_nperg_bysamplocation_nmdsprep, by = "standtype_ID") %>%
dplyr::select(!c(standtype_ID))
dim(plot_below_df_nperg) # 26 rows
# envfit() takes the output of metaMDS() and the species matrix you created
fit_below_nperg <- envfit(seedbank_nperg_bysamplocation_nmds, seedbank_nperg_bysamplocation_nmdsprep, perm = 999) # pvalues for spp and stand, site, stand_core
# extract p-values for each species
fit_below_pvals_nperg <- fit_below_nperg$vectors$pvals %>%
as.data.frame() %>%
rownames_to_column("species") %>%
dplyr::rename("pvals" = ".") %>%
filter(!species == 'standtype_ID')
view(fit_below_pvals_nperg)
# extract coordinates for species, only keep species with p-val = 0.05
fit_below_spp_nperg <- fit_below_nperg %>%
scores(., display = "vectors") %>%
as.data.frame() %>%
rownames_to_column("species") %>%
full_join(., fit_below_pvals_nperg, by = "species") %>%
filter(pvals <= 0.005) %>% # <-- limited number for visual clarity
filter(!species == 'standtype_ID')
#length(fit_below_spp_nperg$species)
#write.csv(fit_below_spp_nperg, "~/Dropbox/GRADSCHOOL/Dissertation/R_dissertation/chaparraldegradation_2022b/processed/seedbank_nmds_pvalues.csv")
# p = 1 --> n = 35 spp
#
dim(fit_below_spp_nperg)
# by standtype
nmdsbelow_plot_new_nperg <- ggplot(plot_below_df_nperg,
aes(x = NMDS1, y = NMDS2)) +
coord_equal() +
geom_point(aes(color = stand, shape = stand), size = 3, alpha = 0.8) + #shape = stand_core
stat_ellipse(aes(color = stand)) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
geom_segment(data = fit_below_spp_nperg, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text(data = fit_below_spp_nperg, aes(label = species),
position = position_jitter(width = 0.4, height = 0.5)) +
labs(
#    x = "NMDS: Seedbank by standtype",
#   y = "Percent cover native Shrub (%)",
title = "NMDS: Seedbank by standtype"
)
nmdsbelow_plot_new_nperg + theme_bw()
