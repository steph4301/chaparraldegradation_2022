summarize(spp_rich = length(unique(species_diversity))) %>%
ungroup()
hist(forb_spprich_bycore$spp_rich)
shapiro.test(forb_spprich_bycore$spp_rich) # <--  normal!
aov(spp_rich ~ sdbk_clust, forb_spprich_bycore, conf.level = .95)
TukeyHSD(aov(spp_rich ~ sdbk_clust, forb_spprich_bycore), conf.level = .95)
# Fit: aov(formula = spp_rich ~ sdbk_clust, data = forb_spprich_bycore)
#
# $sdbk_clust
#         diff        lwr      upr     p adj
# 2-1 1.888889 0.08672782 3.691050 0.0387443
# 3-1 5.111111 3.36275807 6.859464 0.0000006
# 3-2 3.222222 1.42006116 5.024383 0.0004846
boxplot(spp_rich ~ sdbk_clust, forb_spprich_bycore)
natforb_cluster_spprich <- forb_spprich_bycore %>%
group_by(sdbk_clust) %>%
summarize(n_soilcores = length(unique(stand_core)),
natforbspp_rich_mean = mean(spp_rich),
natforbspp_rich_SD = sd(spp_rich),
SE = round(natforbspp_rich_SD/sqrt(n_soilcores),2)
) %>%
dplyr::select(!c(natforbspp_rich_SD))
#  sdbk_clust   n_soilcores   natforbspp_rich_mean        SE
#  1                    9                 3.11            0.35
#  2                    8                 5               0.6
#  3                    9                 8.22            0.55
## native forb spp in cluster 1 <-- 12 native forb spp.
natforb_spp1 <- forb_spprich %>%
filter(sdbk_clust == "1") %>%
group_by(species_diversity) %>%  # Group by species_diversity
summarise(across(c(lifeform, lifescycle), ~ unique(.)))
## native forb spp in cluster 2 <-- 19 native forb spp.
natforb_spp2 <- forb_spprich %>%
filter(sdbk_clust == "2") %>%
group_by(species_diversity) %>%  # Group by species_diversity
summarise(across(c(lifeform, lifescycle), ~ unique(.)))
## native forb spp in cluster 3 <-- 20 native forb spp.
natforb_spp3 <- forb_spprich %>%
filter(sdbk_clust == "3") %>%
group_by(species_diversity) %>%  # Group by species_diversity
summarise(across(c(lifeform, lifescycle), ~ unique(.)))
# unique to Cluser 1
setdiff(natforb_spp1$species_diversity,
union(natforb_spp2$species_diversity, natforb_spp3$species_diversity))
# [1] "Croton setiger"            "Fragaria vesca"
# [3] "Galium porrigens"
#     "Unknown E - plastic plant"
#  "Trifolium willdenovii"  "Trifolium gracelentum"
# unique to Cluser 2
setdiff(natforb_spp2$species_diversity,
union(natforb_spp1$species_diversity, natforb_spp3$species_diversity))
#  [1] "Acmispon strigosus"
#  [2] "Asclepias fascicularis"
#  [3] "Calochortus clavatus"
#  [4] "Dipterostemon capitatus"
#  [5] "Juncus bufonius"
#  [6] "Logfia filaginoides"
#  [7] "Lupinus bicolor"
#  [9] "Thysanocarpus spp."
# [11] "Unknown C - bright green seedling, small leaves"
#  [8] "Phacelia spp."
# [10] "Trifolium spp."
# unique to Cluser 3
setdiff(natforb_spp3$species_diversity,
union(natforb_spp1$species_diversity, natforb_spp2$species_diversity))
# [1] "Apiastrum angustifolium"       "Claytonia parviflora"
# [3] "Claytonia perfoliata"          "Laennecia coulteri"
# [5] "Madia gracilis"                "Malacothrix saxatilis"
# [7] "Marah macrocarpa"              "Phacelia tanacetifolia"
# [9] "Phacelia viscida"              "Pseudognaphalium californicum"
### species in all 3 soil clusters
L123 <- list(natforb_spp1$species_diversity, natforb_spp2$species_diversity, natforb_spp3$species_diversity)
Reduce(intersect, L123)
# [1] "Astragalus trichopodus"  "Emmenanthe penduliflora"
### in soil cluster 1 and 2
L12 <- list(natforb_spp1$species_diversity, natforb_spp2$species_diversity)
Reduce(intersect, L12)
# [1] "Acmispon maritimus"
# ... and "Astragalus trichopodus"  "Emmenanthe penduliflora"
### in soil cluster 2 and 3
L23 <- list(natforb_spp2$species_diversity, natforb_spp3$species_diversity)
Reduce(intersect, L23)
# [1] "Acmispon glaber"
# [4] "Solanum xanti"           "Stephanomeria virgata"   "Typha domingensis"
# [7] "Uropappus lindleyi"
# ... and "Astragalus trichopodus"  "Emmenanthe penduliflora"
### in soil cluster 1 and 3
L13 <- list(natforb_spp1$species_diversity, natforb_spp3$species_diversity)
Reduce(intersect, L13)
# [1]     "Cryptantha spp."
# [3]     "Erigeron canadensis"
# [5] "Eucrypta chrysanthemifolia"
# ... and "Astragalus trichopodus"  "Emmenanthe penduliflora"
forbNN_spprich <- seedbank_cluster %>%
filter(lifeform == "forb" & status == "nonnative" &  count > 0)
length(unique(forbNN_spprich$species_diversity)) # n = 10
forbNN_spprich %>%
group_by(sdbk_clust) %>%
summarize(N = length(unique(species_diversity)))
# sdbk_clust      N
# 1	              7
# 2	              6
# 3	              5
######## GRASS spp rich
natgrass_spprich <- seedbank_cluster %>%
filter(lifeform == "grass" & status == "native" & count > 0) %>%
filter(lifescycle == "annual" | lifescycle == "perennial" | lifescycle == "unknown")
sort(unique(natgrass_spprich$species_diversity))
length(sort(unique(natgrass_spprich$species_diversity)))
# "Melica imperfecta"
# "Stipa lepida"
natgrass_spprich %>%
group_by(sdbk_clust)%>%
summarize(N = length(unique(species_diversity)))
# sdbk_clust    length(unique(species_diversity))
# 1	            0
# 2	            1
# 3	            2
### How many unique trays are there?
# DEG = 7 cores x 2 depths x 4 treatments = 56 unique samples aka. trays
# ENH = 10 cores x 2 depths x 4 treatments = 80 unique samples aka. trays
# INT = 9 cores x 2 depths x 4 treatments = 72 unique samples aka. trays
56+80+72 # <-- 208 trays
# here I'm adding a new column named "plant_cluster" to the seedbank df
seedbankgerm_plantcluster <- seedbankgerm_cluster_prep %>%
mutate(stand_core_depth = paste(stand_core, depth_name, sep = "_")) %>%  # here I'm creating a new column of stand_core_depth
mutate(plant_cluster = case_when(
stand_core %in% c("DEG1_1", "DEG1_2", "DEG1_3",  "DEG1_4",  "DEG2_5",  "DEG2_6",  "DEG2_7") ~ "NNG",
stand_core %in% c("ENH2_6" , "ENH2_7" , "ENH2_8" , "ENH2_9", "ENH2_10") ~ "ssG",
stand_core %in% c( "ENH1_1",  "ENH1_2" , "ENH1_3" , "ENH1_4" , "ENH1_5" ) ~ "ssF",
stand_core %in% c("INT1_1" , "INT1_2" , "INT1_3" , "INT2_4",  "INT2_5" , "INT2_6" , "INT3_7" , "INT3_8",  "INT3_9") ~ "EVG",
TRUE ~ stand_core  # keeps original value or NA if plant_cluster doesn't exist yet
)) %>%  # dim without distinct() = 2093   13
distinct() # dim with distinct() = 1976   13
seedbankgerm_cluster_prep <- germination_depthtreat %>% # left join seedbank cluster name to germ data
left_join(seed.subgrp.df, by = c("stand_core", "site")) %>%
rename(sdbk_clust = sub_grp) %>%
mutate(sdbk_clust = as.character(sdbk_clust)) %>%
dplyr::select(species_diversity, status, lifescycle, lifeform, family, sdbk_clust, n_per_g, stand_core, treatment, depth_name, stand_core_depth_treat) %>%
mutate(species_diversity = case_when(
species_diversity == "Erodium moschatum" ~ "Erodium spp.",
species_diversity == "Erodium cicutarium" ~ "Erodium spp.",
species_diversity == "Phacelia tanacetifolia" ~ "Phacelia spp.",
species_diversity == "Phacelia viscida" ~ "Phacelia spp.",
TRUE ~ species_diversity)
)
### How many unique trays are there?
# DEG = 7 cores x 2 depths x 4 treatments = 56 unique samples aka. trays
# ENH = 10 cores x 2 depths x 4 treatments = 80 unique samples aka. trays
# INT = 9 cores x 2 depths x 4 treatments = 72 unique samples aka. trays
56+80+72 # <-- 208 trays
# here I'm adding a new column named "plant_cluster" to the seedbank df
seedbankgerm_plantcluster <- seedbankgerm_cluster_prep %>%
mutate(stand_core_depth = paste(stand_core, depth_name, sep = "_")) %>%  # here I'm creating a new column of stand_core_depth
mutate(plant_cluster = case_when(
stand_core %in% c("DEG1_1", "DEG1_2", "DEG1_3",  "DEG1_4",  "DEG2_5",  "DEG2_6",  "DEG2_7") ~ "NNG",
stand_core %in% c("ENH2_6" , "ENH2_7" , "ENH2_8" , "ENH2_9", "ENH2_10") ~ "ssG",
stand_core %in% c( "ENH1_1",  "ENH1_2" , "ENH1_3" , "ENH1_4" , "ENH1_5" ) ~ "ssF",
stand_core %in% c("INT1_1" , "INT1_2" , "INT1_3" , "INT2_4",  "INT2_5" , "INT2_6" , "INT3_7" , "INT3_8",  "INT3_9") ~ "EVG",
TRUE ~ stand_core  # keeps original value or NA if plant_cluster doesn't exist yet
)) %>%  # dim without distinct() = 2093   13
distinct() # dim with distinct() = 1976   13
############### START finding and fixing errors in df: seedbankgerm_plantcluster
### How many unique treatments (aka. stand_core_depth_treat) do I have?
dim(
seedbankgerm_cluster_prep %>%
dplyr::select(stand_core, treatment, depth_name, stand_core_depth_treat) %>%
distinct()
) # distinct = I have 205 unique treatments. There should be 208. Therefore, there are three treatments missing
### Let's find the 3 trays that are missing...
# view(
#   seedbankgerm_cluster_prep %>%
#    dplyr::select(stand_core, treatment, depth_name, stand_core_depth_treat) %>%
#      distinct() %>%
#     pivot_wider(names_from = treatment, values_from = (stand_core_depth_treat))
# )
### The TRAYS that are missing are:
# 1) ENH2_8 surface: control, charate <-- accidentally put 2 reps in oven and 2 reps in oven+
# 2) ENH1_5 deep: oven <-- no germination recorded in this tray
############### DONE
hist(seedbankgerm_plantcluster$n_per_g)
shapiro.test(seedbankgerm_plantcluster$n_per_g)  # <-- not normally distributed
### Here I'm calculating the median germination
seedbankgerm_plantcluster_summary <- seedbankgerm_plantcluster %>%
filter(!str_detect(species_diversity, "Unknown")) %>%  # omit 4 unknown species
group_by(
plant_cluster, # 4 plant clusters
# stand_core, # 7 at DEG + 10 at ENH + 9 at INT = 26 stand_core
# stand_core_depth, # 26 stand_core x 2 depths = 52 stand_core_depth
lifeform, # 3 lifeforms (shrub, forb, grass) = 156, nope 155
status, # 2 status (native, nonnative) = 244, nope, 243
species_diversity,
lifescycle,
depth_name
) %>%
summarize(
max_n_per_g = round(max(n_per_g),3) ,
.groups = "drop") #
dim(seedbankgerm_plantcluster_summary)
# Print as a gt table
seedbankgerm_plantcluster_summary_TABLE <- seedbankgerm_plantcluster_summary %>%
rename(Lifeform = lifeform,
Lifecycle = lifescycle,
Status = status,
Depth = depth_name,
Species = species_diversity
) %>%
pivot_wider(names_from = plant_cluster,
values_from = max_n_per_g) %>%
relocate(ssG, ssF, EVG, .after = NNG) %>% # Move 'lifeform' after 'Species'
relocate(Lifecycle, .after = Status)  %>%
# mutate(total_seeds = case_when(total_seeds > 0 ~ as.character("X"))) %>%
gt() %>%
tab_header(
title = "Maximum germination by Plant Cluster"
# subtitle = "Maximum germination of seeds by Lifeform, Lifecycle, and Status"
) %>%
cols_align(
align = "left", # Center alignment
columns = "Lifeform" # Specify the "cluster" column
) %>%
tab_options(
table.width = pct(80) # Make the table width 100%
)
seedbankgerm_plantcluster_summary_TABLE
##################################### Export the table as a word doc:
# gtsave(seedbankgerm_plantcluster_summary_TABLE,
#        "Ch1_Degradation_figures/seedbankgerm_plantcluster_summary_TABLE_2025AUG13.docx", # can also export as .png
#        expand = 10)
# write.csv(seedbankgerm_plantcluster_summary_TABLE,
#           "Ch1_Degradation_figures/seedbankgerm_plantcluster_summary_TABLE_2025AUG13.csv")
# write.csv(seedbankgerm_plantcluster_summary,
#           "Ch1_Degradation_figures/seedbankgerm_plantcluster_summary_2025AUG13.csv")
# species richness (n/g soil) by plant_cluster
seedbankgerm_plantcluster_summary %>%
dplyr::select(plant_cluster, species_diversity) %>%
distinct() %>%
group_by(plant_cluster) %>%
summarize(spprich = length(species_diversity),
.groups = "drop")
length(unique(seedbankgerm_plantcluster_summary$species_diversity))
# plant_cluster
seedbankgerm_plantcluster_summary %>%
group_by( plant_cluster) %>%
summarize(sum_max_n_per_g = round(sum(max_n_per_g),2),
.groups = "drop")
# status (nat/nn) and plant_cluster
seedbankgerm_plantcluster_summary %>%
group_by( plant_cluster, status) %>%
summarize(sum_max_n_per_g = round(sum(max_n_per_g),2),
.groups = "drop") %>%
pivot_wider(names_from = plant_cluster, values_from = sum_max_n_per_g)
# lifeform x status x soil depth
seedbankgerm_plantcluster_summary %>%
group_by(lifeform, status, depth_name) %>%
summarize(sum_max_n_per_g = round(sum(max_n_per_g),2),
.groups = "drop") %>%
pivot_wider(names_from = depth_name, values_from = sum_max_n_per_g) %>%
relocate(surface, .before = "deep")
# species richness
length(
(seedbankgerm_cluster_prep %>%
filter(!str_detect(species_diversity, "Unknown")) %>%  # omit 4 unknown species
dplyr::select(species_diversity) %>%
distinct())$species_diversity
) #57
# genera richness
length(
(
seedbankgerm_cluster_prep %>%
filter(!str_detect(species_diversity, "Unknown")) %>%  # omit 4 unknown species
dplyr::select(species_diversity) %>%
separate(col = species_diversity, into = c("genera", "species"), sep = " ") %>%
dplyr::select(genera) %>%
distinct())$genera
)  # 50
# family richness
length(
(seedbankgerm_cluster_prep %>%
filter(!str_detect(species_diversity, "Unknown")) %>%  # omit 4 unknown species
dplyr::select(family) %>%
distinct())$family
) # 24
seedbankgerm_cluster_prep %>%
filter(str_detect(species_diversity, "Unknown"))
# native shrub
length(
(seedbankgerm_cluster_prep %>%
filter(!str_detect(species_diversity, "Unknown")) %>%  # omit 4 unknown species
dplyr::select(species_diversity, status, lifeform) %>%
filter(status == "native" &
lifeform  == "shrub") %>%
distinct())$species_diversity
)
# updated code on jan 21, 2024
seedbank_byfamily_new <- germination_depthtreat %>% # prior df: seedbank_load_v_omitpretreatment
filter(count > 0) %>%
group_by(stand, site, stand_core, family, status) %>%
# This will give a data point for every species based on germination numbers per species
dplyr::summarize(germ_nperg_family = sum(n_per_g),
N_species = length(unique(species_diversity)),
total_count = sum(count))
head(seedbank_byfamily_new)
sort(unique(seedbank_byfamily_new$family)) # df before transpose - use for ellipses
# N = 26 families - 1 unknown family
n_distinct(seedbank_byfamily_new$family) -1 # 25
family_native <- ggplot(seedbank_byfamily_new %>%
dplyr::filter(status == "native"),
aes(fill=family, y=germ_nperg_family, x=stand_core)) +
geom_bar(position="stack", stat="identity") +
ylim(0, 2)+
#ggtitle("Germination (#/g soil) by Family and Status") +
labs(x="Sampling Location", y="Germination (#/g soil)") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
facet_wrap(~ status)
family_native_print <- family_native + theme(legend.position = c(0.1, 0.2)) # Key location offset from (0,0)
family_nn <- ggplot(seedbank_byfamily_new %>%
dplyr::filter(status == "nonnative"),
aes(fill=family, y=germ_nperg_family, x=stand_core)) +
geom_bar(position="stack", stat="identity") +
ylim(0, 2)+
#ggtitle("Germination (#/g soil) by Family and Status") +
labs(x="Sampling Location", y="Germination (#/g soil)") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
facet_wrap(~ status)
# With the par( ) function, you can include the option mfrow=c(nrows, ncols) to create a matrix of nrows x ncols plots that are filled in by row. mfcol=c(nrows, ncols) fills in the matrix by columns.
# option 1
# ggarrange(family_native, family_nn,
#           labels = c("A", "B"),
#           ncol = 1, nrow = 2)
#
# option 2
ggdraw() +
draw_plot(family_native, x = 0.02, y = .5, width = 1, height = .5) +
draw_plot(family_nn, x = 0.02, y = 0, width = 1, height = .5) +
# draw_plot(bp, x = 0, y = 0, width = 1, height = 0.5) +
draw_plot_label(label = c("A", "B"), size = 10,
x = c(0, 0), y = c(1, .5))
##### table
seed_div <- left_join(temp.df, my_groups, by = "rowname") %>% # n_per_g
rename(cluster = sub_grp) %>%  # rename column
pivot_longer(cols = 4:58, names_to = "species_diversity", values_to = "n_per_g") %>%
mutate(species_diversity = case_when(
species_diversity == "Unknown Phrymaceae¬†¬†" ~ "Unknown D - brown dicot", # old name ~ new name
TRUE ~ as.character(species_diversity)))
# length(unique(shrub_spplist$species_diversity))
shrub_spplist <- unique(germination_m2_raw %>%
dplyr::select(species_diversity, lifeform, status, lifescycle, family))
# #  length(unique(seed_div$species_diversity))
#
# in_spplist <- sort(unique(shrub_spplist$species_diversity))
# in_seeddiv <- sort(unique(seed_div$species_diversity))
#
# #These are the species that are in abcover_full that are NOT in the species list
# diffspplist <- setdiff(in_spplist, in_seeddiv)
# diffspplist
#
# difseeddiv <- setdiff(in_seeddiv, in_spplist)
# difseeddiv
shrub_list <- seed_div %>%
left_join(shrub_spplist, by = "species_diversity") %>%
filter(lifeform == "shrub") %>%
ungroup() %>%
dplyr::select(species_diversity, n_per_g, cluster) %>%
group_by(cluster, species_diversity) %>%
summarize(mean_n_per_g = round(mean(n_per_g), 6)) %>%
pivot_wider(names_from = cluster, values_from = mean_n_per_g, names_prefix = "Group ")
shrub_list
kable(shrub_list) # run in console :)
natseed_persist <- seedbank_load %>% # includes pre-treatment
dplyr::select(site, soilcore, species_diversity, status, lifeform, lifescycle, family) %>%
mutate(site_core = paste(site, soilcore, sep = "_")) %>%
distinct() %>%
# add percent cover values for plots above ground
mutate(nngrasscover = case_when(
# DEG soil collection November 2016 - % cover from Feb-March 2017
site_core %in% c("DEG1_1") ~ "90.75", # plots 1, 2 <-- see below for avg % nn grass cover
site_core %in% c("DEG1_2") ~ "90.5", # plot 3
site_core %in% c("DEG1_3") ~ "88.5", # plot 4, 5
site_core %in% c("DEG1_4") ~ "74", # plot 6
site_core %in% c("DEG2_5") ~ "48.5",  # plot 7
site_core %in% c("DEG1_6") ~ "89",  # plot 9
site_core %in% c("DEG1_7") ~ "76",  # plot 11
# ENH soil collection June 2019 - % cover from June 2019
site_core %in% c("ENH1_1") ~ "10",  # plot
site_core %in% c("ENH1_2") ~ "10",  # plot
site_core %in% c("ENH1_3") ~ "10",  # plot
site_core %in% c("ENH1_4") ~ "10",  # plot
site_core %in% c("ENH1_5") ~ "10",  # plot
site_core %in% c("ENH2_6") ~ "10",  # plot
site_core %in% c("ENH2_7") ~ "10",  # plot
site_core %in% c("ENH2_8") ~ "10",  # plot
site_core %in% c("ENH2_9") ~ "10",  # plot
site_core %in% c("ENH2_10") ~ "10",  # plot
# cover_bylfstatus_wide <- from 1.1_transect_continuous.Rmd
site_core %in% c("INT1_1", "INT1_2", "INT1_3") ~ "24.4",  # plot INT 1
site_core %in% c("INT2_4", "INT2_5", "INT2_6") ~ "7.32",  # plot INT 2
site_core %in% c("INT3_7", "INT3_8", "INT3_9") ~ "12.2",  # plot INT 3
)) %>%
mutate(nngrasscover = as.numeric(nngrasscover))
### nn grass cover in March 2017 - DEG - NO REMOVAL treatments
# plot 1: (90 + 87)/2 = 88.5
# plot 2: (96 + 90) / 2 = (93 + 88.5)/2 = 90.75
# plot 3: (94 + 87) / 2 = 90.5
# plot 4: (88 + 93)/2 = 90.5
# plot 5: (91 + 82) /2 = (86.5 + 90.5) / 2 = 88.5
# plot 6: (60 + 88)/2 = 74
# plot 7: (15 +82)/2 =  48.5
# plot 9: (92 + 86) /2 = 89
# plot 11: (65 + 87) /2 = 76
### nn grass cover in June 2019 - ENH - NO REMOVAL treatments
# ENH1 1, 2, 3, 4, 5: 45+
# ENH2 6, 7, 8
# ENH3 9, 10, 11, 14
# ENH4 15, 12, 13
# ENH5 16, 17, 18
# ENH6 19, 20, 21
# ENH7 22, 23, 24
# ENH8 25, 26, 27
# ENH9 28, 29, 30
# ENH10 31-36
### nn grass cover  - INT transects
cover_bylfstatus_wide %>%  #  <- from 1.1_transect_continuous.Rmd
filter(site == "INT1" | site == "INT2" | site == "INT3") %>%
dplyr::select(site, grass_nonnative)
natseed_persist
print("WhooHoo! This is the end! You got it! :D")
break this code
view(seedbankgerm_plantcluster)
seedbankgerm_plantcluster %>%  group_by(plant_cluster) %>%  summarise(N = length(species_diversity))
seedbankgerm_plantcluster %>%  filter(plant_cluster == "NNG") %>%  filter(n_per_g > 0)
bob <- seedbankgerm_plantcluster %>%  filter(plant_cluster == "NNG") %>%  filter(n_per_g > 0)
view(bob)
unique(bob$species_diversity)
bob <- seedbankgerm_plantcluster %>%  filter(plant_cluster == "ssG") %>%  filter(n_per_g > 0)
view(bob)
length(unique(bob$species_diversity))
bob$species_diversity
bob <- seedbankgerm_plantcluster %>%  filter(plant_cluster == "ssF") %>%  filter(n_per_g > 0)
length(unique(bob$species_diversity))
bob <- seedbankgerm_plantcluster %>%  filter(plant_cluster == "EVG") %>%  filter(n_per_g > 0)
length(unique(bob$species_diversity))
#### checking residuals
ggqqplot(herb_cover_wide$shrub_native)
qqnorm(residuals(model_lmsh))
qqline(residuals(model_lmsh), col = "red")
simulateResiduals(model_lmsh)
plotQQunif(model_lmsh_res)
plot(fitted(model_lmsh) ~ resid(model_lmsh)) #
qqnorm(residuals(model_polysh))
qqline(residuals(model_polysh), col = "red")
plot(fitted(model_polysh) ~ resid(model_polysh))
qqnorm(residuals(model_polysh))
qqline(residuals(model_polysh), col = "red")
# polynomial
model_polysh <- lm(shrub_native ~ poly(grass_nonnative, 2), data = herb_cover_wide)
qqnorm(residuals(model_polysh))
qqline(residuals(model_polysh), col = "red")
plot(fitted(model_polysh) ~ resid(model_polysh))
# segmented
model3 <- segmented(, seg.Z = ~ grass_nonnative,
npsi = 1)
# segmented
model3 <- segmented(, seg.Z = ~ grass_nonnative,
npsi = 1)
# segmented
model3 <- segmented(lm(shrub_native ~ grass_nonnative, seg.Z = ~ grass_nonnative,
npsi = 1) )
# segmented
model3 <- segmented(lm(shrub_native ~ grass_nonnative, data = herb_cover_wide, seg.Z = ~ grass_nonnative,
npsi = 1) )
qqnorm(residuals(model3))
qqline(residuals(model3), col = "red")
plot(fitted(model3) ~ resid(model3))
summary(model_lmsh)
summary(model_polysh)
summary(model3)
# Plot the segmented regression model and increase text sizes
plot(segmented(
lm(shrub_native ~ grass_nonnative, data = cover_bylfstatus_wide)
, seg.Z = ~ grass_nonnative,
npsi = 1),
conf.level = 0.95,
shade = TRUE,
# main = "Segmented Regression with Confidence Interval",
xlab = "Non-Native Grass Cover (%)",
ylab = "Native Shrub Cover (%)",
cex.main = 1.5,   # Increase the main title size
cex.lab = 1.3,    # Increase the axis labels size
cex.axis = 1.2)   # Increase the axis numbers size
# Add the original data points, increasing their size as well
points(cover_bylfstatus_wide$grass_nonnative,
cover_bylfstatus_wide$shrub_native,
col = colors_plantclusters,
pch = 16,
cex = 1.5)      # Increase the size of the data points
summary(
segmented(
lm(shrub_native ~ grass_nonnative, data = cover_bylfstatus_wide)
, seg.Z = ~ grass_nonnative,
npsi = 1)
)
segmented(
lm(shrub_native ~ grass_nonnative, data = cover_bylfstatus_wide)
, seg.Z = ~ grass_nonnative,
npsi = 1)
summary(
segmented(
lm(shrub_native ~ grass_nonnative, data = cover_bylfstatus_wide)
, seg.Z = ~ grass_nonnative,
npsi = 1)
)
