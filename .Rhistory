mutate(site_rep = paste(site, rep, sep = "_")) %>%
mutate(density_m2 = (density_80m2 / 80)) %>%
dplyr::select(-site, -rep, -density_80m2)
shrubdensity_2024 <- read_csv("shrubdensity_2024.csv",
col_types = cols(
site = col_character(),
transect = col_character(),
species = col_character(),
lifestage = col_character(),
density_80m2 = col_integer()
)
) %>%
dplyr::select(site, transect, species, lifestage, density_80m2) %>%
rename("rep" = "transect") %>%
mutate(density_m2 = (density_80m2 / 80)) %>%
na.omit() %>%
mutate(site_rep = paste(site, rep, sep = "_")) %>%
dplyr::select(site_rep, species, lifestage, density_m2)
density <- shrubdensitylife_load %>%  full_join(shrubdensity_2024)
density2 <- density %>% # 39 transects becuase no INT4 density
group_by(site_rep) %>%
summarise(totaldensty_m2 = sum(density_m2, na.rm = TRUE)) %>%
ungroup()
density_cover <- height_cover %>% left_join(density2, by = "site_rep")
view(density_cover)
view(density_cover)
names(density_cover)
# Fit the linear model: canopy height x nn grass cover
model.den <- lm(totaldensty_m2 ~ grass_nonnative, data = density_cover) # response variable ~ independent variable
# Print the summary of the model
model.den.summary <- summary(model.den)
# Extract the R^2 value
r_squared <- round(model.den.summary$r.squared, 3)
print(paste("Multiple R^2:", r_squared))
# [1] "Multiple R^2: 0.366"
# print slope and intercept
cf <- round(coef(model.den), 3)
cat("Intercept:", cf[1], "\n")
cat("Slope:", cf[2], "\n")
ggplot(data = density_cover) +
geom_point(aes(x = grass_nonnative * 100,
y = totaldensty_m2))
ggplot(data = density_cover) +
geom_point(aes(x = grass_nonnative * 100,
y = totaldensty_m2))
# native shrub density
shrubdensitylife_load <- read_csv("deg_beltdensity_bylifestage.csv",
col_types = cols(
site = col_character(),
transect = col_character(),
species = col_character(),
dead = col_integer(),
immature = col_integer(),
mature = col_integer(),
resprout = col_integer(),
seedling = col_integer()
)
) %>%
mutate(transect = ifelse(
site == "INT2", "1", transect
)) %>%
mutate(transect = ifelse(
site == "INT3", "1", transect
)) %>%
dplyr::select(-StandType, -hillslope) %>%
as_tibble() %>%
rename("rep" = "transect") %>%
pivot_longer(cols = 4:8, names_to = "lifestage", values_to = "density_80m2") %>%
mutate(site_rep = paste(site, rep, sep = "_")) %>%
mutate(density_m2 = (density_80m2 / 80)) %>%
dplyr::select(-site, -rep, -density_80m2)
shrubdensitylife_load
view(shrubdensitylife_load)
# native shrub density
shrubdensitylife_load <- read_csv("deg_beltdensity_bylifestage.csv",
col_types = cols(
site = col_character(),
transect = col_character(),
species = col_character(),
dead = col_integer(),
immature = col_integer(),
mature = col_integer(),
resprout = col_integer(),
seedling = col_integer()
)
) %>%
mutate(transect = ifelse(
site == "INT2", "1", transect
)) %>%
mutate(transect = ifelse(
site == "INT3", "1", transect
)) %>%
dplyr::select(-StandType, -hillslope) %>%
as_tibble() %>%
rename("rep" = "transect") %>%
pivot_longer(cols = 4:8, names_to = "lifestage", values_to = "density_80m2") %>%
mutate(site_rep = paste(site, rep, sep = "_")) %>%
group_by(lifestage) %>%
mutate(density_m2 = (density_80m2 / 80)) %>%
dplyr::select(-site, -rep, -density_80m2) %>%
ungroup()
shrubdensitylife_load
view(shrubdensitylife_load)
# native shrub density
shrubdensitylife_load <- read_csv("deg_beltdensity_bylifestage.csv",
col_types = cols(
site = col_character(),
transect = col_character(),
species = col_character(),
dead = col_integer(),
immature = col_integer(),
mature = col_integer(),
resprout = col_integer(),
seedling = col_integer()
)
) %>%
mutate(transect = ifelse(
site == "INT2", "1", transect
)) %>%
mutate(transect = ifelse(
site == "INT3", "1", transect
)) %>%
dplyr::select(-StandType, -hillslope) %>%
as_tibble() %>%
rename("rep" = "transect") %>%
pivot_longer(cols = 4:8, names_to = "lifestage", values_to = "density_80m2") %>%
mutate(site_rep = paste(site, rep, sep = "_")) %>%
group_by(lifestage) %>%
mutate(density_m2 = (density_80m2 / 80)) %>%
dplyr::select(-site, -rep, -density_80m2)
view(shrubdensitylife_load)
# native shrub density
shrubdensitylife_load <- read_csv("deg_beltdensity_bylifestage.csv",
col_types = cols(
site = col_character(),
transect = col_character(),
species = col_character(),
dead = col_integer(),
immature = col_integer(),
mature = col_integer(),
resprout = col_integer(),
seedling = col_integer()
)
) %>%
mutate(transect = ifelse(
site == "INT2", "1", transect
)) %>%
mutate(transect = ifelse(
site == "INT3", "1", transect
)) %>%
dplyr::select(-StandType, -hillslope) %>%
as_tibble() %>%
rename("rep" = "transect") %>%
pivot_longer(cols = 4:8, names_to = "lifestage", values_to = "density_80m2") %>%
mutate(site_rep = paste(site, rep, sep = "_")) %>%
mutate(density_m2 = (density_80m2 / 80)) %>%
dplyr::select(-site, -rep, -density_80m2)
shrubdensitylife_load
knitr::opts_chunk$set(echo = TRUE)
# Packages
library(tidyverse) # includes ggplot2, dplyr, tidyr, readr, purr, tibble, stringr, forcats
library(vegan)
library(here)
library(readxl)
# library(ggpubr) # customize ggplot2 for publication
# library(broom)
# library(AICcmodavg)
# library(janitor)
# library(multcompView)
# library(plotly)
# if (!require(devtools)) {
#   install.packages("devtools")
# }
# devtools::install_github("gavinsimpson/ggvegan")
# library(ggpmisc)
# load colors
# library(calecopal)
# Stand colors: INTACT, MATRIX, DEGRADED
# cal_palette(name = "chaparral3", n = 3, type = "continuous")
# deg <- "#D3E3CA"
# mat <- "#92A587"
# int <- "#2F3525"
# standcolors <- c(int, mat, deg)
#
# # Lifeform colors: shrub, grass, forb
# cal_palette(name = "chaparral3", n = 3, type = "continuous")
# shrub <- "#D3E3CA"
# grass <- "#92A587"
# forb <- "#2F3525"
# lifeformcolors <- c(int, mat, deg)
#
# # Status colors: native, exotic
# cal_palette(name = "chaparral1", n = 6, type = "continuous")
# native <- "#AEBFA8"
# exotic <- "#F19B34"
# statuscolors <- c(native, exotic)
# Read in data
# 2019 belt transect data
belt.spp_2019_load <- read.csv(here("deg_beltdensity_byspecies.csv"))
belt.spp_2019 <- belt.spp_2019_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
mutate(species = case_when(species == "Bromus madritensis" ~ "Bromus rubens", # old name ~ new name
species == "Eucrypta\xcachrysanthemifolia" ~ "Eucrypta chrysanthemifolia",
TRUE ~ species))
### 2024 belt transect data
belt.spp_2024_load <- read.csv(here("belt_spprich_2024.csv"))
belt.spp_2024 <- belt.spp_2024_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
filter(species != "moss")
belt.spprich <- bind_rows(belt.spp_2019, belt.spp_2024)
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X, notes, ejepson))
list <- belt.spprich %>%
left_join(sppchar, by = "species")
#These are the species that are in belt.spprich that are NOT in the species characteristics list
a <- sort(unique(belt.spprich$species))
b <- sort(unique(sppchar$species))
speciesmissingfrom.sppchar <- setdiff(a, b) # <- KIT - can you help resolve this issue? I added the missing species and their characteristics to "processed/specieslist.csv" but they're not joining
speciesmissingfrom.sppchar
speciesmissingfrom.belt <- setdiff(b, a)
speciesmissingfrom.belt
# list of seven unknown species
unknown.spp <- read_excel("unknown_spp.xlsx")
# sort(unique(belt.spprich$species))
belt.spprich_total <- belt.spprich %>%
filter(species != "Erodium spp.") %>%
filter(species != "Galium spp.") %>%
filter(species != "Lupinus spp.") %>%
filter(species != "Phacelia spp.") %>%
filter(species != "Trifolium spp.")
length(unique(belt.spprich_total$species))
# 90 species
# sppr <- specnumber(belt.spprich) # need matrix
erodium <- belt.spp_2019 %>%  filter(grepl("Erodium", species))
lupin <- belt.spp_2019 %>%  filter(grepl("Lupinus", species))
belt.spp_2019 %>%
filter(!(species == "Lupinus spp." & site_rep == "1.1")) %>%
filter(!(species == "Lupinus spp." & site_rep == "1.2"))
belttrans_raw <- belttrans_byspecies_load %>%
dplyr::select(!c(transectstand, lifestage)) %>%
rename(rep = transectsite,
status = origin,
lifecycle = lifespan) %>%  #rename(new_name = old_name)
mutate(species = case_when(
species == "Bromus madritensis" ~ "Bromus rubens", # old name ~ new name
TRUE ~ as.character(species))) %>%
mutate(status = case_when(
status == "non-native" ~ "nonnative", # old name ~ new name
TRUE ~ as.character(status))) %>%
mutate(site_rep = paste(site, rep, sep = "_"))
#These are the species that are in belt.spprich that are NOT in the species characteristics list
a <- sort(unique(belt.spprich$species))
a
b
speciesmissingfrom.sppchar <- setdiff(a, b) # <- KIT - can you help resolve this issue? I added the missing species and their characteristics to "processed/specieslist.csv" but they're not joining
speciesmissingfrom.sppchar
speciesmissingfrom.belt <- setdiff(b, a)
speciesmissingfrom.belt
str(speciesmissingfrom.belt)
view(belt.spp_2024_load)
belt.spprich
speciesmissingfrom.sppchar
view(belt.spp_2024_load)
view(sppchar)
list
view(list)
view(belt.spprich)
sort(unique(belt.spprich$species))
# native shrub density
shrubdensitylife_load <- read_csv("deg_beltdensity_bylifestage.csv",
col_types = cols(
site = col_character(),
transect = col_character(),
species = col_character(),
dead = col_integer(),
immature = col_integer(),
mature = col_integer(),
resprout = col_integer(),
seedling = col_integer()
)
) %>%
mutate(transect = ifelse(
site == "INT2", "1", transect
)) %>%
mutate(transect = ifelse(
site == "INT3", "1", transect
)) %>%
dplyr::select(-StandType, -hillslope) %>%
as_tibble() %>%
rename("rep" = "transect") %>%
pivot_longer(cols = 4:8, names_to = "lifestage", values_to = "density_80m2") %>%
mutate(site_rep = paste(site, rep, sep = "_")) %>%
mutate(density_m2 = (density_80m2 / 80)) %>%
dplyr::select(-site, -rep, -density_80m2)
shrubdensitylife_load
# native shrub density
shrubdensitylife_load <- read_csv("deg_beltdensity_bylifestage.csv",
col_types = cols(
site = col_character(),
transect = col_character(),
species = col_character(),
dead = col_integer(),
immature = col_integer(),
mature = col_integer(),
resprout = col_integer(),
seedling = col_integer()
)
) %>%
mutate(transect = ifelse(
site == "INT2", "1", transect
)) %>%
mutate(transect = ifelse(
site == "INT3", "1", transect
)) %>%
dplyr::select(-StandType, -hillslope) %>%
as_tibble() %>%
rename("rep" = "transect") %>%
pivot_longer(cols = 4:8, names_to = "lifestage", values_to = "density_80m2") %>%
mutate(site_rep = paste(site, rep, sep = "_")) %>%
mutate(density_m2 = (density_80m2 / 80)) %>%
dplyr::select(-site, -rep, -density_80m2)
view(shrubdensitylife_load)
density2019 <- shrubdensitylife_load %>%
group_by(lifestage) %>%
summarise(sum_density_m2 = sum(density_m2))
density2019
density2019 <- shrubdensitylife_load %>%
group_by(site_rep, lifestage) %>%
summarise(sum_density_m2 = sum(density_m2))
density2019
shrubdensity_2024 <- read_csv("shrubdensity_2024.csv",
col_types = cols(
site = col_character(),
transect = col_character(),
species = col_character(),
lifestage = col_character(),
density_80m2 = col_integer()
)
) %>%
dplyr::select(site, transect, species, lifestage, density_80m2) %>%
rename("rep" = "transect") %>%
mutate(density_m2 = (density_80m2 / 80)) %>%
na.omit() %>%
mutate(site_rep = paste(site, rep, sep = "_")) %>%
dplyr::select(site_rep, species, lifestage, density_m2)
shrubdensity_2024
density2024 <- shrubdensity_2024 %>%
group_by(site_rep, lifestage) %>%
summarise(sum_density_m2 = sum(density_m2))
density2024
density <- density2019 %>%
bind_rows(density2024)
density
density2024
density2019
density2 <- density %>% # 39 transects becuase no INT4 density
group_by(site_rep) %>%
summarise(totaldensty_m2 = sum(density_m2, na.rm = TRUE)) %>%
ungroup()
density
density2 <- density %>% # 39 transects becuase no INT4 density
group_by(site_rep) %>%
summarise(totaldensty_m2 = sum(sum_density_m2), na.rm = TRUE)) %>%
density2 <- density %>% # 39 transects becuase no INT4 density
group_by(site_rep) %>%
summarise(totaldensty_m2 = sum(sum_density_m2, na.rm = TRUE)) %>%
ungroup()
density2
density_cover <- height_cover %>% left_join(density, by = "site_rep")
density_cover
view(density_cover)
density_cover <- height_cover %>%
dplyr::select(site, rep, site_rep, grass_nonnative) %>%
left_join(density, by = "site_rep")
density_cover <- height_cover %>%
dplyr::select(site, site_rep, grass_nonnative) %>%
left_join(density, by = "site_rep")
density_cover <- height_cover %>%
dplyr::select(site, site_rep, grass_nonnative) %>%
left_join(density, by = "site_rep")
density_cover
view(density_cover)
# Fit the linear model: canopy height x nn grass cover
model.den <- lm(sum_densty_m2 ~ grass_nonnative,
data = density_cover %>% filter(lifestage == seedling)) # response variable ~ independent variable
# Fit the linear model: canopy height x nn grass cover
model.den <- lm(sum_densty_m2 ~ grass_nonnative,
data = (density_cover %>% filter(lifestage == seedling))) # response variable ~ independent variable
# Fit the linear model: canopy height x nn grass cover
model.den <- lm(sum_densty_m2 ~ grass_nonnative,
data = (density_cover %>% filter(lifestage == "seedling"))) # response variable ~ independent variable
# Fit the linear model: canopy height x nn grass cover
model.den <- lm(sum_density_m2 ~ grass_nonnative,
data = density_cover %>% filter(lifestage == "seedling"))
# Fit the linear model: canopy height x nn grass cover
model.seedling <- lm(sum_density_m2 ~ grass_nonnative,
data = density_cover %>% filter(lifestage == "seedling"))
model.seedling
# Print the summary of the model
model.seedling.summary <- summary(model.seedling)
# Extract the R^2 value
r_squared <- round(model.seedling.summary$r.squared, 3)
print(paste("Multiple R^2:", r_squared))
# [1] "Multiple R^2: 0.273"
# print slope and intercept
cf <- round(coef(model.den), 3)
cat("Intercept:", cf[1], "\n")
cat("Slope:", cf[2], "\n")
ggplot(data = density_cover %>% filter(lifestage == "seedling")) +
geom_point(aes(x = grass_nonnative * 100,
y = sum_density_m2))
knitr::opts_chunk$set(echo = TRUE)
# Packages
library(tidyverse) # includes ggplot2, dplyr, tidyr, readr, purr, tibble, stringr, forcats
library(vegan)
library(here)
library(readxl)
# library(ggpubr) # customize ggplot2 for publication
# library(broom)
# library(AICcmodavg)
# library(janitor)
# library(multcompView)
# library(plotly)
# if (!require(devtools)) {
#   install.packages("devtools")
# }
# devtools::install_github("gavinsimpson/ggvegan")
# library(ggpmisc)
# load colors
# library(calecopal)
# Stand colors: INTACT, MATRIX, DEGRADED
# cal_palette(name = "chaparral3", n = 3, type = "continuous")
# deg <- "#D3E3CA"
# mat <- "#92A587"
# int <- "#2F3525"
# standcolors <- c(int, mat, deg)
#
# # Lifeform colors: shrub, grass, forb
# cal_palette(name = "chaparral3", n = 3, type = "continuous")
# shrub <- "#D3E3CA"
# grass <- "#92A587"
# forb <- "#2F3525"
# lifeformcolors <- c(int, mat, deg)
#
# # Status colors: native, exotic
# cal_palette(name = "chaparral1", n = 6, type = "continuous")
# native <- "#AEBFA8"
# exotic <- "#F19B34"
# statuscolors <- c(native, exotic)
# Read in data
# 2019 belt transect data
belt.spp_2019_load <- read.csv(here("deg_beltdensity_byspecies.csv"))
belt.spp_2019 <- belt.spp_2019_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
mutate(species = case_when(species == "Bromus madritensis" ~ "Bromus rubens", # old name ~ new name
species == "Eucrypta\xcachrysanthemifolia" ~ "Eucrypta chrysanthemifolia",
TRUE ~ species)) %>%
mutate(species = str_replace(species, " ", "_"))
### 2024 belt transect data
belt.spp_2024_load <- read.csv(here("belt_spprich_2024.csv"))
belt.spp_2024 <- belt.spp_2024_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
filter(species != "moss") %>%
mutate(species = str_replace(species, " ", "_"))
belt.spprich <- bind_rows(belt.spp_2019, belt.spp_2024)
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X, notes, ejepson)) %>%
mutate(species = str_replace(species, " ", "_")) %>%
mutate(species = gsub("\u00A0", " ", b, fixed = TRUE)) %>%
mutate(species = str_replace(species, g, "_"))
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X, notes, ejepson)) %>%
mutate(species = str_replace(species, " ", "_")) %>%
mutate(species = gsub("\u00A0", " ", b, fixed = TRUE)) %>%
mutate(species = str_replace(species, g, "_"))
sppchar <- read.csv("processed/specieslist.csv")
view(sppchar)
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X, notes, ejepson)) %>%
mutate(species = str_replace(species, " ", "_")) %>%
mutate(species = gsub("\u00A0", " ", b, fixed = TRUE)) %>%
mutate(species = str_replace(species, g, "_"))
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X, notes, ejepson)) %>%
mutate(species = str_replace(species, " ", "_")) %>%
mutate(species = gsub("\u00A0", " ", b, fixed = TRUE)) %>%
mutate(species = str_replace(species, " ", "_"))
#These are the species that are in belt.spprich that are NOT in the species characteristics list
a <- sort(unique(belt.spprich$species))
b <- sort(unique(sppchar$species))
speciesmissingfrom.sppchar <- setdiff(a, b) # <- KIT - can you help resolve this issue? I added the missing species and their characteristics to "processed/specieslist.csv" but they're not joining
speciesmissingfrom.sppchar
speciesmissingfrom.belt <- setdiff(b, a)
speciesmissingfrom.belt
speciesmissingfrom.sppchar
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X, notes, ejepson)) %>%
mutate(species = str_replace(species, " ", "_")) %>%
mutate(species = gsub("\u00A0", " ", species, fixed = TRUE)) %>%
mutate(species = str_replace(species, " ", "_"))
sppchar
view(sppchar)
