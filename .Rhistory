mapping = aes(x = 0, y = 0, xend = NMDS1, yend = NMDS2),
arrow = arrow(length = unit(0.015, "npc"),
type = 'closed'),
color = 'darkgrey',
linewidth = 0.8) +
geom_text(data = subset(seedbank_bysitecore_nmds_fort, score == 'species'),
position = position_jitter(width = 0.2, height = 0.2),
mapping = aes(label = Label, x = NMDS1*1.1, y = NMDS2*1.1))+
geom_abline(intercept = 0,slope = 0,linetype = "dashed", linewidth = 0.8,colour = "gray")+
geom_vline(aes(xintercept = 0), linetype = "dashed", size = 0.8, colour = "gray")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
seedbank_bysitecore_nmds_fortplot1
#only measurements shown
seedbank_bysitecore_nmds_fortplot2 <- ggplot() +
geom_point(data = subset(seedbank_bysitecore_nmds_fort, Score == 'sites'),
mapping = aes(x = NMDS1, y = NMDS2),
color = 'black',
alpha = 0.5) +
geom_segment(data = subset(seedbank_bysitecore_nmds_fort, Score == 'species'),
mapping = aes(x = 0, y = 0, xend = NMDS1, yend = NMDS2),
arrow = arrow(length = unit(0.015, "npc"),
type = 'closed'),
color = 'darkgrey',
size = 0.8,
alpha = 0) +
geom_text(data = subset(seedbank_bysitecore_nmds_fort, Score == 'species'),
mapping = aes(label = Label, x = NMDS1*1.1, y = NMDS2*1.1),
alpha = 0)+
geom_abline(intercept = 0,slope = 0,linetype = "dashed", size = 0.8,colour = "gray")+
geom_vline(aes(xintercept = 0), linetype = "dashed", size = 0.8, colour = "gray")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
# extract p-values for each species
fit_below_pvals <- fit_below$vectors$pvals %>%
as.data.frame() %>%
rownames_to_column("species") %>%
dplyr::rename("pvals" = ".") %>%
filter(!species == 'standtype_ID')
view(fit_below_pvals)
# extract coordinates for species, only keep species with p-val = 0.05
fit_below_spp <- fit_below %>%
scores(., display = "vectors") %>%
as.data.frame() %>%
rownames_to_column("species") %>%
full_join(., fit_below_pvals, by = "species") %>%
filter(pvals <= 0.05) %>% # limited number for visual clarity
filter(!species == 'standtype_ID')
# extract coordinates for species, only keep species with p-val = 0.05
fit_below_spp <- fit_below %>%
scores(., display = "vectors") %>%
as.data.frame() %>%
rownames_to_column("species") %>%
full_join(., fit_below_pvals, by = "species") %>%
filter(pvals <= 0.01) %>% # limited number for visual clarity
filter(!species == 'standtype_ID')
# new plot
nmdsbelow_plot_new <- ggplot(plot_below_df, aes(x = NMDS1, y = NMDS2)) +
coord_equal() +
geom_point(aes(color = stand, shape = stand), size = 3, alpha = 0.8) +
stat_ellipse(aes(color = stand)) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
geom_segment(data = fit_below_spp, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text(data = fit_below_spp, aes(label = species),
position = position_jitter(width = 0.1, height = 0.2))
nmdsbelow_plot_new + theme_bw()
# extract coordinates for species, only keep species with p-val = 0.05
fit_below_spp <- fit_below %>%
scores(., display = "vectors") %>%
as.data.frame() %>%
rownames_to_column("species") %>%
full_join(., fit_below_pvals, by = "species") %>%
filter(pvals <= 0.004) %>% # limited number for visual clarity
filter(!species == 'standtype_ID')
# new plot
nmdsbelow_plot_new <- ggplot(plot_below_df, aes(x = NMDS1, y = NMDS2)) +
coord_equal() +
geom_point(aes(color = stand, shape = stand), size = 3, alpha = 0.8) +
stat_ellipse(aes(color = stand)) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
geom_segment(data = fit_below_spp, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text(data = fit_below_spp, aes(label = species),
position = position_jitter(width = 0.1, height = 0.2))
nmdsbelow_plot_new + theme_bw()
# extract coordinates for species, only keep species with p-val = 0.05
fit_below_spp <- fit_below %>%
scores(., display = "vectors") %>%
as.data.frame() %>%
rownames_to_column("species") %>%
full_join(., fit_below_pvals, by = "species") %>%
filter(pvals <= 0.002) %>% # limited number for visual clarity
filter(!species == 'standtype_ID')
# new plot
nmdsbelow_plot_new <- ggplot(plot_below_df, aes(x = NMDS1, y = NMDS2)) +
coord_equal() +
geom_point(aes(color = stand, shape = stand), size = 3, alpha = 0.8) +
stat_ellipse(aes(color = stand)) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
geom_segment(data = fit_below_spp, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text(data = fit_below_spp, aes(label = species),
position = position_jitter(width = 0.1, height = 0.2))
nmdsbelow_plot_new + theme_bw()
view(seedbank_bysitecore_nmdsprep_num) # only numbers
write.csv(seedbank_bysitecore_nmdsprep_num, "~/Dropbox/GRADSCHOOL/Dissertation/R_dissertation/chaparraldegradation_2022b/processed/seedbank_NMDS_202310.csv")
# the AUTOTRANSFORM = F skips the automatic data transformations and uses the input data as is
# - when the raw data contains the information you need (e.g., abundance)
# - when you have a small number of samples or small number of variables
# - when you want to preseve the original scale of the data (e.g., interested in the absolute differences betwen two sets of measurements)
seedbank_bysitecore_nmds <- metaMDS(seedbank_bysitecore_nmdsprep_num, autotransform = F)
scores(seedbank_bysitecore_nmdsprep_num)
view(seedbank_bysitecore_nmds)
scores(seedbank_bysitecore_nmds)
scores(seedbank_bysitecore_nmds)
seedbank_bysitecore_nmds
nmds_df <- data.frame(seedbank_bysitecore_nmds$points, seedbank_bysitecore_nmdsprep) # from chatgpt
ggplot(nmds_df, aes(x = MDS1, y = MDS2, color = stand, shape = stand)) +
geom_point(size = 3, alpha = 0.8) +
scale_color_manual(values = c("gray0", "gray30", "gray60")) +
theme_bw() +
stat_ellipse(linetype = 2, size = 1) +
labs(title = "NMDS: by seed bank germination counts", color = "Stand type", shape = "Stand type")
```{r ggplot color}
seedbank_nmds_plot_color <- ggplot(nmds_df, aes(x = MDS1, y = MDS2, color = stand, shape = stand)) +
geom_point(size = 3, alpha = 0.8) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
theme_bw() +
coord_equal() +
#coord_fixed() +
#theme_ipsum_rc() +
theme(legend.position = c(0.15, 0.83)) + # x, y left corner: 0,0
#stat_ellipse(level = .95, linetype = 2, size = 1) +
stat_ellipse(linetype = 2, size = 1) +
labs(title = "NMDS: by seed bank germination counts", color = "Stand type", shape = "Stand type")
seedbank_nmds_plot_color
nmds_above_df <- data.frame(abcover_byspecies_NMDS$points, abcover_byspecies_nmdsprep) # code from chatgpt. Adds NMDS1 and NMDS2 values to dataframe.
seedbank_nmds_plot_color <- ggplot(nmds_df, aes(x = MDS1, y = MDS2, color = stand, shape = stand)) +
geom_point(size = 3, alpha = 0.8) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
theme_bw() +
coord_equal() +
#coord_fixed() +
#theme_ipsum_rc() +
theme(legend.position = c(0.15, 0.83)) + # x, y left corner: 0,0
#stat_ellipse(level = .95, linetype = 2, size = 1) +
stat_ellipse(linetype = 2, size = 1) +
labs(title = "NMDS: by seed bank germination counts", color = "Stand type", shape = "Stand type")
seedbank_nmds_plot_color
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # includes ggplot2, dplyr, tidyr, readr, purr, tibble, stringr, forcats
library(ggplot2) # data visualization
library(readr)
library(dplyr)
library(ggpubr) # customize ggplot2 for publication
library(broom)
library(AICcmodavg)
library(vegan)
library(readxl) # for .xls and .xlsx sheets
library(janitor)
library(calecopal)
library(multcompView)
library(plotly)
library(ggvegan)
# dune data: https://www.rpubs.com/RGrieger/545184
#
seedbank_load_raw <- read.csv("~/Dropbox/GRADSCHOOL/Dissertation/R_dissertation/chaparraldegradation_2022b/deg_seedbank_20231007.csv", header = TRUE, na.strings=c("","NA"))
seedbank_load <- seedbank_load_raw %>%
select(c("stand", "site", "soilcore", "depth_name", "treatment", "rep", "species_diversity", "genus_abundance", "lifeform", "status", "lifescycle", "family", "count"))
seedbank_load$count <- as.numeric(seedbank_load$count)
str(seedbank_load)
print(seedbank_load)
unique(seedbank_load$stand)
unique(seedbank_load$site)
unique(seedbank_load$soilcore)
unique(seedbank_load$depth_name)
unique(seedbank_load$treatment)
unique(seedbank_load$status)
unique(seedbank_load$species)
view(seedbank_load)
dim(seedbank_load)
# [1] 2126   13
head(seedbank_load)
tail(seedbank_load)
# convert dataframe to tibble
seedbank_load <- as_tibble(seedbank_load)
class(seedbank_load) # now a tibble
seedbank_load_v <- seedbank_load %>%
mutate(stand = fct_relevel(stand,
"intact", "enhanced", "degraded")) %>%
mutate(treatment = fct_relevel(treatment,
"control", "charate", "oven", "ovenchar"))
unique(seedbank_load_v$status)
# combine SITE and CORE to one column
seedbank_load_v$stand_core <- paste(seedbank_load_v$site, seedbank_load_v$soilcore, sep="_")
# combine SITE_CORE and DEPT to one column
seedbank_load_v$stand_core_depth <- paste(seedbank_load_v$stand_core, seedbank_load_v$depth_name, sep="_")
# combine SITE_CORE_DEPTH and TREATMENT to one column
seedbank_load_v$stand_core_depth_treat <- paste(seedbank_load_v$stand_core_depth, seedbank_load_v$treatment, sep="_")
glimpse(seedbank_load_v)
seedbank_load_v_omitpretreatment <- seedbank_load_v %>%
filter(!str_detect(treatment, "pretreat"))
head(seedbank_load_v_omitpretreatment)
unique(seedbank_load_v_omitpretreatment$treatment) # list unique treatments --> ordered: control, charate, oven, ovenchar
unique(seedbank_load_v_omitpretreatment$status) # list unique treatments --> native, nonnative
unique(seedbank_load_v_omitpretreatment$genus_abundance) # list unique species --> 52 species
unique(seedbank_load_v_omitpretreatment$stand_core) # unique stand_core --> 26 = 7 + 10 + 9
# species in columns
# sites or observations in rows
# this is the df you'll call to set GROUPS: seedbank_bysitecore
seedbank_bysitecore <- seedbank_load_v_omitpretreatment %>%
group_by(stand, site, stand_core, genus_abundance) %>% # by stand_core and species
# This will give a data point for every species based on germination numbers per species
#group_by(stand_core_depth, species) %>% # by stand_core_depth - DOES NOT CONSIDER TREATMENT
#group_by(stand_core_detph_treat, species) %>% # by stand_core_depth_treat
filter(!is.na(genus_abundance)) %>% # omit blank cells in species
dplyr::summarize(totalgerm_genus = sum(count))
view(seedbank_bysitecore) # df before transpose - use for ellipses
# species in columns
# sites or observations in rows
# this is the df you'll call to set GROUPS: seedbank_bysitecore
seedbank_bysitecore <- seedbank_load_v_omitpretreatment %>%
group_by(stand, site, stand_core, genus_abundance) %>% # by stand_core and species
# This will give a data point for every species based on germination numbers per species
#group_by(stand_core_depth, species) %>% # by stand_core_depth - DOES NOT CONSIDER TREATMENT
#group_by(stand_core_detph_treat, species) %>% # by stand_core_depth_treat
filter(!is.na(genus_abundance)) %>% # omit blank cells in species
dplyr::summarize(totalgerm_genus = sum(count))
view(seedbank_bysitecore) # df before transpose - use for ellipses
# species in columns down
# observations or sites in rows across
seedbank_bysitecore_nmdsprep <- seedbank_bysitecore %>%
tidyr::spread(genus_abundance, totalgerm_genus) %>% # transpose data so columns are stand_core_depth
#tidyr::spread(stand_core_depth, totalgerm) %>% # transpose data so columns are stand_core_depth
# tidyr::spread(stand_core_depth_treat, totalgerm) %>% # transpose data so columns are stand_core_depth_treat
replace(is.na(.), 0) # replace NA with zeros --> isn't compatible with character columns
view(seedbank_bysitecore_nmdsprep)
# You don't need to run this right now
seedbank_bysitecore_nmdsprep_num <- seedbank_bysitecore_nmdsprep %>%
# use the ungroup() function to take out grouping
ungroup() %>%
select(!c(stand_core, stand, site)) %>% # de-select these columns
replace(is.na(.), 0)
view(seedbank_bysitecore_nmdsprep_num) # only numbers
# 26 x 42
write.csv(seedbank_bysitecore_nmdsprep_num, "~/Dropbox/GRADSCHOOL/Dissertation/R_dissertation/chaparraldegradation_2022b/processed/seedbank_NMDS_202310.csv")
# USE THIS ONE!
# str(seedbank_bysitecore_nmdsprep_num)
# stand_core_depth -->  tibble [89 × 52]
# the AUTOTRANSFORM = F skips the automatic data transformations and uses the input data as is
# - when the raw data contains the information you need (e.g., abundance)
# - when you have a small number of samples or small number of variables
# - when you want to preseve the original scale of the data (e.g., interested in the absolute differences betwen two sets of measurements)
seedbank_bysitecore_nmds <- metaMDS(seedbank_bysitecore_nmdsprep_num, autotransform = F)
# uses the RAUP-CRICK dissimilarity index to calculate pairwise dissimilarities
# - adjusts for spp richness
# - downweights importance of rare spp
# - more useful when interested in community STRUCTURE rather than individual species
# - takes into account differences in species evenness
#seedbank_bysitecore_nmds <- metaMDS(seedbank_bysitecore_nmdsprep_num, distance = "raup")
# stress tests are really low ==> I may have insufficient data. :/
scores(seedbank_bysitecore_nmds)
stressplot(seedbank_bysitecore_nmds)
# if stress tests are really low ==> I may have insufficient data. :/
#plot_df <- scores(seedbank_bysitecore_nmds, display = "sites") %>% # from An's code
#  as.data.frame() %>%
#  rownames_to_column("stand_core") %>%
#  full_join(seedbank_bysitecore, by = "stand_core")
nmds_df <- data.frame(seedbank_bysitecore_nmds$points, seedbank_bysitecore_nmdsprep) # from chatgpt
ggplot(nmds_df, aes(x = MDS1, y = MDS2, color = stand, shape = stand)) +
geom_point(size = 3, alpha = 0.8) +
scale_color_manual(values = c("gray0", "gray30", "gray60")) +
theme_bw() +
stat_ellipse(linetype = 2, size = 1) +
labs(title = "NMDS: by seed bank germination counts", color = "Stand type", shape = "Stand type")
seedbank_nmds_plot_color <- ggplot(nmds_df, aes(x = MDS1, y = MDS2, color = stand, shape = stand)) +
geom_point(size = 3, alpha = 0.8) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
theme_bw() +
coord_equal() +
#coord_fixed() +
#theme_ipsum_rc() +
theme(legend.position = c(0.15, 0.83)) + # x, y left corner: 0,0
#stat_ellipse(level = .95, linetype = 2, size = 1) +
stat_ellipse(linetype = 2, size = 1) +
labs(title = "NMDS: by seed bank germination counts", color = "Stand type", shape = "Stand type")
seedbank_nmds_plot_color
nmds_above_df <- data.frame(abcover_byspecies_NMDS$points, abcover_byspecies_nmdsprep) # code from chatgpt. Adds NMDS1 and NMDS2 values to dataframe.
seedbank_bysitecore_nmdsprep <- seedbank_bysitecore_nmdsprep %>%
mutate(standtype_ID = 1)
seedbank_bysitecore_nmdsprep$standtype_ID <- 1:26 #shorten df to first 26 rows
plot_below_df <- scores(seedbank_bysitecore_nmds, display = "sites") %>%
as.data.frame() %>%
rownames_to_column("standtype_ID") %>%
mutate_at(c('standtype_ID'), as.numeric) %>%
full_join(seedbank_bysitecore_nmdsprep, by = "standtype_ID") %>%
select(!c(standtype_ID))
# envfit() takes the output of metaMDS() and the species matrix you created
fit_below <- envfit(seedbank_bysitecore_nmds, seedbank_bysitecore_nmdsprep, perm = 999) # pvalues for spp and stand, site, stand_core
# extract p-values for each species
fit_below_pvals <- fit_below$vectors$pvals %>%
as.data.frame() %>%
rownames_to_column("species") %>%
dplyr::rename("pvals" = ".") %>%
filter(!species == 'standtype_ID')
view(fit_below_pvals)
# extract coordinates for species, only keep species with p-val = 0.05
fit_below_spp <- fit_below %>%
scores(., display = "vectors") %>%
as.data.frame() %>%
rownames_to_column("species") %>%
full_join(., fit_below_pvals, by = "species") %>%
filter(pvals <= 0.00) %>% # limited number for visual clarity
filter(!species == 'standtype_ID')
# new plot
nmdsbelow_plot_new <- ggplot(plot_below_df, aes(x = NMDS1, y = NMDS2)) +
coord_equal() +
geom_point(aes(color = stand, shape = stand), size = 3, alpha = 0.8) +
stat_ellipse(aes(color = stand)) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
geom_segment(data = fit_below_spp, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text(data = fit_below_spp, aes(label = species),
position = position_jitter(width = 0.1, height = 0.2))
nmdsbelow_plot_new + theme_bw()
# extract coordinates for species, only keep species with p-val = 0.05
fit_below_spp <- fit_below %>%
scores(., display = "vectors") %>%
as.data.frame() %>%
rownames_to_column("species") %>%
full_join(., fit_below_pvals, by = "species") %>%
filter(pvals <= 0.001) %>% # limited number for visual clarity
filter(!species == 'standtype_ID')
# new plot
nmdsbelow_plot_new <- ggplot(plot_below_df, aes(x = NMDS1, y = NMDS2)) +
coord_equal() +
geom_point(aes(color = stand, shape = stand), size = 3, alpha = 0.8) +
stat_ellipse(aes(color = stand)) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
geom_segment(data = fit_below_spp, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text(data = fit_below_spp, aes(label = species),
position = position_jitter(width = 0.1, height = 0.2))
nmdsbelow_plot_new + theme_bw()
# extract coordinates for species, only keep species with p-val = 0.05
fit_below_spp <- fit_below %>%
scores(., display = "vectors") %>%
as.data.frame() %>%
rownames_to_column("species") %>%
full_join(., fit_below_pvals, by = "species") %>%
filter(pvals <= 0.05) %>% # limited number for visual clarity
filter(!species == 'standtype_ID')
# new plot
nmdsbelow_plot_new <- ggplot(plot_below_df, aes(x = NMDS1, y = NMDS2)) +
coord_equal() +
geom_point(aes(color = stand, shape = stand), size = 3, alpha = 0.8) +
stat_ellipse(aes(color = stand)) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
geom_segment(data = fit_below_spp, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text(data = fit_below_spp, aes(label = species),
position = position_jitter(width = 0.1, height = 0.2))
nmdsbelow_plot_new + theme_bw()
# extract coordinates for species, only keep species with p-val = 0.05
fit_below_spp <- fit_below %>%
scores(., display = "vectors") %>%
as.data.frame() %>%
rownames_to_column("species") %>%
full_join(., fit_below_pvals, by = "species") %>%
filter(pvals <= 0.02) %>% # limited number for visual clarity
filter(!species == 'standtype_ID')
# new plot
nmdsbelow_plot_new <- ggplot(plot_below_df, aes(x = NMDS1, y = NMDS2)) +
coord_equal() +
geom_point(aes(color = stand, shape = stand), size = 3, alpha = 0.8) +
stat_ellipse(aes(color = stand)) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
geom_segment(data = fit_below_spp, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text(data = fit_below_spp, aes(label = species),
position = position_jitter(width = 0.1, height = 0.2))
nmdsbelow_plot_new + theme_bw()
# extract coordinates for species, only keep species with p-val = 0.05
fit_below_spp <- fit_below %>%
scores(., display = "vectors") %>%
as.data.frame() %>%
rownames_to_column("species") %>%
full_join(., fit_below_pvals, by = "species") %>%
filter(pvals <= 0.01) %>% # limited number for visual clarity
filter(!species == 'standtype_ID')
# new plot
nmdsbelow_plot_new <- ggplot(plot_below_df, aes(x = NMDS1, y = NMDS2)) +
coord_equal() +
geom_point(aes(color = stand, shape = stand), size = 3, alpha = 0.8) +
stat_ellipse(aes(color = stand)) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
geom_segment(data = fit_below_spp, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text(data = fit_below_spp, aes(label = species),
position = position_jitter(width = 0.1, height = 0.2))
nmdsbelow_plot_new + theme_bw()
# extract coordinates for species, only keep species with p-val = 0.05
fit_below_spp <- fit_below %>%
scores(., display = "vectors") %>%
as.data.frame() %>%
rownames_to_column("species") %>%
full_join(., fit_below_pvals, by = "species") %>%
filter(pvals <= 0.003) %>% # limited number for visual clarity
filter(!species == 'standtype_ID')
# new plot
nmdsbelow_plot_new <- ggplot(plot_below_df, aes(x = NMDS1, y = NMDS2)) +
coord_equal() +
geom_point(aes(color = stand, shape = stand), size = 3, alpha = 0.8) +
stat_ellipse(aes(color = stand)) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
geom_segment(data = fit_below_spp, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text(data = fit_below_spp, aes(label = species),
position = position_jitter(width = 0.1, height = 0.2))
nmdsbelow_plot_new + theme_bw()
# new plot
nmdsbelow_plot_new <- ggplot(plot_below_df, aes(x = NMDS1, y = NMDS2)) +
coord_equal() +
geom_point(aes(color = stand, shape = stand), size = 3, alpha = 0.8) +
stat_ellipse(aes(color = stand)) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
geom_segment(data = fit_below_spp, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text(data = fit_below_spp, aes(label = species),
position = position_jitter(width = 0.1, height = 0.3))
nmdsbelow_plot_new + theme_bw()
# new plot
nmdsbelow_plot_new <- ggplot(plot_below_df, aes(x = NMDS1, y = NMDS2)) +
coord_equal() +
geom_point(aes(color = stand, shape = stand), size = 3, alpha = 0.8) +
stat_ellipse(aes(color = stand)) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
geom_segment(data = fit_below_spp, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text(data = fit_below_spp, aes(label = species),
position = position_jitter(width = 0.2, height = 0.3))
nmdsbelow_plot_new + theme_bw()
# extract coordinates for species, only keep species with p-val = 0.05
fit_below_spp <- fit_below %>%
scores(., display = "vectors") %>%
as.data.frame() %>%
rownames_to_column("species") %>%
full_join(., fit_below_pvals, by = "species") %>%
filter(pvals <= 0.001) %>% # limited number for visual clarity
filter(!species == 'standtype_ID')
# new plot
nmdsbelow_plot_new <- ggplot(plot_below_df, aes(x = NMDS1, y = NMDS2)) +
coord_equal() +
geom_point(aes(color = stand, shape = stand), size = 3, alpha = 0.8) +
stat_ellipse(aes(color = stand)) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
geom_segment(data = fit_below_spp, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text(data = fit_below_spp, aes(label = species),
position = position_jitter(width = 0.2, height = 0.3))
nmdsbelow_plot_new + theme_bw()
# new plot
nmdsbelow_plot_new <- ggplot(plot_below_df, aes(x = NMDS1, y = NMDS2)) +
coord_equal() +
geom_point(aes(color = stand, shape = stand), size = 3, alpha = 0.8) +
stat_ellipse(aes(color = stand)) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
geom_segment(data = fit_below_spp, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text(data = fit_below_spp, aes(label = species),
position = position_jitter(width = 0.3, height = 0.3))
nmdsbelow_plot_new + theme_bw()
# new plot
nmdsbelow_plot_new <- ggplot(plot_below_df, aes(x = NMDS1, y = NMDS2)) +
coord_equal() +
geom_point(aes(color = stand, shape = stand), size = 3, alpha = 0.8) +
stat_ellipse(aes(color = stand)) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
geom_segment(data = fit_below_spp, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text(data = fit_below_spp, aes(label = species),
position = position_jitter(width = 0.4, height = 0.3))
nmdsbelow_plot_new + theme_bw()
# new plot
nmdsbelow_plot_new <- ggplot(plot_below_df, aes(x = NMDS1, y = NMDS2)) +
coord_equal() +
geom_point(aes(color = stand, shape = stand), size = 3, alpha = 0.8) +
stat_ellipse(aes(color = stand)) +
scale_color_manual(values = c("darkgreen", "darkmagenta", "darkgoldenrod1")) +
geom_segment(data = fit_below_spp, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text(data = fit_below_spp, aes(label = species),
position = position_jitter(width = 0.2, height = 0.3))
nmdsbelow_plot_new + theme_bw()
