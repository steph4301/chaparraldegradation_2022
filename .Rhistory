# - when the raw data contains the information you need (e.g., abundance)
# - when you have a small number of samples or small number of variables
# - when you want to preseve the original scale of the data (e.g., interested in the absolute differences between two sets of measurements)
seedbank_nperg_bysamplocation_nmds <- metaMDS(seedbank_nperg_bysamplocation_nmdsprep_num,
autotransform = F, # or T
distance = "bray",   # bray or raup
k = 3, #dimentions
try = 100, #runs
trymax = 400)
seedbank_nperg_bysamplocation_nmds$stress
seedbank_nperg_bysamplocation_nmds$stress
stressplot(seedbank_nperg_bysamplocation_nmds) # A Shepard plot compares the observed dissimilarities (distances in the original data) to the fitted distances (distances in the reduced NMDS space).
gof <- goodness(seedbank_nperg_bysamplocation_nmds)
gof # Higher values indicate points that are poorly represented in the reduced-dimensional space, contributing more to the stress
plot(seedbank_nperg_bysamplocation_nmds, display = "sites", type = "none")
points(seedbank_nperg_bysamplocation_nmds, display = "sites", cex = 2* # 2x for visibility
gof/mean(gof)) # standardized by the mean
seed.nmds_nn <- ggplot(mds.df,
aes(x = NMDS1,
y = NMDS2
)) +
geom_point(size = 3, alpha = 0.8, aes(color = sub_grp, shape = sub_grp)) +
stat_ellipse(aes(color = sub_grp)) +  # Apply color here
theme(axis.title = element_text(size = 20)) +
theme(axis.text = element_text(size = 16)) +
geom_segment(data = spp %>%  filter(status == "nonnative"),
aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text_repel(data = spp  %>%  filter(status == "nonnative"),
aes(label = species),
position = position_jitter(width = 0.0, height = 0.1)) +
scale_color_manual(values = c("1" = "orange", "2" = "purple", "3" = "green"),
labels = c("1" = "DEG", "2" = "ENH", "3" = "INT")) +
scale_shape_manual(values = c("1" = 16, "2" = 17, "3" = 18),
labels = c("1" = "DEG", "2" = "ENH", "3" = "INT")) +
theme_bw() +
xlim(-3, 2)
# Combine plots
grid.arrange(seed.nmds_nat,
seed.nmds_nn,
nrow = 2,
ncol = 1,
widths = c(1), # Custom widths for each column
heights = c(1, 1) # Custom heights for each row
)
seed.nmds_nat <- ggplot(mds.df,
aes(x = NMDS1,
y = NMDS2
)) +
geom_point(size = 3, alpha = 0.8, aes(color = sub_grp, shape = sub_grp)) +
stat_ellipse(aes(color = sub_grp)) +  # Apply color here
theme(axis.title = element_text(size = 20)) +
theme(axis.text = element_text(size = 16)) +
geom_segment(data = spp %>%  filter(status == "native"),
aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text_repel(data = spp  %>%  filter(status == "native"),
aes(label = species),
position = position_jitter(width = 0.0, height = 0.1)) +
scale_color_manual(values = c("1" = "orange", "2" = "purple", "3" = "green"),
labels = c("1" = "DEG", "2" = "ENH", "3" = "INT")) +
scale_shape_manual(values = c("1" = 16, "2" = 17, "3" = 18),
labels = c("1" = "DEG", "2" = "ENH", "3" = "INT")) +
theme_bw() +
xlim(-3, 2)
seed.nmds <- ggplot(mds.df,
aes(x = NMDS1,
y = NMDS2
)) +
geom_point(size = 3, alpha = 0.8, aes(color = sub_grp, shape = sub_grp)) +
stat_ellipse(aes(color = sub_grp)) +  # Apply color here
theme(axis.title = element_text(size = 20)) +
theme(axis.text = element_text(size = 16)) +
geom_segment(data = spp,
aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text_repel(data = spp,
aes(label = species),
position = position_jitter(width = 0.0, height = 0.1)) +
scale_color_manual(values = c("1" = "orange", "2" = "purple", "3" = "green"),
labels = c("1" = "Group1 - DEG", "2" = "Group2 - ENH", "3" = "Group3 - INT")) +
scale_shape_manual(values = c("1" = 16, "2" = 17, "3" = 18),
labels = c("1" = "Group1 - DEG", "2" = "Group2 - ENH", "3" = "Group3 - INT")) +
theme_bw() +
xlim(-3, 2)
seed.nmds_nn <- ggplot(mds.df,
aes(x = NMDS1,
y = NMDS2
)) +
geom_point(size = 3, alpha = 0.8, aes(color = sub_grp, shape = sub_grp)) +
stat_ellipse(aes(color = sub_grp)) +  # Apply color here
theme(axis.title = element_text(size = 20)) +
theme(axis.text = element_text(size = 16)) +
geom_segment(data = spp %>%  filter(status == "nonnative"),
aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text_repel(data = spp  %>%  filter(status == "nonnative"),
aes(label = species),
position = position_jitter(width = 0.0, height = 0.1)) +
scale_color_manual(values = c("1" = "orange", "2" = "purple", "3" = "green"),
labels = c("1" = "DEG", "2" = "ENH", "3" = "INT")) +
scale_shape_manual(values = c("1" = 16, "2" = 17, "3" = 18),
labels = c("1" = "DEG", "2" = "ENH", "3" = "INT")) +
theme_bw() +
xlim(-3, 2)
# Combine plots
grid.arrange(seed.nmds_nat,
seed.nmds_nn,
nrow = 2,
ncol = 1,
widths = c(1), # Custom widths for each column
heights = c(1, 1) # Custom heights for each row
)
seed.nmds_nat
seed.nmds_nn <- ggplot(mds.df,
aes(x = NMDS1,
y = NMDS2
)) +
geom_point(size = 3, alpha = 0.8, aes(color = sub_grp, shape = sub_grp)) +
stat_ellipse(aes(color = sub_grp)) +  # Apply color here
theme(axis.title = element_text(size = 20)) +
theme(axis.text = element_text(size = 16)) +
geom_segment(data = spp %>%  filter(status == "nonnative"),
aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text_repel(data = spp  %>%  filter(status == "nonnative"),
aes(label = species),
position = position_jitter(width = 0.0, height = 0.1)) +
scale_color_manual(values = c("1" = "orange", "2" = "purple", "3" = "green"),
labels = c("1" = "DEG", "2" = "ENH", "3" = "INT")) +
scale_shape_manual(values = c("1" = 16, "2" = 17, "3" = 18),
labels = c("1" = "DEG", "2" = "ENH", "3" = "INT")) +
theme_bw() +
xlim(-3, 2)
seed.nmds_nn
seed.nmds_nat
# Combine plots
grid.arrange(seed.nmds_nat,
seed.nmds_nn,
nrow = 2,
ncol = 1,
widths = c(1), # Custom widths for each column
heights = c(1, 1) # Custom heights for each row
)
seed.nmds <- ggplot(mds.df,
aes(x = NMDS1,
y = NMDS2
)) +
geom_point(size = 3, alpha = 0.8, aes(color = sub_grp, shape = sub_grp)) +
stat_ellipse(aes(color = sub_grp)) +  # Apply color here
theme(axis.title = element_text(size = 20)) +
theme(axis.text = element_text(size = 16)) +
geom_segment(data = spp,
aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text_repel(data = spp,
aes(label = species),
position = position_jitter(width = 0.0, height = 0.1)) +
scale_color_manual(values = c("1" = "orange", "2" = "purple", "3" = "green"),
labels = c("1" = "Group1 - DEG", "2" = "Group2 - ENH", "3" = "Group3 - INT")) +
scale_shape_manual(values = c("1" = 16, "2" = 17, "3" = 18),
labels = c("1" = "Group1 - DEG", "2" = "Group2 - ENH", "3" = "Group3 - INT")) +
theme_bw() +
xlim(-3, 2)
seed.nmds_nat <- ggplot(mds.df,
aes(x = NMDS1,
y = NMDS2
)) +
geom_point(size = 3, alpha = 0.8, aes(color = sub_grp, shape = sub_grp)) +
stat_ellipse(aes(color = sub_grp)) +  # Apply color here
theme(axis.title = element_text(size = 20)) +
theme(axis.text = element_text(size = 16)) +
geom_segment(data = spp %>%  filter(status == "native"),
aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text_repel(data = spp  %>%  filter(status == "native"),
aes(label = species),
position = position_jitter(width = 0.0, height = 0.1)) +
scale_color_manual(values = c("1" = "orange", "2" = "purple", "3" = "green"),
labels = c("1" = "DEG", "2" = "ENH", "3" = "INT")) +
scale_shape_manual(values = c("1" = 16, "2" = 17, "3" = 18),
labels = c("1" = "DEG", "2" = "ENH", "3" = "INT")) +
theme_bw() +
xlim(-3, 2)
seed.nmds_nn <- ggplot(mds.df,
aes(x = NMDS1,
y = NMDS2
)) +
geom_point(size = 3, alpha = 0.8, aes(color = sub_grp, shape = sub_grp)) +
stat_ellipse(aes(color = sub_grp)) +  # Apply color here
theme(axis.title = element_text(size = 20)) +
theme(axis.text = element_text(size = 16)) +
geom_segment(data = spp %>%  filter(status == "nonnative"),
aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
col = "black") +
geom_text_repel(data = spp  %>%  filter(status == "nonnative"),
aes(label = species),
position = position_jitter(width = 0.0, height = 0.1)) +
scale_color_manual(values = c("1" = "orange", "2" = "purple", "3" = "green"),
labels = c("1" = "DEG", "2" = "ENH", "3" = "INT")) +
scale_shape_manual(values = c("1" = 16, "2" = 17, "3" = 18),
labels = c("1" = "DEG", "2" = "ENH", "3" = "INT")) +
theme_bw() +
xlim(-3, 2)
# Combine plots
grid.arrange(seed.nmds_nat,
seed.nmds_nn,
nrow = 2,
ncol = 1,
widths = c(1), # Custom widths for each column
heights = c(1, 1) # Custom heights for each row
)
```{r}
################## species richness
length(sort(unique(seedbank_load_v$species_diversity))) - 3 # 3 repeat species
(sort(unique(seedbank_load_v$species_diversity)))
################## genera richness
seed_genera <- seedbank_load_v %>%
dplyr::select(species_diversity) %>%
separate(col = species_diversity, into = c("Genus", "Species"), sep = " ") %>%
dplyr::select("Genus")
length(sort(unique(seed_genera$Genus))) - 1
length(sort(unique(seedbank_load_v$family))) - 1
seedbank_cluster <- seedbank_load_v %>%  # left join seedbank data with seedbank cluster labels
left_join(seed.subgrp.df, by = c("stand_core", "stand", "site")) %>%
rename(sdbk_clust = sub_grp) %>%
mutate(sdbk_clust = as.character(sdbk_clust)) %>%
mutate(species_diversity = case_when(
species_diversity == "Ribes spp." ~ "Ribes malvaceum",
TRUE ~ species_diversity)
)
names(seedbank_load_v)
names(seed.subgrp.df)
seedbank_cluster <- seedbank_load_v %>%  # left join seedbank data with seedbank cluster labels
left_join(seed.subgrp.df, by = c("stand_core", "stand", "site")) %>%
rename(sdbk_clust = sub_grp) %>%
mutate(sdbk_clust = as.character(sdbk_clust))
head(seedbank_load_v)
head(seed.subgrp.df)
view(seedbank_load_v)
view(seed.subgrp.df)
seedbank_cluster <- seedbank_load_v %>%  # left join seedbank data with seedbank cluster labels
left_join(seed.subgrp.df, by = c("stand_core"))
view(seedbank_cluster)
names(seedbank_cluster)
seedbank_cluster <- seedbank_load_v %>%  # left join seedbank data with seedbank cluster labels
left_join(seed.subgrp.df, by = c("stand_core")) %>%
rename(sdbk_clust = sub_grp) %>%
mutate(sdbk_clust = as.character(sdbk_clust)) %>%
mutate(species_diversity = case_when(
species_diversity == "Ribes spp." ~ "Ribes malvaceum",
TRUE ~ species_diversity)
)
spplist <- seedbank_cluster %>%
dplyr::select(species_diversity, lifeform, status, lifescycle, family, sdbk_clust, count) %>%
mutate(sdbk_clust = recode(sdbk_clust,
`1` = "DEG",
`2` = "MTX",
`3` = "INT")) %>%
pivot_wider(names_from = sdbk_clust, values_from = count) %>%
mutate(across(c("DEG", "MTX", "INT"), ~ ifelse(!is.na(.) & . != "NULL", "X", .))) %>%
gt() #%>%
# Export the table as a word doc.
gtsave(spplist,
"Ch1_Degradation_figures/spplist_dec22.docx", # can also export as .png
expand = 10)
view(spplist)
seedbank_cluster %>%
dplyr::select(species_diversity, lifeform, status, lifescycle, family, sdbk_clust, count) %>%
mutate(sdbk_clust = recode(sdbk_clust,
`1` = "DEG",
`2` = "MTX",
`3` = "INT")) %>%
pivot_wider(names_from = sdbk_clust, values_from = count) %>%
mutate(across(c("DEG", "MTX", "INT"), ~ ifelse(!is.na(.) & . != "NULL", "X", .)))
spplist <- seedbank_cluster %>%
dplyr::select(species_diversity, lifeform, status, lifescycle, family, sdbk_clust, count) %>%
mutate(sdbk_clust = recode(sdbk_clust,
`1` = "DEG",
`2` = "MTX",
`3` = "INT")) %>%
pivot_wider(names_from = sdbk_clust, values_from = count) %>%
mutate(across(c("DEG", "MTX", "INT"), ~ ifelse(!is.na(.) & . != "NULL", "X", .))) %>%
gt() #%>%
# Export the table as a word doc.
gtsave(spplist,
"Ch1_Degradation_figures/spplist_dec22.docx", # can also export as .png
expand = 10)
# Export the table as a word doc.
gtsave(spplist,
"Ch1_Degradation_figures/spplist_dec22.docx", # can also export as .png
expand = 10)
seeds <- seedbank_cluster %>%
dplyr::select(species_diversity, sdbk_clust, count, stand_core) %>%
mutate(sdbk_clust = recode(sdbk_clust,
`1` = "DEG",
`2` = "MTX",
`3` = "INT"),
species_diversity = case_when(
species_diversity == "Erodium spp." ~ "Erodium spp. (E. cicutarium, E. moschatum)",
species_diversity == "Erodium cicutarium" ~ "Erodium spp. (E. cicutarium, E. moschatum)",
species_diversity == "Erodium moschatum" ~ "Erodium spp. (E. cicutarium, E. moschatum)",
species_diversity == "Phacelia tanacetifolia" ~ "Phacelia spp. (P. tanacetifolia, P. viscida)",
species_diversity == "Phacelia viscida" ~ "Phacelia spp. (P. tanacetifolia, P. viscida)",
species_diversity == "Phacelia spp." ~ "Phacelia spp. (P. tanacetifolia, P. viscida)",
species_diversity == "Trifolium gracelentum" ~ "Trifolium spp. (T. gracelentum, T. willdenovii)",
species_diversity == "Trifolium willdenovii" ~ "Trifolium spp. (T. gracelentum, T. willdenovii)",
species_diversity == "Trifolium spp." ~ "Trifolium spp. (T. gracelentum, T. willdenovii)",
TRUE ~ species_diversity)
) %>%
filter(!species_diversity %in% c("Juncus bufonius", "Typha domingensis")) %>%
group_by(sdbk_clust, stand_core, species_diversity) %>%
summarize(total_count = sum(count)) %>%
pivot_wider(names_from = species_diversity, values_from = total_count) %>%
mutate(across(1:59, ~ replace_na(., 0)))
# Calculate species richness
spprich <- seeds %>%
rowwise() %>%
mutate(richness = specnumber(c_across(1:59))) %>%
ungroup() %>%
dplyr::select(sdbk_clust, stand_core, richness)
hist(spprich$richness)
shapiro.test(spprich$richness) # <- normal!
# Perform ANOVA to compare species richness among sites
anova_result <- aov(richness ~ sdbk_clust, data = spprich)
summary(anova_result)
TukeyHSD(anova_result)
spprich %>%
group_by(sdbk_clust) %>%
summarize(mean = round(mean(richness), 1),
se = round((sd(richness)) / sqrt(length(richness)),1))
spprich %>%
group_by(sdbk_clust) %>%
summarize(mean = round(mean(richness), 1),
se = round((sd(richness)) / sqrt(length(richness)),1))
```{r}
######## SHRUB spp rich x cluster
shrub_spprich <- seedbank_cluster %>%
filter(lifeform == "shrub" & status == "native" & count >0)
# [1] "Artemisia californica"      "Ceanothus oliganthus"       "Diplacus aurantiacus"       "Eriodictyon crassifolium"
# [5] "Malacothamnus fasciculatus" "Ribes malvaceum"            "Salvia leucophylla"         "Unknown A - shrub"
# [9] "Unknown D - brown dicot"
length(sort(unique(shrub_spprich$species_diversity)))
s_richclust <- shrub_spprich %>%
group_by(sdbk_clust)%>%
summarize(length(unique(species_diversity)))
s_richclust
shrub_spprich_bycore <- shrub_spprich %>%
group_by(sdbk_clust, stand_core)%>%
summarize(spp_rich = length(unique(species_diversity))) %>%
ungroup()
hist(shrub_spprich_bycore$spp_rich)
shapiro.test(shrub_spprich_bycore$spp_rich) # <- data: not normal
kruskal.test(spp_rich ~ sdbk_clust, data = shrub_spprich_bycore) # p-value = 0.002166
pairwise.wilcox.test(shrub_spprich_bycore$spp_rich, shrub_spprich_bycore$sdbk_clust, p.adjust.method = "BH")
boxplot(spp_rich ~ sdbk_clust, data = shrub_spprich_bycore)
forb_spprich <- seedbank_cluster %>%
filter(lifeform == "forb" & status == "native" & count > 0) %>%
filter(lifescycle == "annual" | lifescycle == "perennial" | lifescycle == "unknown")
length(sort(unique(forb_spprich$species_diversity))) - 2
forb_spprich %>%
group_by(sdbk_clust)%>%
summarize(N = length(unique(species_diversity)))
forb_spprich %>%
group_by(sdbk_clust)%>%
summarize(N = length(unique(species_diversity)))
forb_spprich <- seedbank_cluster %>%
filter(lifeform == "forb" & status == "native" & count > 0) %>%
filter(lifescycle == "annual" | lifescycle == "perennial" | lifescycle == "unknown")
length(sort(unique(forb_spprich$species_diversity))) - 2
forb_spprich_bycore <- forb_spprich %>%
group_by(sdbk_clust, stand_core)%>%
summarize(spp_rich = length(unique(species_diversity))) %>%
ungroup()
hist(forb_spprich_bycore$spp_rich)
shapiro.test(forb_spprich_bycore$spp_rich) # <--  normal!
aov(spp_rich ~ sdbk_clust, forb_spprich_bycore, conf.level = .95)
TukeyHSD(aov(spp_rich ~ sdbk_clust, forb_spprich_bycore), conf.level = .95)
# Fit: aov(formula = spp_rich ~ sdbk_clust, data = forb_spprich_bycore)
#
# $sdbk_clust
#         diff       lwr      upr     p adj
# 2-1 2.125000 0.3960244 3.853976 0.0141600 <-- spp rich is diff among all clusters
# 3-1 5.347222 3.6182466 7.076198 0.0000002
# 3-2 3.222222 1.5448695 4.899575 0.0002129
boxplot(spp_rich ~ sdbk_clust, forb_spprich_bycore)
natforb_cluster_spprich <- forb_spprich_bycore %>%
group_by(sdbk_clust) %>%
summarize(n_soilcores = length(unique(stand_core)),
natforbspp_rich_mean = mean(spp_rich),
natforbspp_rich_SD = sd(spp_rich),
SE = round(natforbspp_rich_SD/sqrt(n_soilcores),2)
) %>%
dplyr::select(!c(natforbspp_rich_SD))
natforb_cluster_spprich
## native forb spp in cluster 1 <-- 12 native forb spp.
natforb_spp1 <- forb_spprich %>%
filter(sdbk_clust == "1") %>%
group_by(species_diversity) %>%  # Group by species_diversity
summarise(across(c(lifeform, lifescycle), ~ unique(.)))
## native forb spp in cluster 2 <-- 19 native forb spp.
natforb_spp2 <- forb_spprich %>%
filter(sdbk_clust == "2") %>%
group_by(species_diversity) %>%  # Group by species_diversity
summarise(across(c(lifeform, lifescycle), ~ unique(.)))
## native forb spp in cluster 3 <-- 20 native forb spp.
natforb_spp3 <- forb_spprich %>%
filter(sdbk_clust == "3") %>%
group_by(species_diversity) %>%  # Group by species_diversity
summarise(across(c(lifeform, lifescycle), ~ unique(.)))
# unique to Cluser 1
setdiff(natforb_spp1$species_diversity,
union(natforb_spp2$species_diversity, natforb_spp3$species_diversity))
# unique to Cluser 2
setdiff(natforb_spp2$species_diversity,
union(natforb_spp1$species_diversity, natforb_spp3$species_diversity))
# unique to Cluser 3
setdiff(natforb_spp3$species_diversity,
union(natforb_spp1$species_diversity, natforb_spp2$species_diversity))
### species in all 3 soil clusters
L123 <- list(natforb_spp1$species_diversity, natforb_spp2$species_diversity, natforb_spp3$species_diversity)
Reduce(intersect, L123)
### in soil cluster 1 and 2
L12 <- list(natforb_spp1$species_diversity, natforb_spp2$species_diversity)
Reduce(intersect, L12)
### in soil cluster 2 and 3
L23 <- list(natforb_spp2$species_diversity, natforb_spp3$species_diversity)
Reduce(intersect, L23)
### in soil cluster 1 and 3
L13 <- list(natforb_spp1$species_diversity, natforb_spp3$species_diversity)
Reduce(intersect, L13)
forbNN_spprich <- seedbank_cluster %>%
filter(lifeform == "forb" & status == "nonnative" &  count > 0)
length(unique(forbNN_spprich$species_diversity)) # n = 10
forbNN_spprich %>%
group_by(sdbk_clust) %>%
summarize(N = length(unique(species_diversity)))
forbNN_spprich %>%
group_by(sdbk_clust) %>%
summarize(N = length(unique(species_diversity)))
TukeyHSD(aov(spp_rich ~ sdbk_clust, forb_spprich_bycore), conf.level = .95)
forb_spprich %>%
group_by(sdbk_clust)%>%
summarize(N = length(unique(species_diversity)))
forb_spprich %>%
group_by(sdbk_clust)%>%
summarize(N = length(unique(species_diversity)))
forb_spprich_bycore <- forb_spprich %>%
group_by(sdbk_clust, stand_core)%>%
summarize(spp_rich = length(unique(species_diversity))) %>%
ungroup()
hist(forb_spprich_bycore$spp_rich)
shapiro.test(forb_spprich_bycore$spp_rich) # <--  normal!
aov(spp_rich ~ sdbk_clust, forb_spprich_bycore, conf.level = .95)
TukeyHSD(aov(spp_rich ~ sdbk_clust, forb_spprich_bycore), conf.level = .95)
forbNN_spprich <- seedbank_cluster %>%
filter(lifeform == "forb" & status == "nonnative" &  count > 0)
length(unique(forbNN_spprich$species_diversity)) # n = 10
forbNN_spprich %>%
group_by(sdbk_clust) %>%
summarize(N = length(unique(species_diversity)))
forbNN_spprich %>%
group_by(sdbk_clust) %>%
summarize(N = length(unique(species_diversity)))
grass_spprich <- seedbank_cluster %>%
filter(lifeform == "grass" & status == "native" & count > 0) %>%
filter(lifescycle == "annual" | lifescycle == "perennial" | lifescycle == "unknown")
sort(unique(grass_spprich$species_diversity))
length(sort(unique(grass_spprich$species_diversity)))
grass_spprich %>%
group_by(sdbk_clust)%>%
summarize(N = length(unique(species_diversity)))
grass_spprich %>%
group_by(sdbk_clust)%>%
summarize(N = length(unique(species_diversity)))
# sdbk_clust    length(unique(species_diversity))
grass_spprich %>%
group_by(sdbk_clust)%>%
summarize(N = length(unique(species_diversity)))
# sdbk_clust    length(unique(species_diversity))
sort(unique(grass_spprich$species_diversity))
natgrass_spprich <- seedbank_cluster %>%
filter(lifeform == "grass" & status == "native" & count > 0) %>%
filter(lifescycle == "annual" | lifescycle == "perennial" | lifescycle == "unknown")
sort(unique(natgrass_spprich$species_diversity))
length(sort(unique(natgrass_spprich$species_diversity)))
natgrass_spprich %>%
group_by(sdbk_clust)%>%
summarize(N = length(unique(species_diversity)))
natgrass_spprich %>%
group_by(sdbk_clust)%>%
summarize(N = length(unique(species_diversity)))
seedbankgerm_cluster_prep <- germination_depthtreat %>% # left join seedbank cluster name to germ data
left_join(seed.subgrp.df, by = c("stand_core", "stand", "site")) %>%
rename(sdbk_clust = sub_grp) %>%
mutate(sdbk_clust = as.character(sdbk_clust)) %>%
dplyr::select(species_diversity, status, lifescycle, lifeform, family, sdbk_clust, n_per_g, stand_core, treatment, depth_name, stand_core_depth_treat) %>%
mutate(species_diversity = case_when(
species_diversity == "Erodium moschatum" ~ "Erodium spp.",
species_diversity == "Erodium cicutarium" ~ "Erodium spp.",
species_diversity == "Phacelia tanacetifolia" ~ "Phacelia spp.",
species_diversity == "Phacelia viscida" ~ "Phacelia spp.",
TRUE ~ species_diversity)
)
