# Eight clusters is best, adding more clusteres doesn't improve clustering
# My conclusion is 5 clusters is optimum
# Above tests suggest at least two, but are also not conclusive...
# Define function to compute Mantel correlation tests for different cluster assignments
compute_mantel_correlation <- function(hclust_obj, distance_matrix) {
# Initialize variables to store results
mantel_correlation <- numeric(length = length(hclust_obj$order) - 1)
# Iterate through different numbers of clusters
for (k in 2:length(hclust_obj$order)) {
cluster_assignments <- cutree(hclust_obj, k = k)
cluster_distance <- as.matrix(dist(cluster_assignments))
mantel_result <- mantel(cluster_distance, distance_matrix)
mantel_correlation[k - 1] <- mantel_result$statistic
# Print Mantel correlation for each number of clusters
print(paste("Mantel Correlation (r) for", k, "clusters:", mantel_result$statistic))
}
return(mantel_correlation)
}
# Create Cluster and then run tests
Hclust.result <- agnes(d, method = "gaverage", par.method = -0.25)
mantel_results <- round(compute_mantel_correlation(Hclust.result, d), 3)
# Find the optimal number of clusters based on the largest Mantel correlation, r
optimal_clusters <- which.max(mantel_results) + 1  # Add 1 to convert index to number of clusters
print(paste("Optimal Number of Clusters:", optimal_clusters))
# 4 groups = 0.608
# 6 groups = 0.560
# 5 groups = 0.554
# 7 groups = 0.520
####
#### Use ISA to determine optimal clusters
# Function to run multipatt() on k iterations of clusters and extract ISA values
run_multipatt_and_extract_ISA <- function(data, max_clusters) {
# Initialize an empty dataframe to store ISA values
isa_df <- data.frame(Species = colnames(data))
# Iterate through different numbers of clusters
for (k in 2:max_clusters) {
cluster_assignments <- cutree(agnes(vegdist(data, method = "bray"), method = "gaverage", par.method = -0.25), k = k)
# Convert cluster assignments to a factor
cluster_factor <- as.factor(cluster_assignments)
# Run multipatt() with the cluster factor
multipatt_result <- multipatt(data, cluster = cluster_factor, duleg = FALSE)
# Extract ISA values and p-values
isa_values <- multipatt_result$sign$index
p_values <- multipatt_result$sign$p.value
# Filter by p-value <= 0.05
significant_isa_values <- ifelse(p_values <= 0.05, isa_values, NA)
# Extract ISA values for each species and add to the dataframe
isa_df[[as.character(k)]] <- significant_isa_values
}
return(isa_df)
}
max_clusters <- 10  # Maximum number of clusters to iterate through
# Run multipatt() and extract ISA values for each species
isa_data <- run_multipatt_and_extract_ISA(df, max_clusters)
# Frequency distribution of number of significant ISA in each cluster step
frq.ISA <- isa_data %>%
pivot_longer(cols = 2:10, names_to = "Cluster", values_to = "ISA_SCORE") %>%
drop_na() %>%
group_by(Cluster) %>%
summarise(count = n()) %>%
arrange(as.numeric(Cluster))
#######
# Now calculate the sum of the differences in ISA scores from one step to the next
# When the indicator values of all species are decreasing, the clustering method does not explain anything more.
# Take difference of species index values
isa.diff.data <- isa_data %>%
mutate(k2 = `2`-`3`) %>%
mutate(k3 = `3`-`4`) %>%
mutate(k4 = `4`-`5`) %>%
mutate(k5 = `5`-`6`) %>%
mutate(k6 = `6`-`7`) %>%
mutate(k7 = `7`-`8`) %>%
mutate(k8 = `8`-`9`) %>%
mutate(k9 = `9`-`10`)
isa.diff.sum <- isa.diff.data %>%
dplyr::select(Species, 11:18) %>%
pivot_longer(cols = 2:9, names_to = "Cluster", values_to = "ISA_SCORE") %>%
drop_na() %>%
filter(ISA_SCORE <= 0) %>%
arrange(by = Cluster) %>%
group_by(Cluster) %>%
summarise(sum = sum(ISA_SCORE))
ggplot(isa.diff.sum,
aes(x = Cluster,
y = sum)) +
geom_bar(stat = "identity") +
labs(title = "", x = "Cluster", y = "Value") +
theme_minimal()
# The differences from 2 to 3 groups (-8) and from 3 to 4 groups (-4) are small,
# indicating that moving from 2 to 4 clusters doesnâ€™t significantly improve the ISA scores.
# This suggests that the structure in the data is relatively stable with these numbers of clusters,
# and adding more groups is not greatly improving how well species are associated with their clusters.
# The difference from 4 to 5 groups is -90, which is a noticeable drop. This indicates that introducing a 5th cluster starts to capture more distinct ecological patterns, improving the ISA scores.
# Optimal Number of Clusters:
# 4 clusters may be suboptimal due to the small improvement seen moving to 4 clusters from 3 (-4).
# 5 clusters is likely the best choice. The drop to -90 suggests that the 5-cluster solution
# is where distinct ecological patterns are maximized before significant over-segmentation occurs.
# Adding more than 5 clusters likely results in diminishing returns, as indicated by the sharp declines in ISA scores.
# Doing 5 clusters!
# Beta average
hcluster.abs.cover <- agnes(d, method = "gaverage", par.method = -0.25)
# Negative values of beta (e.g., -0.25) make the clustering process more similar to single linkage (minimum distance between clusters).
# Positive values of beta make the process more similar to complete linkage (maximum distance). beta = 0 corresponds to the standard average linkage (UPGMA).
plot(hcluster.abs.cover)
rect.hclust(hcluster.abs.cover, k = 5)
# Cut tree into groups
sub_grp <- cutree(hcluster.abs.cover, k = 5)
# Number of members in each cluster
table(sub_grp)
# Combine group labels into species matrix
temp.df <- data_pc %>%
rownames_to_column()
my_groups <- as.data.frame(sub_grp) %>%
rownames_to_column()
cluster.subgrp.df <- left_join(temp.df, my_groups, by = "rowname")
################
# Indicator Species Analysis
ISA.abs.cover <- multipatt(x = df, cluster = sub_grp, duleg = FALSE)
# A = The values are the **specificity** component of IV for that species in that combination of groups.
# B = The values are the **fidelity** component of IV for that species in that combination of groups
summary(ISA.abs.cover, indvalcomp=TRUE)
# Check for homogeneity of dispersion among groups, required for MANOVA
trt <- as.character(my_groups$sub_grp)
# There is significant dispersion within groups, and groups are unbalanced --- cannot use MANOVA (adonis)
anova(betadisper(d, trt))
mod <- betadisper(d, trt)
TukeyHSD(mod)
boxplot(mod)
plot(mod)
# Best option is MRPP
# The key idea is simple: if groups differ, the mean within-group dissimilarity should be smaller
# than the mean dissimilarity among randomly selected groups of the same size.
# Sort of low effect size but groups are meaningful!
results <- mrpp(d, grouping = sub_grp, permutations = 999)
results
results
results
# Best option is MRPP
# The key idea is simple: if groups differ, the mean within-group dissimilarity should be smaller
# than the mean dissimilarity among randomly selected groups of the same size.
# Sort of low effect size but groups are meaningful!
results <- mrpp(d, grouping = sub_grp, permutations = 999)
results
knitr::opts_chunk$set(echo = TRUE)
# Packages
library(tidyverse) # includes ggplot2, dplyr, tidyr, readr, purr, tibble, stringr, forcats
library(vegan)
library(here)
library(readxl)
# library(ggpubr) # customize ggplot2 for publication
# library(broom)
# library(AICcmodavg)
# library(janitor)
# library(multcompView)
# library(plotly)
# if (!require(devtools)) {
#   install.packages("devtools")
# }
# devtools::install_github("gavinsimpson/ggvegan")
# library(ggpmisc)
# load colors
# library(calecopal)
# Stand colors: INTACT, MATRIX, DEGRADED
# cal_palette(name = "chaparral3", n = 3, type = "continuous")
# deg <- "#D3E3CA"
# mat <- "#92A587"
# int <- "#2F3525"
# standcolors <- c(int, mat, deg)
#
# # Lifeform colors: shrub, grass, forb
# cal_palette(name = "chaparral3", n = 3, type = "continuous")
# shrub <- "#D3E3CA"
# grass <- "#92A587"
# forb <- "#2F3525"
# lifeformcolors <- c(int, mat, deg)
#
# # Status colors: native, exotic
# cal_palette(name = "chaparral1", n = 6, type = "continuous")
# native <- "#AEBFA8"
# exotic <- "#F19B34"
# statuscolors <- c(native, exotic)
# Read in data
# 2019 belt transect data
belt.spp_2019_load <- read.csv(here("deg_beltdensity_byspecies.csv"))
belt.spp_2019 <- belt_spp_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
mutate(species = case_when(species == "Bromus madritensis" ~ "Bromus rubens", # old name ~ new name
TRUE ~ species))
belt.spprich_total <- belt.spprich %>%
filter(species != "Erodium spp.") %>%
filter(species != "Galium spp.") %>%
filter(species != "Lupinus spp.") %>%
filter(species != "Phacelia spp.") %>%
filter(species != "Trifolium spp.")
# 2019 belt transect data
belt.spp_2019_load <- read.csv(here("deg_beltdensity_byspecies.csv"))
belt.spp_2019 <- belt_spp_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
mutate(species = case_when(species == "Bromus madritensis" ~ "Bromus rubens", # old name ~ new name
TRUE ~ species))
belt.spp_2019 <- belt.spp_2019_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
mutate(species = case_when(species == "Bromus madritensis" ~ "Bromus rubens", # old name ~ new name
TRUE ~ species))
### 2024 belt transect data
belt.spp_2024_load <- read.csv(here("belt_spprich_2024.csv"))
belt.spp_2024 <- belt.spp_2024_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
filter(species != "moss")
belt.spprich <- bind_rows(belt.spp_2019, belt.spp_2024)
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X))
list <- belt.spprich %>%
full_join(sppchar, by = "species")
#These are the species that are in belt.spprich that are NOT in the species characteristics list
a <- sort(unique(belt.spprich$species))
b <- sort(unique(sppchar$species))
a
b
difbelt <- setdiff(a, b)
difbelt
difchar <- setdiff(b, a)
difchar
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X))
view(difbelt)
# 2019 belt transect data
belt.spp_2019_load <- read.csv(here("deg_beltdensity_byspecies.csv"))
belt.spp_2019 <- belt.spp_2019_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
mutate(species = case_when(species == "Bromus madritensis" ~ "Bromus rubens", # old name ~ new name
TRUE ~ species))
sort(unique(belt.spp_2019$species))
# 2019 belt transect data
belt.spp_2019_load <- read.csv(here("deg_beltdensity_byspecies.csv"))
belt.spp_2019 <- belt.spp_2019_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
mutate(species = case_when(species == "Bromus madritensis" ~ "Bromus rubens", # old name ~ new name
TRUE ~ species))
### 2024 belt transect data
belt.spp_2024_load <- read.csv(here("belt_spprich_2024.csv"))
belt.spp_2024 <- belt.spp_2024_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
filter(species != "moss")
belt.spprich <- bind_rows(belt.spp_2019, belt.spp_2024)
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X))
list <- belt.spprich %>%
full_join(sppchar, by = "species")
#These are the species that are in belt.spprich that are NOT in the species characteristics list
a <- sort(unique(belt.spprich$species))
b <- sort(unique(sppchar$species))
difbelt <- setdiff(a, b)
difbelt
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X))
list <- belt.spprich %>%
full_join(sppchar, by = "species")
sppchar <- read.csv("processed/specieslist.csv")
view(sppchar)
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X))
view(belt.spp_2019)
view(belt.spp_2024)
list <- belt.spprich %>%
full_join(sppchar, by = "species")
view(belt.spprich)
view(sppchar)
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X))
list <- belt.spprich %>%
full_join(sppchar, by = "species")
#These are the species that are in belt.spprich that are NOT in the species characteristics list
a <- sort(unique(belt.spprich$species))
b <- sort(unique(sppchar$species))
difbelt <- setdiff(a, b)
difbelt
difchar <- setdiff(b, a)
difchar
#These are the species that are in belt.spprich that are NOT in the species characteristics list
a <- sort(unique(belt.spprich$species))
b <- sort(unique(sppchar$species))
difbelt <- setdiff(a, b)
difbelt
speciesmissingfrom.sppchar <- setdiff(a, b)
speciesmissingfrom.sppchar
sppchar <- read.csv("processed/specieslist.csv")
sppchar
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X))
sppchar
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X, notes))
sppchar
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X, notes, ejepson))
sppchar
list <- belt.spprich %>%
full_join(sppchar, by = "species")
list
list <- belt.spprich %>%
left_join(sppchar, by = "species")
list
# 2019 belt transect data
belt.spp_2019_load <- read.csv(here("deg_beltdensity_byspecies.csv"))
belt.spp_2019 <- belt.spp_2019_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
mutate(species = case_when(species == "Bromus madritensis" ~ "Bromus rubens", # old name ~ new name
TRUE ~ species))
### 2024 belt transect data
belt.spp_2024_load <- read.csv(here("belt_spprich_2024.csv"))
belt.spp_2024 <- belt.spp_2024_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
filter(species != "moss")
belt.spprich <- bind_rows(belt.spp_2019, belt.spp_2024)
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X, notes, ejepson))
list <- belt.spprich %>%
left_join(sppchar, by = "species")
view(list)
# 2019 belt transect data
belt.spp_2019_load <- read.csv(here("deg_beltdensity_byspecies.csv"))
belt.spp_2019 <- belt.spp_2019_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
mutate(species = case_when(species == "Bromus madritensis" ~ "Bromus rubens", # old name ~ new name
TRUE ~ species))
### 2024 belt transect data
belt.spp_2024_load <- read.csv(here("belt_spprich_2024.csv"))
belt.spp_2024 <- belt.spp_2024_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
filter(species != "moss")
belt.spprich <- bind_rows(belt.spp_2019, belt.spp_2024)
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X, notes, ejepson))
list <- belt.spprich %>%
left_join(sppchar, by = "species")
list
list <- belt.spprich %>%
left_join(sppchar, by = "species")
#These are the species that are in belt.spprich that are NOT in the species characteristics list
a <- sort(unique(belt.spprich$species))
b <- sort(unique(sppchar$species))
speciesmissingfrom.sppchar <- setdiff(a, b)
speciesmissingfrom.sppchar
difchar <- setdiff(b, a)
difchar
speciesmissingfrom.belt <- setdiff(b, a)
speciesmissingfrom.belt <- setdiff(b, a)
speciesmissingfrom.belt
view(a)
view(b)
b
knitr::opts_chunk$set(echo = TRUE)
# Packages
library(tidyverse) # includes ggplot2, dplyr, tidyr, readr, purr, tibble, stringr, forcats
library(vegan)
library(here)
library(readxl)
# 2019 belt transect data
belt.spp_2019_load <- read.csv(here("deg_beltdensity_byspecies.csv"))
belt.spp_2019 <- belt.spp_2019_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
mutate(species = case_when(species == "Bromus madritensis" ~ "Bromus rubens", # old name ~ new name
TRUE ~ species))
### 2024 belt transect data
belt.spp_2024_load <- read.csv(here("belt_spprich_2024.csv"))
belt.spp_2024 <- belt.spp_2024_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
filter(species != "moss")
belt.spprich <- bind_rows(belt.spp_2019, belt.spp_2024)
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X, notes, ejepson))
list <- belt.spprich %>%
left_join(sppchar, by = "species")
#These are the species that are in belt.spprich that are NOT in the species characteristics list
a <- sort(unique(belt.spprich$species))
b <- sort(unique(sppchar$species))
speciesmissingfrom.sppchar <- setdiff(a, b)
speciesmissingfrom.sppchar
speciesmissingfrom.belt <- setdiff(b, a)
speciesmissingfrom.belt
# 2019 belt transect data
belt.spp_2019_load <- read.csv(here("deg_beltdensity_byspecies.csv"))
belt.spp_2019 <- belt.spp_2019_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
mutate(species = case_when(species == "Bromus madritensis" ~ "Bromus rubens", # old name ~ new name
TRUE ~ species))
### 2024 belt transect data
belt.spp_2024_load <- read.csv(here("belt_spprich_2024.csv"))
belt.spp_2024 <- belt.spp_2024_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
filter(species != "moss")
belt.spprich <- bind_rows(belt.spp_2019, belt.spp_2024)
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X, notes, ejepson))
list <- belt.spprich %>%
left_join(sppchar, by = "species")
#These are the species that are in belt.spprich that are NOT in the species characteristics list
a <- sort(unique(belt.spprich$species))
b <- sort(unique(sppchar$species))
speciesmissingfrom.sppchar <- setdiff(a, b)
speciesmissingfrom.sppchar
speciesmissingfrom.belt <- setdiff(b, a)
speciesmissingfrom.belt
view(a)
view(b)
a
b
belt.spp_2019_load <- read.csv(here("deg_beltdensity_byspecies.csv"))
belt.spp_2019 <- belt.spp_2019_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
mutate(species = case_when(species == "Bromus madritensis" ~ "Bromus rubens", # old name ~ new name
TRUE ~ species))
### 2024 belt transect data
belt.spp_2024_load <- read.csv(here("belt_spprich_2024.csv"))
belt.spp_2024 <- belt.spp_2024_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
filter(species != "moss")
belt.spprich <- bind_rows(belt.spp_2019, belt.spp_2024)
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X, notes, ejepson))
list <- belt.spprich %>%
left_join(sppchar, by = "species")
#These are the species that are in belt.spprich that are NOT in the species characteristics list
a <- sort(unique(belt.spprich$species))
b <- sort(unique(sppchar$species))
belt.spp_2019_load <- read.csv(here("deg_beltdensity_byspecies.csv"))
belt.spp_2019 <- belt.spp_2019_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
mutate(species = case_when(species == "Bromus madritensis" ~ "Bromus rubens", # old name ~ new name
TRUE ~ species))
### 2024 belt transect data
belt.spp_2024_load <- read.csv(here("belt_spprich_2024.csv"))
belt.spp_2024 <- belt.spp_2024_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
filter(species != "moss")
belt.spprich <- bind_rows(belt.spp_2019, belt.spp_2024)
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X, notes, ejepson))
list <- belt.spprich %>%
left_join(sppchar, by = "species")
#These are the species that are in belt.spprich that are NOT in the species characteristics list
a <- sort(unique(belt.spprich$species))
b <- sort(unique(sppchar$species))
speciesmissingfrom.sppchar <- setdiff(a, b)
speciesmissingfrom.sppchar
speciesmissingfrom.sppchar
speciesmissingfrom.belt
speciesmissingfrom.sppchar
# 2019 belt transect data
belt.spp_2019_load <- read.csv(here("deg_beltdensity_byspecies.csv"))
belt.spp_2019 <- belt.spp_2019_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
mutate(species = case_when(species == "Bromus madritensis" ~ "Bromus rubens", # old name ~ new name
TRUE ~ species))
### 2024 belt transect data
belt.spp_2024_load <- read.csv(here("belt_spprich_2024.csv"))
belt.spp_2024 <- belt.spp_2024_load %>%
dplyr::select(site, rep, species) %>%
mutate(site_rep = paste(site, rep, sep = ".")) %>%
filter(species != "moss")
belt.spprich <- bind_rows(belt.spp_2019, belt.spp_2024)
### species characteristics
sppchar <- read.csv("processed/specieslist.csv") %>% # species and their characteristics :) Created in 1.1_transect_continuous.Rmd
dplyr::select(!c(X, notes, ejepson))
list <- belt.spprich %>%
left_join(sppchar, by = "species")
#These are the species that are in belt.spprich that are NOT in the species characteristics list
a <- sort(unique(belt.spprich$species))
b <- sort(unique(sppchar$species))
speciesmissingfrom.sppchar <- setdiff(a, b)
speciesmissingfrom.sppchar
sppchar
view(belt.spprich)
view(list)
list
view(list)
